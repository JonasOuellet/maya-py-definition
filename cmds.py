

def insertListItem(*args, **kwargs):
    """
    
    """
    pass


def RenderSequence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CylindricalProjection(*args, **kwargs):
    """
    unknown
    """
    pass


def SurfaceFlow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClosestPointOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorRestoreLastClosedTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def lookThru(farClip=None, fc=None, nearClip=None, nc=None, *args, **kwargs):
    """
    This command sets a particular camera to look through in a view. This command may also be used to view the negative z axis of lights or other DAG objects. The standard camera tools can then be used to place the object. 
    """
    pass


def pixelMove(*args, **kwargs):
    """
    The pixelMove command moves objects by what appears as pixel units based on the current view. It takes two integer arguments which specify the direction in screen space an object should appear to move. The vector between the center pixel of the view and the specified offset is mapped to some world space vector which defines the relative amount to move the selected objects. The mapping is dependent upon the view. 
    """
    pass


def arnoldIpr(*args, **kwargs):
    """
    
    """
    pass


def UVEditorToggleTextureBorderDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRefreshAllSwatchesOnDisk(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyExtrudeVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGraphRearrange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BevelPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IKHandleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeSpringAnimationOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubstituteGeometryOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorAtPoint(coordU=None, u=None, coordV=None, v=None, maxU=None, xu=None, maxV=None, xv=None, minU=None, mu=None, minV=None, mv=None, output=None, o=None, samplesU=None, su=None, samplesV=None, sv=None, *args, **kwargs):
    """
    The 
    """
    pass


def blendCtx(*args, **kwargs):
    """
    
    """
    pass


def clearCache(allNodes=None, all=None, computed=None, c=None, dirty=None, d=None, *args, **kwargs):
    """
    Even though dependency graph values are computed or dirty they may still occupy space temporarily within the nodes.This command goes in to all of the data that can be regenerated if required and removes it from the caches (datablocks), thus clearing up space in memory.
    """
    pass


def dR_viewLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_IsSubstanceRelocalized(*args, **kwargs):
    """
    
    """
    pass


def textureDeformer(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, deformerTools=None, dt=None, direction=None, d=None, envelope=None, en=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, offset=None, o=None, parallel=None, par=None, pointSpace=None, ps=None, prune=None, pr=None, remove=None, rm=None, split=None, sp=None, strength=None, s=None, vectorOffset=None, vo=None, vectorSpace=None, vsp=None, vectorStrength=None, vs=None, *args, **kwargs):
    """
    This command creates a texture deformer for the object. The selected objects are the input geometry objects. The deformer node name will be returned. 
    """
    pass


def CreateHairOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SwapBlendShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgCreateIgSplineEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyDelVertex(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Deletes vertices. Joins two edges which have a common vertex. The vertices must be connected to exactly two edges (so-called "winged"). 
    """
    pass


def NodeEditorDeleteNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdEditUV(angle=None, a=None, pivotU=None, pu=None, pivotV=None, pv=None, relative=None, r=None, rotation=None, rot=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, uValue=None, u=None, uvSetName=None, uvs=None, vValue=None, v=None, *args, **kwargs):
    """
    Command edits uvs on subdivision surfaces. When used with the query flag, it returns the uv values associated with the specified components.
    """
    pass


def OutlinerToggleTimeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timerX(startTime=None, st=None, *args, **kwargs):
    """
    Used to calculate elapsed time. This command returns sub-second accurate time values. It is useful from scripts for timing the length of operations. Call this command before and after the operation you wish to time. On the first call, do not use any flags. It will return the start time. Save this value. After the operation, call this command a second time, and pass the saved start time using the -st flag. The elapsed time will be returned. 
    """
    pass


def pointLight(decayRate=None, d=None, discRadius=None, drs=None, exclusive=None, exc=None, intensity=None, i=None, name=None, n=None, position=None, pos=None, rgb=None, rgb=None, rotation=None, rot=None, shadowColor=None, sc=None, shadowDither=None, sd=None, shadowSamples=None, sh=None, softShadow=None, ss=None, useRayTraceShadows=None, rs=None, *args, **kwargs):
    """
    The pointLight command is used to edit the parameters of existing pointLights, or to create new ones. The default behaviour is to create a new pointlight. 
    """
    pass


def polyMergeFacet(firstFacet=None, ff=None, mergeMode=None, mm=None, secondFacet=None, sf=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The second face becomes a hole in the first face.
    """
    pass


def XgPreview(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyBoolOp(object=None, o=None, operation=None, op=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a new poly as the result of a boolean operation on input polys : union, intersection, difference. 
    """
    pass


def SelectShortestEdgePathTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LightCentricLightLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_gridAllTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorCreateIterateCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVCameraBasedProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xformConstraint(alongNormal=None, n=None, live=None, l=None, type=None, t=None, *args, **kwargs):
    """
    This command allows you to change the transform constraint used by the transform tools during component transforms.
    """
    pass


def copyKey(animLayer=None, al=None, animation=None, an=None, attribute=None, at=None, clipboard=None, cb=None, controlPoints=None, cp=None, float=None, f=None, forceIndependentEulerAngles=None, fea=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, option=None, o=None, shape=None, s=None, time=None, t=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def CopySkinWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def vectorize(browserView=None, bv=None, byFrame=None, bf=None, camera=None, c=None, combineFillsEdges=None, cfe=None, currentFrame=None, cf=None, curveTolerance=None, ct=None, customExtension=None, ce=None, detailLevel=None, dl=None, edgeColor=None, ec=None, edgeDetail=None, ed=None, edgeStyle=None, es=None, edgeWeight=None, ew=None, endFrame=None, ef=None, filenameFormat=None, ff=None, fillStyle=None, fs=None, flashVersion=None, fv=None, frameRate=None, fr=None, height=None, h=None, hiddenEdges=None, he=None, highlightLevel=None, hl=None, highlights=None, hi=None, imageFormat=None, imageFormat=None, layer=None, l=None, minEdgeAngle=None, mea=None, outlinesAtIntersections=None, oai=None, outputFileName=None, of=None, pixelAspectRatio=None, par=None, reflectionDepth=None, rd=None, reflections=None, rf=None, renderLayers=None, rl=None, renderOptimization=None, ro=None, renderView=None, rv=None, secondaryCurveFitting=None, scf=None, shadows=None, sh=None, showBackFaces=None, sb=None, startFrame=None, sf=None, svgAnimation=None, sa=None, svgCompression=None, sc=None, width=None, w=None, *args, **kwargs):
    """
    This command renders Maya scenes to various vector and raster formats using the Maya Vector renderer.
    """
    pass


def NodeEditorGraphDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProfilerToolCpuView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyInfo(edgeToFace=None, ef=None, edgeToVertex=None, ev=None, faceNormals=None, fn=None, faceToEdge=None, fe=None, faceToVertex=None, fv=None, invalidEdges=None, ie=None, invalidVertices=None, iv=None, laminaFaces=None, lf=None, nonManifoldEdges=None, nme=None, nonManifoldUVEdges=None, nue=None, nonManifoldUVs=None, nuv=None, nonManifoldVertices=None, nmv=None, vertexToEdge=None, ve=None, vertexToFace=None, vf=None, *args, **kwargs):
    """
    Command queries topological information on polygonal objects and components. So, the command will require the following to be specified:- selection list to query
    """
    pass


def CreatePolygonConeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectModeDisableTweakMarquee(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def QualityDisplayMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_moveTweakTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def floatSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, field=None, f=None, fieldMaxValue=None, fmx=None, fieldMinValue=None, fmn=None, fieldStep=None, fs=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, sliderStep=None, ss=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def ScaleKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineSelectReplaceBySelectedFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PinSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerspGraphOutlinerLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toolHasOptions(*args, **kwargs):
    """
    This command queries a tool to see if it has options. If it does, it returns true. Otherwise it returns false. 
    """
    pass


def CreateIllustratorCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVPlanarProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DoUnghost(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddOceanPreviewPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BreakLightLinks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateClusterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteGeometryCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PartialCreaseSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetBifrostInitialState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsClamped(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_extrudeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_curveSnapPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickAcknowledge(*args, **kwargs):
    """
    
    """
    pass


def PreInfinityCycleOffset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AveragePolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmBindPatches(*args, **kwargs):
    """
    
    """
    pass


def TogglePaintAtDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePond(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bevelPlus(capSides=None, cap=None, constructionHistory=None, ch=None, depth=None, d=None, extrudeDepth=None, ed=None, innerStyle=None, innerStyle=None, joinSurfaces=None, js=None, name=None, n=None, normalsOutwards=None, no=None, numberOfSides=None, ns=None, outerStyle=None, os=None, polyOutChordHeight=None, cht=None, polyOutChordHeightRatio=None, chr=None, polyOutCount=None, poc=None, polyOutCurveSamples=None, pcs=None, polyOutCurveType=None, pct=None, polyOutExtrusionSamples=None, pes=None, polyOutExtrusionType=None, pet=None, polyOutMethod=None, pom=None, polyOutUseChordHeight=None, uch=None, polyOutUseChordHeightRatio=None, ucr=None, polygon=None, po=None, tolerance=None, tol=None, width=None, w=None, *args, **kwargs):
    """
    The bevelPlus command creates a new bevel surface for the specified curves using a given style curve. The first curve should be the "outside" curve, and the (optional) rest of them should be inside of the first one. For predictable results, the curves should be planar and all in the same plane. 
    """
    pass


def BatchRenderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def adskAssetListUI(*args, **kwargs):
    """
    
    """
    pass


def RemoveFromContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iconTextStaticLabel(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def renderSetup(*args, **kwargs):
    """
    
    """
    pass


def HypershadeGraphClearGraph(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetSmoothBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentLinear(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnterEditModeRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideCameraManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cmdShell(annotation=None, ann=None, backgroundColor=None, bgc=None, clear=None, cl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfHistoryLines=None, nhl=None, numberOfPopupMenus=None, npm=None, numberOfSavedLines=None, nsl=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, prompt=None, pr=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a scrolling field that behaves similar to a unix shell for entering user input.You may specify the number of lines that will be remembered by the field with the -nsl/numberOfSavedLines flag.The default number of lines saved is 100.The shellField also maintains a command history buffer. You can specify the number of input lines that will be saved with the -hlc/historyLineCount flag.The default size of this buffer is 10. 
    """
    pass


def RandomizeFolliclesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddTargetShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenScene(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def duplicate(inputConnections=None, ic=None, instanceLeaf=None, ilf=None, name=None, n=None, parentOnly=None, po=None, renameChildren=None, rc=None, returnRootsOnly=None, rr=None, smartTransform=None, st=None, upstreamNodes=None, un=None, *args, **kwargs):
    """
    This command duplicates the given objects. If no objects are given, then the selected list is duplicated. 
    """
    pass


def WarpImageOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllRigidConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheReplace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StitchEdgesToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def allNodeTypes(includeAbstract=None, ia=None, *args, **kwargs):
    """
    This command returns a list containing the type names of every kind of creatable node registered with the system. Note that some node types are abstract and cannot be created. These will not show up on this list. (e.g. transform and polyShape both inherit from dagObject, but dagObjectcannot be created directly so it will not appear on this list.)
    """
    pass


def dR_targetWeldPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GoalOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsUVSet(create=None, c=None, useExplicit=None, ue=None, *args, **kwargs):
    """
    Allows user to toggle between implicit and explicit UVs on a NURBS object. Also provides a facility to create, delete, rename and set the current explicit UVSet. An implicit UVSet is non-editable. It uses the parametric make-up of the NURBS object to determine the location of UVs (isoparm intersections). NURBS objects also support explicit UVSets which are similar to the UVs of a polygonal object. UVs are created at the knots (isoparm intersections) of the object and are fully editable. In order to access UV editing capabilities on a NURBS object an explicit UVSet must be created and set as the current UVSet.
    """
    pass


def NodeEditorRedockTornOffTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPipe(axis=None, ax=None, createUVs=None, cuv=None, height=None, h=None, radius=None, r=None, subdivisionsCaps=None, sc=None, subdivisionsHeight=None, sh=None, texture=None, tx=None, thickness=None, t=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The polyPipe command creates a new polygonal pipe.
    """
    pass


def CombinePolygons(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_moveRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddKeysToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def duplicateSurface(constructionHistory=None, ch=None, local=None, l=None, name=None, n=None, object=None, o=None, *args, **kwargs):
    """
    The duplicateSurface command takes a surface patch (face) and and returns the 3D surface. Connected patches are returned as a single surface. 
    """
    pass


def CreatePolygonCubeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IntersectCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothDeleteHistory(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SewUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVOverlappingComponentsPerObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleAnimationDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorUnmuteAllTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WireDropoffLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXResetImport(*args, **kwargs):
    """
    
    """
    pass


def GhostObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorPickWalkUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorInputWidgetGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rgbValue=None, rgb=None, rowAttach=None, rat=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def scaleComponents(pivot=None, p=None, rotation=None, ro=None, *args, **kwargs):
    """
    This is a limited version of the scale command.First, it only works on selected components. You provide a pivot in world space, and you can provide a rotation.This rotation affects the scaling, so that rather than scaling in X, Y, Z, this is scaling in X, Y, and Z after they have been rotated by the given rotation. 
    """
    pass


def RemoveBlendShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ThreeBottomSplitViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrFieldGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, attribute=None, at=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraButton=None, eb=None, extraButtonCommand=None, ebc=None, extraButtonIcon=None, ebi=None, extraLabel=None, el=None, forceAddMapButton=None, fmb=None, fullPathName=None, fpn=None, height=None, h=None, hideMapButton=None, hmb=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfFields=None, nf=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, step=None, s=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def NodeEditorGridToggleVisibility(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FullHotboxDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NextKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def particleExists(*args, **kwargs):
    """
    This command is used to query if a particle or soft object with the given name exists. Either the transform or shape name can be used as well as the name of the soft object. 
    """
    pass


def tolerance(angular=None, a=None, linear=None, l=None, *args, **kwargs):
    """
    This command sets tolerances used by modelling operations that require a tolerance, such as surface fillet. Linear tolerance is also known as "positional" tolerance. Angular tolerance is also known as "tangential" tolerance. 
    """
    pass


def CreatePolygonCone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BufferCurveSnapshot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPipeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProjectTangent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def curveOnSurface(append=None, a=None, degree=None, d=None, knot=None, k=None, periodic=None, per=None, positionUV=None, uv=None, replace=None, r=None, *args, **kwargs):
    """
    The curve-on-surface command creates a new curve-on-surface from a list of control vertices (CVs).A string is returned containing the pathname to the newly created curve-on-surface. You can replace an existing curve by using the "-r/replace" flag. You can append points to an existing curve-on-surface by using the "-a/append" flag. See also the curve command, which describes how to query curve attributes. 
    """
    pass


def DeltaMush(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RoundTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProjectCurveOnSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def notifyPostRedo(*args, **kwargs):
    """
    
    """
    pass


def Group(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def internalVar(userAppDir=None, uad=None, userBitmapsDir=None, ubd=None, userHotkeyDir=None, uhk=None, userMarkingMenuDir=None, umm=None, userPrefDir=None, upd=None, userPresetsDir=None, ups=None, userScriptDir=None, usd=None, userShelfDir=None, ush=None, userTmpDir=None, utd=None, userWorkspaceDir=None, uwd=None, *args, **kwargs):
    """
    This command returns the values of internal variables.No modification of these variables is supported. 
    """
    pass


def ToggleToolbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikCharacterToolWidget(*args, **kwargs):
    """
    
    """
    pass


def shapePanel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, shapeEditor=None, se=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a panel that derives from the base panel class that houses a shapeEditor. 
    """
    pass


def DeleteChannels(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetFBIKExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def jointLattice(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, creasing=None, cr=None, deformerTools=None, dt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, joint=None, j=None, lengthIn=None, li=None, lengthOut=None, lo=None, lowerBindSkin=None, lb=None, lowerTransform=None, lt=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, rounding=None, ro=None, split=None, sp=None, upperBindSkin=None, ub=None, upperTransform=None, ut=None, widthLeft=None, wl=None, widthRight=None, wr=None, *args, **kwargs):
    """
    This command creates/edits/queries a jointLattice deformer. The name of the created/edited object is returned. Usually you would make use of this functionality through the higher level flexor command. 
    """
    pass


def PublishNode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorReduceTraversalDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowDeformers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IPRRenderIntoNewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InteractiveBindSkinOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clearNClothStartState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LassoTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlareOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParticleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def particleInstancer(addObject=None, a=None, aimAxis=None, aa=None, aimDirection=None, ad=None, aimPosition=None, ap=None, aimUpAxis=None, aua=None, aimWorldUp=None, awu=None, attributeMapping=None, am=None, cycle=None, c=None, cycleStartObject=None, sto=None, cycleStep=None, cs=None, cycleStepUnits=None, csu=None, index=None, i=None, instanceId=None, id=None, levelOfDetail=None, lod=None, name=None, n=None, object=None, obj=None, objectIndex=None, oi=None, particleAge=None, age=None, position=None, p=None, removeObject=None, rm=None, rotation=None, r=None, rotationOrder=None, ro=None, rotationType=None, rt=None, rotationUnits=None, ru=None, scale=None, sc=None, shear=None, sh=None, visibility=None, vis=None, *args, **kwargs):
    """
    This command is used to create a particle instancer node and set the proper attributes in the particle shape and in the instancer node.It will also create the connections needed between the particle shape and the instancer node.
    """
    pass


def cMuscleWeightPrune(*args, **kwargs):
    """
    
    """
    pass


def ProfilerToolToggleRecording(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def radioButton(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, collection=None, cl=None, data=None, da=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, onCommand=None, onc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, recomputeSize=None, rs=None, select=None, sl=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a radio button that is added to the most recently created radio collection if the 
    """
    pass


def FilePathEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def adskSceneMetadataCmd(*args, **kwargs):
    """
    
    """
    pass


def addMetadata(channelName=None, cn=None, channelType=None, cht=None, indexType=None, idt=None, scene=None, scn=None, streamName=None, stn=None, structure=None, str=None, *args, **kwargs):
    """
    
    """
    pass


def replaceCacheFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeSpringAnimation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveUtilitiesMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def displayCull(backFaceCulling=None, bfc=None, *args, **kwargs):
    """
    This command is responsible for setting the display culling property of back faces of surfaces. 
    """
    pass


def SetFocusToCommandLine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShapeEditorDuplicateTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeMoveTabUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def buttonManip(icon=None, i=None, *args, **kwargs):
    """
    This creates a button manipulator. This manipulator has a position in space and a triad manip for positioning. When you click on the top part of the manip, the command defined by the first argument is executed. The command is associated with the manipulator when it is created. 
    """
    pass


def ScriptPaintToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlaybackToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynSelectCtx(*args, **kwargs):
    """
    
    """
    pass


def DeleteAllControllers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnpublishRootTransform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVCentricUVLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NewSceneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceBooleanUnionToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsCurveToBezier(*args, **kwargs):
    """
    The nurbsCurveToBezier command attempts to convert an existing NURBS curve to a Bezier curve. 
    """
    pass


def polyCopyUV(createNewMap=None, cm=None, uvSetName=None, uvs=None, uvSetNameInput=None, uvi=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Copy some UVs from a UV set into another.
    """
    pass


def AddPondSurfaceLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivProxyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddAnimationOffsetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerRenameSelectedItem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_rotateRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def art3dPaintCtx(accopacity=None, aco=None, alphablendmode=None, abm=None, assigntxt=None, ast=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clear=None, clr=None, commonattr=None, cat=None, dragSlider=None, dsl=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, extendFillColor=None, efc=None, filetxtaspectratio=None, far=None, filetxtsizex=None, ftx=None, filetxtsizey=None, fty=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, keepaspectratio=None, kar=None, lowerradius=None, lr=None, mappressure=None, mp=None, name=None, n=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintmode=None, pm=None, paintoperationtype=None, pot=None, painttxtattr=None, pta=None, painttxtattrname=None, ptn=None, pfxScale=None, psc=None, pfxWidth=None, pwd=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, reflection=None, rn=None, reflectionaxis=None, ra=None, reloadtexfile=None, rtf=None, resizeratio=None, rr=None, resizetxt=None, rft=None, saveTextureOnStroke=None, sts=None, saveonstroke=None, sos=None, savetexture=None, stx=None, shadernames=None, hnm=None, shapeattr=None, spa=None, shapenames=None, shn=None, showactive=None, sa=None, soloAsDiffuse=None, sod=None, stampProfile=None, stP=None, stampSpacing=None, stS=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, textureFilenames=None, tfn=None, usepressure=None, up=None, *args, **kwargs):
    """
    This is a tool context command for 3d Paint tool.
    """
    pass


def DisableGlobalStitch(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonHardenEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def perCameraVisibility(camera=None, c=None, exclusive=None, ex=None, hide=None, hi=None, remove=None, rm=None, removeAll=None, ra=None, removeCamera=None, rc=None, *args, **kwargs):
    """
    The perCameraVisibility command creates, queries and removes visibility relationships between DAG objects and cameras. These relationships are applied in any viewport that uses the cameras involved. (They are not used e.g. in rendering.) Objects can be set to be exclusive to a camera (meaning they will only be displayed in viewports using that camera; they will be hidden in other viewports) or hidden from a camera (meaning they will be not visible in any viewport using the camera).
    """
    pass


def dR_paintRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateHairCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TranslateToolWithSnapMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteUI(collection=None, cl=None, control=None, ctl=None, editor=None, ed=None, layout=None, lay=None, menu=None, m=None, menuItem=None, mi=None, panel=None, pnl=None, panelConfig=None, pc=None, radioMenuItemCollection=None, ric=None, toolContext=None, tc=None, uiTemplate=None, uit=None, window=None, wnd=None, *args, **kwargs):
    """
    This command deletes UI objects such as windows and controls.Deleting a layout or window will also delete all of its children.If a flag is used then all objects being deleted must be of the specified type. This command may not be edited or queried. 
    """
    pass


def characterize(activatePivot=None, apv=None, addAuxEffector=None, aae=None, addFloorContactPlane=None, afp=None, addMissingEffectors=None, ame=None, attributeFromHIKProperty=None, ahk=None, attributeFromHIKPropertyMode=None, mhk=None, autoActivateBodyPart=None, aab=None, changePivotPlacement=None, cpp=None, effectors=None, ef=None, fkSkeleton=None, fk=None, name=None, nm=None, pinHandFeet=None, phf=None, placeNewPivot=None, pnp=None, posture=None, pos=None, sourceSkeleton=None, sk=None, stancePose=None, sp=None, type=None, typ=None, *args, **kwargs):
    """
    This command is used to scan a joint hierarchy for predefined joint names or labels. If the required joints are found, human IK effectors will be created to control the skeleton using full-body IK. Alternatively, you can manually create all of the components required for fullbody IK, and use this command to hook them up. Fullbody IK needs 3 major components: the user input skeleton (sk), the fk skeleton on which keys are set (fk) and the hik effectors (ik).Together fk and ik provide parameters to the fullbody IK engine, which solves for the output and plots it onto sk. This command usage is used internally by Maya when importing data from fbx files, but is not generally recommended. 
    """
    pass


def curveBezierCtx(*args, **kwargs):
    """
    
    """
    pass


def DeleteAllClusters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveFluid(currentTime=None, ct=None, endTime=None, et=None, startTime=None, st=None, *args, **kwargs):
    """
    A command to save the current state of the fluid to the initial state cache. The grids to be saved are determined by the cache attributes: cacheDensity, cacheVelocity, etc. These attributes are normally set from the options on Set Initial State. The cache must be set up before invoking this command.
    """
    pass


def RemoveBrushSharing(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusGetnClothExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorRippleEditTogglePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleLayerBar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleModelEditorBars(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNURBSCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonCylinderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyUVOverlap(*args, **kwargs):
    """
    
    """
    pass


def PaintOperationMarkingMenuPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryReplaceCacheFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectIsolate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToUVBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecreaseExposureCoarse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePanZoomPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ApplySettingsToLastStroke(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllMotionPaths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachVertexComponent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_conform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def STRSTweakModeOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listInputDevices(*args, **kwargs):
    """
    This command lists all input devices that maya knows about.
    """
    pass


def MakePondBoats(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNRigids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptMeshUnfreezeAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowHairSystems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RigidBindSkinOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyColorDel(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Deletes color from selected components.
    """
    pass


def SelectUVNonOverlappingComponentsPerObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayIntermediateObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNCloths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConnectNodeToIKFK(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikRigAlign(*args, **kwargs):
    """
    
    """
    pass


def hikManip(*args, **kwargs):
    """
    
    """
    pass


def polyCollapseEdge(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Turns each selected edge into a point.
    """
    pass


def NodeEditorShapeMenuStateNoShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPyramidOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TrimTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsFlat(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeEditorTracks(activeClipWeight=None, acw=None, activeClipWeightId=None, aci=None, addTrack=None, at=None, allClips=None, ac=None, allTracks=None, atc=None, allTracksRecursive=None, atr=None, composition=None, cp=None, path=None, pt=None, plugIndex=None, pi=None, removeTrack=None, rt=None, removeTrackByPath=None, rtp=None, reorderTrack=None, rot=None, resetMute=None, rm=None, resetSolo=None, rs=None, selectedTracks=None, st=None, trackGhost=None, tgh=None, trackIndex=None, ti=None, trackMuted=None, tm=None, trackName=None, tn=None, trackSolo=None, ts=None, trackType=None, tt=None, *args, **kwargs):
    """
    Time Editor tracks commands
    """
    pass


def FlipTubeDirection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AnimLayerRelationshipEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hotkeyCtx(addClient=None, ac=None, clientArray=None, ca=None, currentClient=None, cc=None, insertTypeAt=None, ita=None, removeAllClients=None, rac=None, removeClient=None, rc=None, removeType=None, rt=None, type=None, t=None, typeArray=None, ta=None, typeExists=None, te=None, *args, **kwargs):
    """
    This command sets the hotkey context for the entire application.
    """
    pass


def dR_viewBack(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynWireCtx(*args, **kwargs):
    """
    
    """
    pass


def loadPrefObjects(*args, **kwargs):
    """
    This command loads preference dependency nodes from "userPrefObjects.ma", if it exists, from the user preference directory. 
    """
    pass


def polyCompare(colorSetIndices=None, ic=None, colorSets=None, c=None, edges=None, e=None, faceDesc=None, fd=None, userNormals=None, un=None, uvSetIndices=None, iuv=None, uvSets=None, uv=None, vertices=None, v=None, *args, **kwargs):
    """
    Compares two Polygonal Geometry objects with a fine control on what to compare. 
    """
    pass


def softMod(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, bindState=None, bs=None, curveInterpolation=None, ci=None, curvePoint=None, cp=None, curveValue=None, cv=None, deformerTools=None, dt=None, envelope=None, en=None, exclusive=None, ex=None, falloffAroundSelection=None, fas=None, falloffBasedOnX=None, fbx=None, falloffBasedOnY=None, fby=None, falloffBasedOnZ=None, fbz=None, falloffCenter=None, fc=None, falloffMasking=None, fm=None, falloffMode=None, fom=None, falloffRadius=None, fr=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, relative=None, rel=None, remove=None, rm=None, resetGeometry=None, rg=None, split=None, sp=None, weightedNode=None, wn=None, *args, **kwargs):
    """
    The softMod command creates a softMod or edits the membership of an existing softMod. The command returns the name of the softMod node upon creation of a new softMod. 
    """
    pass


def AddSelectionAsCombinationTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetClumpBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCurveFromPoly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Vortex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetWidthBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def snapTogetherCtx(clearSelection=None, cs=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, setOrientation=None, so=None, snapPolygonFace=None, spf=None, *args, **kwargs):
    """
    The snapTogetherCtx command creates a tool for snapping surfaces together. 
    """
    pass


def stringArrayIntersector(allowDuplicates=None, ad=None, defineTemplate=None, dt=None, exists=None, ex=None, intersect=None, i=None, reset=None, r=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    The stringArrayIntersector command creates and edits an object which is able to efficiently intersect large string arrays. The intersector object maintains a sense of "the intersection so far", and updates the intersection when new string arrays are provided using the -i/intersect flag. 
    """
    pass


def ToggleShelf(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateOcean(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapToCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NonSacredTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sets(addElement=None, add=None, afterFilters=None, af=None, clear=None, cl=None, color=None, co=None, copy=None, cp=None, edges=None, eg=None, editPoints=None, ep=None, empty=None, em=None, facets=None, fc=None, flatten=None, fl=None, forceElement=None, fe=None, include=None, include=None, intersection=None, int=None, isIntersecting=None, ii=None, isMember=None, im=None, layer=None, l=None, name=None, n=None, noSurfaceShader=None, nss=None, noWarnings=None, nw=None, nodesOnly=None, no=None, remove=None, rm=None, renderable=None, r=None, size=None, s=None, split=None, sp=None, subtract=None, sub=None, text=None, t=None, union=None, un=None, vertices=None, v=None, *args, **kwargs):
    """
    This command is used to create a set, query some state of a set, or perform operations to update the membership of a set. A set is a logical grouping of an arbitrary collection of objects, attributes, or components of objects. Sets are dependency nodes. Connections from objects to a set define membership in the set. 
    """
    pass


def CycleFBIKReachKeyingOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostGuide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReversePolygonNormalsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableTimeChangeUndoConsolidation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorNormalizedView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProfilerToolReset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def stitchSurfacePoints(bias=None, b=None, cvIthIndex=None, ci=None, cvJthIndex=None, cj=None, fixBoundary=None, fb=None, parameterU=None, u=None, parameterV=None, v=None, positionalContinuity=None, pc=None, stepCount=None, sc=None, tangentialContinuity=None, tc=None, togglePointNormals=None, tpn=None, togglePointPosition=None, tpp=None, toggleTolerance=None, tt=None, tolerance=None, tol=None, cascade=None, c=None, constructionHistory=None, ch=None, equalWeight=None, ewt=None, keepG0Continuity=None, kg0=None, keepG1Continuity=None, kg1=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The stitchSurfacePoints command aligns two or more surface points along the boundaries together to a single point. In the process, a node to average the points is created. The points are averaged together in a weighted fashion. The points may be control vertices along the boundaries. If the points are CVs then they are stitched together only with positional continuity. 
    """
    pass


def PolyExtrudeFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def trackCtx(alternateContext=None, ac=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, toolName=None, tn=None, trackGeometry=None, tg=None, trackScale=None, ts=None, *args, **kwargs):
    """
    This command can be used to create a track context.
    """
    pass


def ProfilerToolShowSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSSmoothnessFineOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_activeHandleXYZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def undo(*args, **kwargs):
    """
    Takes the most recent command from the undo list and undoes it.
    """
    pass


def subdLayoutUV(constructionHistory=None, ch=None, flipReversed=None, fr=None, layout=None, l=None, layoutMethod=None, lm=None, name=None, n=None, percentageSpace=None, ps=None, rotateForBestFit=None, rbf=None, scale=None, sc=None, separate=None, se=None, worldSpace=None, ws=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Move UVs in the texture plane to avoid overlaps.
    """
    pass


def mpBirailCtx(*args, **kwargs):
    """
    
    """
    pass


def u3dTopoValid(*args, **kwargs):
    """
    
    """
    pass


def AssignHairConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CustomPolygonDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshScrapeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PointOnPolyConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateDirectionalLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_tweakRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def refreshEditorTemplates(*args, **kwargs):
    """
    This command refreshes all cached attribute editor templates, including those copied from the standard AE. These are the templates constructed internally on a per node type basis. This is useful if attribute elements have changed and the templates need to be re-evaluated accordingly. 
    """
    pass


def MatchTranslation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceFlowOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeEdgeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorSelectDownStream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddToContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateHair(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TestTextureOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenBrowserWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyDelEdge(cleanVertices=None, cv=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Deletes selected edges, and merges neighboring faces. If deletion leaves winged vertices, they may be deleted as well. 
    """
    pass


def ProfilerToolShowSelectedRepetition(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clipMatching(clipDst=None, cd=None, clipSrc=None, cs=None, matchRotation=None, mr=None, matchTranslation=None, mt=None, *args, **kwargs):
    """
    This command is used to compute an offset to apply on a source clip in order to automatically align it to a destination clip at a specified match element. For this command to work, offset objects must be specified for the character.
    """
    pass


def XgmSetSelectBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NormalizeUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def condition(delete=None, delete=None, dependency=None, d=None, initialize=None, i=None, script=None, s=None, state=None, st=None, *args, **kwargs):
    """
    This command creates a new named condition object whose true/false value is calculated by running a mel script. This new condition can then be used for dimming, or controlling other scripts, or whatever. 
    """
    pass


def TwoPointArcToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GrowPolygonSelectionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def makeLive(none=None, n=None, *args, **kwargs):
    """
    This commmand makes an object live.A live object defines the surface on which to create objects and to move object relative to.Only construction planes, nurbs surfaces and polygon meshes can be made live. 
    """
    pass


def fluidDeleteCacheFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def blendShapeEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, targetControlList=None, tcl=None, targetList=None, tl=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, verticalSliders=None, vs=None, *args, **kwargs):
    """
    This command creates an editor that derives from the base editor class that has controls for blendShape, control nodes. 
    """
    pass


def TimeEditorClipScaleStart(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RepeatLastActionAtMousePosition(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AnimationSweep(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def matchTransform(pivots=None, piv=None, position=None, pos=None, rotation=None, rot=None, scale=None, scl=None, *args, **kwargs):
    """
    This command modifies the source object's transform to match the target object's transform. 
    """
    pass


def DeleteAttribute(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySplitCtx(enablesnap=None, es=None, magnetsnap=None, ms=None, precsnap=None, ps=None, smoothingangle=None, sma=None, snaptoedge=None, ste=None, subdivision=None, s=None, *args, **kwargs):
    """
    Create a new context to split facets on polygonal objects
    """
    pass


def HypergraphIncreaseDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCube(axis=None, ax=None, createUVs=None, cuv=None, depth=None, d=None, height=None, h=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, subdivisionsZ=None, sz=None, texture=None, tx=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The cube command creates a new polygonal cube.
    """
    pass


def gradientControl(adaptiveScaling=None, adaptiveScaling=None, annotation=None, ann=None, attribute=None, at=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfControls=None, nc=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, refreshOnRelease=None, ror=None, selectedColorControl=None, scc=None, selectedInterpControl=None, sic=None, selectedPositionControl=None, spc=None, staticNumberOfControls=None, snc=None, staticPositions=None, sp=None, upperLimitControl=None, ulc=None, useTemplate=None, ut=None, verticalLayout=None, vl=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control that displays the gradient attribute specified. The gradient attribute must be of the correct form and naming. It should be a multi attribute with each entry a compound composed of: 
    """
    pass


def FrameSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewManip(bottomLeft=None, bl=None, bottomRight=None, br=None, compassAngle=None, ca=None, dragSnap=None, ds=None, drawCompass=None, dc=None, fitToView=None, ftv=None, levelCamera=None, lc=None, minOpacity=None, mo=None, restoreCenter=None, rc=None, size=None, s=None, topLeft=None, tl=None, topRight=None, tr=None, visible=None, v=None, zoomToFitScene=None, zf=None, *args, **kwargs):
    """
    Mel access to the view cube manipulator.
    """
    pass


def TimeEditorSceneAuthoringToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPondDynamicLocatorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecreaseCheckerDensity(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChangeEdgeWidth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyPaintValuePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def confirmDialog(annotation=None, ann=None, backgroundColor=None, bgc=None, button=None, b=None, cancelButton=None, cb=None, defaultButton=None, db=None, dismissString=None, ds=None, icon=None, icn=None, message=None, m=None, messageAlign=None, ma=None, parent=None, p=None, title=None, t=None, *args, **kwargs):
    """
    The confirmDialog command creates a modal dialog with a message to the user and a variable number of buttons to dismiss the dialog.The dialog is dismissed when the user presses any button or chooses the close item from the window menu.In the case where a button is pressed then the name of the button selected is returned.If the dialog is dismissed via the close item then the string returned is specified by the 
    """
    pass


def HypershadeGraphRemoveSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeCustomPivotOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVAutomaticProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostCamera(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scaleKey(animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, float=None, f=None, floatPivot=None, fp=None, floatScale=None, fs=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, newEndFloat=None, nef=None, newEndTime=None, net=None, newStartFloat=None, nsf=None, newStartTime=None, nst=None, scaleSpecifiedKeys=None, ssk=None, shape=None, s=None, time=None, t=None, timePivot=None, tp=None, timeScale=None, ts=None, valuePivot=None, vp=None, valueScale=None, vs=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def xgmCopyDescription(*args, **kwargs):
    """
    
    """
    pass


def nClothCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteAttr(attribute=None, at=None, name=None, n=None, *args, **kwargs):
    """
    This command is used to delete a dynamic attribute from a node or nodes. The attribute can be specified by using either the long or short name. Only one dynamic attribute can be deleted at a time. Static attributes cannot be deleted. Children of a compound attribute cannot be deleted. You must delete the complete compound attribute. This command has no edit capabilities. The only query ability is to list all the dynamic attributes of a node. 
    """
    pass


def polyNormal(normalMode=None, nm=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Control the normals of an object. This command works on faces or polygonal objects. 
    """
    pass


def dR_quadDrawRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreInfinityOscillate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WireTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetPartBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pathAnimation(bank=None, b=None, bankScale=None, bs=None, bankThreshold=None, bt=None, curve=None, c=None, endTimeU=None, etu=None, endU=None, eu=None, follow=None, f=None, followAxis=None, fa=None, fractionMode=None, fm=None, inverseFront=None, inverseFront=None, inverseUp=None, iu=None, name=None, n=None, startTimeU=None, stu=None, startU=None, su=None, upAxis=None, ua=None, useNormal=None, un=None, worldUpObject=None, wuo=None, worldUpType=None, wut=None, worldUpVector=None, wu=None, *args, **kwargs):
    """
    The pathAnimation command constructs the necessary graph nodes and their interconnections for a motion path animation. Motion path animation requires a curve and one or more other objects. During the animation, the objects will be moved along the 3D curve or the curveOnSurface.
    """
    pass


def StraightenUVBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolySphereCtx(*args, **kwargs):
    """
    
    """
    pass


def AddSelectionAsInBetweenTargetShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateRigidBodySolver(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def flagTest(*args, **kwargs):
    """
    
    """
    pass


def ShatterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyProjection(constructionHistory=None, ch=None, createNewMap=None, cm=None, imageCenterX=None, icx=None, imageCenterY=None, icy=None, imageScaleU=None, isu=None, imageScaleV=None, isv=None, insertBeforeDeformers=None, ibd=None, keepImageRatio=None, kir=None, mapDirection=None, md=None, projectionCenterX=None, pcx=None, projectionCenterY=None, pcy=None, projectionCenterZ=None, pcz=None, projectionScaleU=None, psu=None, projectionScaleV=None, psv=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, rotationAngle=None, ra=None, seamCorrect=None, sc=None, smartFit=None, sf=None, type=None, t=None, uvSetName=None, uvs=None, *args, **kwargs):
    """
    Creates a mapping on the selected polygonal faces.When constructionhistory is created, the name of the new node is returned.In other cases,the command returns nothing.
    """
    pass


def snapshotBeadCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, inTangent=None, i=None, name=None, n=None, outTangent=None, o=None, *args, **kwargs):
    """
    Creates a context for manipulating in and/or out tangent beads on the motion trail 
    """
    pass


def ToggleVisibilityAndKeepSelectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iterOnNurbs(*args, **kwargs):
    """
    
    """
    pass


def CreatePolygonSoccerBallOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowPolygonSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowAttributeEditorOrChannelBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ActivateFullBodyPivot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HardwareRenderBuffer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LoadHIKPropertySetState(*args, **kwargs):
    """
    
    """
    pass


def ShowShadingGroupAttributeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def readTake(angle=None, a=None, device=None, d=None, frequency=None, f=None, linear=None, l=None, noTime=None, nt=None, take=None, t=None, *args, **kwargs):
    """
    This action reads a take (.mov) file to a defined device. 
    """
    pass


def GraphEditorAbsoluteView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadePinSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderThumbnailUpdate(forceUpdate=None, fu=None, *args, **kwargs):
    """
    Toggle the updating of object thumbnails. These are visible in tools like the Attribute Editor and Hypershade. All thumbnails everywhere will not update to reflect changes to the object until this command is used to toggle to true unless a specific thumbnail is forced to render using the -forceUpdate flag. 
    """
    pass


def ShowMeshImprintToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopySkinWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveSmoothnessRough(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKFullBodyMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def popListItem(*args, **kwargs):
    """
    
    """
    pass


def ToggleModelingToolkit(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FrameAllInAllViews(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransferAttributeValuesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyListComponentConversion(border=None, bo=None, fromEdge=None, fe=None, fromFace=None, ff=None, fromUV=None, fuv=None, fromVertex=None, fv=None, fromVertexFace=None, fvf=None, internal=None, internal=None, toEdge=None, te=None, toFace=None, tf=None, toUV=None, tuv=None, toVertex=None, tv=None, toVertexFace=None, tvf=None, vertexFaceAllEdges=None, vfa=None, *args, **kwargs):
    """
    This command converts poly components from one or more types to another one or more types, and returns the list of the conversion. It doesn't change anything of the current database. 
    """
    pass


def HypershadeGraphAddSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConnectionEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleKeepHardEdgeCulling(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransformNoSelectOffTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def insertKeyCtx(breakdown=None, bd=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to insert keys within the graph editor 
    """
    pass


def TimeEditorClipTrimStart(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSelectedPrims(*args, **kwargs):
    """
    
    """
    pass


def SaveCurrentLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPatchInfo(*args, **kwargs):
    """
    
    """
    pass


def SelectToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_extrudeBevelRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPondDynamicBuoy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dgeval(src=None, src=None, verbose=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def SelectUVNonOverlappingComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RegionKeysTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GpuCacheExportSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportOfflineFileFromRefEd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleLatticePoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFaceMetadata(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlanarProjection(*args, **kwargs):
    """
    unknown
    """
    pass


def OutTangentAuto(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scaleKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, scaleSpecifiedKeys=None, ssk=None, type=None, typ=None, *args, **kwargs):
    """
    This command creates a context which may be used to scale keyframes within the graph editor 
    """
    pass


def softSelectOptionsCtx(*args, **kwargs):
    """
    
    """
    pass


def floatSlider(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontal=None, hr=None, isObscured=None, io=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a slider control that accepts only float values and is bound by a minimum and maximum value.The slider displays a marker indicating the current value of the slider relative to it's minimum and maximum values.Click and drag the marker or on the slider itself to change the current value. 
    """
    pass


def addExtension(nodeType=None, nt=None, attributeType=None, at=None, binaryTag=None, bt=None, cachedInternally=None, ci=None, category=None, ct=None, dataType=None, dt=None, defaultValue=None, dv=None, disconnectBehaviour=None, dcb=None, enumName=None, en=None, exists=None, ex=None, fromPlugin=None, fp=None, hasMaxValue=None, hxv=None, hasMinValue=None, hnv=None, hasSoftMaxValue=None, hsx=None, hasSoftMinValue=None, hsn=None, hidden=None, h=None, indexMatters=None, im=None, internalSet=None, internalSet=None, keyable=None, k=None, longName=None, ln=None, maxValue=None, max=None, minValue=None, min=None, multi=None, m=None, niceName=None, nn=None, numberOfChildren=None, nc=None, parent=None, p=None, proxy=None, pxy=None, readable=None, r=None, shortName=None, sn=None, softMaxValue=None, smx=None, softMinValue=None, smn=None, storable=None, s=None, usedAsColor=None, uac=None, usedAsFilename=None, uaf=None, usedAsProxy=None, uap=None, writable=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def xgmPartBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorCreateCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonBooleanDifference(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleBorderEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSCubeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def planarSrf(degree=None, d=None, keepOutside=None, ko=None, tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command computes a planar trimmed surface given planar boundary curves that form a closed region. 
    """
    pass


def connectDynamic(addScriptHandler=None, ash=None, collisions=None, c=None, delete=None, d=None, emitters=None, em=None, fields=None, f=None, removeScriptHandler=None, rsh=None, *args, **kwargs):
    """
    Dynamic connection specifies that the force fields, emitters, or collisions of an object affect another dynamic object. The dynamic object that is connected to a field, emitter, or collision object is influenced by those fields, emitters and collision objects. 
    """
    pass


def polyMergeEdge(firstEdge=None, fe=None, mergeMode=None, mm=None, secondEdge=None, se=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Sews two border edges together.
    """
    pass


def movieInfo(counter=None, cn=None, dropFrame=None, df=None, frameCount=None, f=None, frameDuration=None, fd=None, height=None, h=None, movieTexture=None, mt=None, negTimesOK=None, nt=None, numFrames=None, nf=None, quickTime=None, qt=None, timeCode=None, tc=None, timeCodeTrack=None, tt=None, timeScale=None, ts=None, twentyFourHourMax=None, tf=None, width=None, w=None, *args, **kwargs):
    """
    movieInfo provides a mechanism for querying information about movie files.
    """
    pass


def ToggleAttributeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GlobalStitchOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReattachSkeletonJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikBodyPart(*args, **kwargs):
    """
    
    """
    pass


def CharacterAnimationEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableNucleuses(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertInstanceToObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsBoolean(operation=None, op=None, tolerance=None, tlb=None, constructionHistory=None, ch=None, name=None, n=None, nsrfsInFirstShell=None, nsf=None, object=None, o=None, smartConnection=None, sc=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command performs a boolean operation.
    """
    pass


def CreatePolyFromPreview(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateConstraintClipOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ctxTraverse(down=None, d=None, left=None, l=None, right=None, r=None, up=None, up=None, *args, **kwargs):
    """
    This command tells the current context to do a traversal. 
    """
    pass


def ToggleCullingVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editDisplayLayerMembers(fullNames=None, fn=None, noRecurse=None, nr=None, *args, **kwargs):
    """
    This command is used to query and edit membership of display layers.No equivalent 'remove' command is necessary since all objects must be in exactly one display layer.Removing an object from a layer can be accomplished by adding it to a different layer.
    """
    pass


def UngroupOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateClipOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_autoWeldTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_connectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikSystem(allowRotation=None, ar=None, autoPriority=None, ap=None, autoPriorityMC=None, apm=None, autoPrioritySC=None, aps=None, list=None, ls=None, snap=None, sn=None, solve=None, sol=None, solverTypes=None, st=None, *args, **kwargs):
    """
    The ikSystem command is used to set the global snapping flag for handles and set the global solve flag for solvers.The standard edit (-e) and query (-q) flags are used for edit and query functions. 
    """
    pass


def NCreateEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowCameraManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scriptedPanel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, type=None, typ=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command will create an instance of the specified scriptedPanelType. A panel is a collection of UI objects (buttons, fields, graphical views) that are grouped together. A panel can be moved around as a group within the application interface, and torn off to exist in its own window. The panel takes care of maintaining the state of its UI when it is relocated, or recreated. A scripted panel is a panel that is defined in MEL, with all of the required callbacks available as MEL proc's. 
    """
    pass


def SmoothingLevelIncrease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def doubleProfileBirailSurface(blendFactor=None, bl=None, tangentContinuityProfile1=None, tp1=None, tangentContinuityProfile2=None, tp2=None, transformMode=None, tm=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The arguments are 4 cuves called "profile1" "profile2" "rail1" "rail2". 
    """
    pass


def filter(name=None, n=None, type=None, t=None, *args, **kwargs):
    """
    Creates or modifies a filter node.Filter nodes are used by applyTake to modify recorded device data before assigning it to the param curves for the attached attributes. 
    """
    pass


def SelectUVMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnmirrorSmoothProxy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleXGenDisplayHUD(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def copyFlexor(*args, **kwargs):
    """
    This command copies an existing bone or joint flexor from one bone (joint) to another.The attributes of the flexor and their connections as well as any tweaks in on the latticeFfd are copied from the original to the new flexor.If the selected bone (joint) appears to be a mirror reflection of the bone (joint) of the existing flexor then the transform of the ffd lattice group gets reflected to the new bone (joint).The arguments for the command are the name of the ffd Lattice and the name of the destination joint. If they are not specified at the command line, they will be picked up from the current selection list. 
    """
    pass


def InitialFluidStates(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmMelRender(*args, **kwargs):
    """
    
    """
    pass


def GraphEditorDisplayTangentActive(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddDynamicBuoy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def isolateSelect(addDagObject=None, ado=None, addSelected=None, addSelected=None, addSelectedObjects=None, aso=None, loadSelected=None, ls=None, removeDagObject=None, rdo=None, removeSelected=None, rs=None, state=None, s=None, update=None, u=None, viewObjects=None, vo=None, *args, **kwargs):
    """
    This command turns on/off isolate select mode in a specified modeling view, specified as the argument. Isolate select mode is a display mode where the currently selected objects are added to a list and only those objects are displayed in the view. It allows for selective viewing of specific objects and object components. 
    """
    pass


def skeletonEmbed(mergedMesh=None, mm=None, segmentationMethod=None, sm=None, segmentationResolution=None, sr=None, *args, **kwargs):
    """
    This command is used to embed a skeleton inside meshes.
    """
    pass


def SculptGeometryTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HyperGraphPanelRedoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BifMeshExport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GridUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UpdateReferenceSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reorderDeformers(name=None, n=None, *args, **kwargs):
    """
    This command changes the order in which 2 deformation nodes affect the output geometry. The first string argument is the name of deformer1, the second is deformer2, followed by the list of objects they deform. 
    """
    pass


def NormalizeUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Snap2PointsTo2PointsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ImportWorkspaceFiles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SaveScene(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePose(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetProperty2State(*args, **kwargs):
    """
    
    """
    pass


def OutlinerExpandAllSelectedItems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToUVPerimeter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MapUVBorderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveSewUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAutoProjection(createNewMap=None, cm=None, layout=None, l=None, optimize=None, o=None, percentageSpace=None, ps=None, planes=None, p=None, projectBothDirections=None, pb=None, scaleMode=None, sc=None, skipIntersect=None, si=None, uvSetName=None, uvs=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, insertBeforeDeformers=None, ibd=None, layoutMethod=None, lm=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, *args, **kwargs):
    """
    Projects a map onto an object, using several orthogonal projections simultaneously. 
    """
    pass


def PreviousFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXPushSettings(*args, **kwargs):
    """
    
    """
    pass


def MirrorJointOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshSculptToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolyDisplayHardEdgesColor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def meshIntersectTest(*args, **kwargs):
    """
    
    """
    pass


def dR_modeUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CharacterSetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DuplicateNURBSPatchesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportConstraints(*args, **kwargs):
    """
    
    """
    pass


def HypershadeOpenSpreadSheetWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddAttribute(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def angleBetween(constructionHistory=None, ch=None, euler=None, er=None, vector1=None, v1=None, vector2=None, v2=None, *args, **kwargs):
    """
    Returns the axis and angle required to rotate one vector onto another. If the construction history (
    """
    pass


def NParticleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BridgeEdgeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def VisualizeMetadataOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_meshColorOverrideTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getParticleAttr(array=None, a=None, attribute=None, at=None, object=None, o=None, *args, **kwargs):
    """
    This action will return either an array of values, or the average value and maximum offset, for a specied per-particle attribute of a particle object or component.If a particle component is specified on the command line, values are returned for that component only.If an object name is given instead, values are returned for all particles in that object.If no object name is passed, but a particle object or component is selected, values are returned for the selection. 
    """
    pass


def ShapeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMeshFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCurrentContainerHud(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetFKIdFromEffectorId(*args, **kwargs):
    """
    
    """
    pass


def HypershadeSortByTime(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def popPinning(*args, **kwargs):
    """
    
    """
    pass


def xgmSplineSelect(*args, **kwargs):
    """
    
    """
    pass


def texMoveUVShellContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, iterations=None, it=None, mask=None, m=None, position=None, p=None, shellBorder=None, sb=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a texture editor move manip context. Note that the above flags control the global behaviour of all texture editor move manip contexts.Changing one context independently is not allowed.Changing a context's behaviour using the above flags, will change all existing texture editor move manip contexts. 
    """
    pass


def attrEnumOptionMenuGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, attribute=None, at=None, backgroundColor=None, bgc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enumeratedItem=None, ei=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def GetHIKMatrixDecomposition(*args, **kwargs):
    """
    
    """
    pass


def nurbsEditUV(angle=None, a=None, pivotU=None, pu=None, pivotV=None, pv=None, relative=None, r=None, rotation=None, rot=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, uValue=None, u=None, vValue=None, v=None, *args, **kwargs):
    """
    Command edits uvs on NURBS objects. When used with the query flag, it returns the uv values associated with the specified components.
    """
    pass


def ResetTransformations(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignHairConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LockContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideSubdivSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonSelectionConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShapeEditorNewGroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransferAttributeValues(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DuplicateFaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def offsetSurface(distance=None, d=None, method=None, m=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The offset command creates new offset surfaces from the selected surfaces. The default method is a surface offset, which offsets relative to the surface itself. The CV offset method offsets the CVs directly rather than the surface, so is usually slightly less accurate but is faster. The offset surface will always have the same degree, number of CVs and knot spacing as the original surface. 
    """
    pass


def paintPointsContext(*args, **kwargs):
    """
    
    """
    pass


def twoPointArcCtx(degree=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, spans=None, s=None, *args, **kwargs):
    """
    The twoPointArcCtx command creates a new context for creating two point circular arcs
    """
    pass


def IncreaseGammaCoarse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toggleDisplacement(*args, **kwargs):
    """
    
    """
    pass


def mayaDpiSetting(mode=None, m=None, realScaleValue=None, rsv=None, scaleValue=None, sv=None, systemDpi=None, sd=None, *args, **kwargs):
    """
    Provide Maya interface scaling based on system DPI or custom scale setting or no scaling. Please note that the change will only take effect after relaunching Maya.
    """
    pass


def workspaceControl(checksPlugins=None, cp=None, close=None, cl=None, closeCommand=None, cc=None, collapse=None, clp=None, defineTemplate=None, dt=None, dockToControl=None, dtc=None, dockToMainWindow=None, dtm=None, dockToPanel=None, dtp=None, exists=None, ex=None, floating=None, fl=None, height=None, h=None, heightProperty=None, hp=None, initialHeight=None, ih=None, initialWidth=None, iw=None, label=None, l=None, loadImmediately=None, li=None, minimumWidth=None, mw=None, r=None, r=None, requiredControl=None, rc=None, requiredPlugin=None, rp=None, restore=None, rs=None, retain=None, rt=None, tabToControl=None, ttc=None, uiScript=None, ui=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, widthProperty=None, wp=None, *args, **kwargs):
    """
    Creates and manages the widget used to host windows in a layout that enables docking and stacking windows together. 
    """
    pass


def tangentConstraint(aimVector=None, aim=None, layer=None, l=None, name=None, n=None, remove=None, rm=None, targetList=None, tl=None, upVector=None, u=None, weight=None, w=None, weightAliasList=None, wal=None, worldUpObject=None, wuo=None, worldUpType=None, wut=None, worldUpVector=None, wu=None, *args, **kwargs):
    """
    Constrain an object's orientation based on the tangent of the target curve[s] at the closest point[s] to the object. 
    """
    pass


def ConvertSelectionToFacePerimeter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddToContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptMeshActivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FreeformFilletOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenCloseCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_objectEdgesOnlyTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorLockChannel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnitizeUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shadingLightRelCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, offCommand=None, ofc=None, onCommand=None, onc=None, shadingCentric=None, s=None, *args, **kwargs):
    """
    This command creates a context that can be used for associating lights to shading groups.You can put the context into shading-centric mode by using the -shadingCentric flag and specifying true.This means that the shading group is selected first then lights associated with the shading group are highlighted.Subsequent selections result in assignments. 
    """
    pass


def SetInitialStateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSTexturePlacementTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreaseProxyEdgeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeBoatsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UndoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mrShaderManager(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EPCurveToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateAreaLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisconnectJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgCreateDescription(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editDisplayLayerGlobals(baseId=None, bi=None, currentDisplayLayer=None, cdl=None, mergeType=None, mt=None, useCurrent=None, uc=None, *args, **kwargs):
    """
    Edit the parameter values common to all display layers.Some of these paremeters, eg. baseId and mergeType, are stored as preferences and some, eg. currentDisplayLayer, are stored in the file.
    """
    pass


def ToggleObjectDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothMakeCollide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintFluidsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishRootTransformOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXProperties(*args, **kwargs):
    """
    
    """
    pass


def HypershadeConvertToFileTextureOptionBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editRenderLayerMembers(fullNames=None, fn=None, noRecurse=None, nr=None, remove=None, r=None, *args, **kwargs):
    """
    This command is used to query and edit memberships to render layers. Only transform and geometry nodes may be members. At render time, all descendants of the members of a render layer will also be included in the render layer.
    """
    pass


def preferredRenderer(fallback=None, f=None, makeCurrent=None, mc=None, *args, **kwargs):
    """
    Command to set the preferred renderer. This command can be used to query the preferred renderer and to set the current renderer as the preferred one. It also allows users to specify a preferred fallback renderer.
    """
    pass


def setParticleAttr(attribute=None, at=None, floatValue=None, fv=None, object=None, o=None, randomFloat=None, rf=None, randomVector=None, rv=None, relative=None, r=None, vectorValue=None, vv=None, *args, **kwargs):
    """
    This action will set the value of the chosen attribute for every particle or selected component in the selected or passed particle object. Components should not be passed to the command line. For setting the values of components, the components must be selected and only the particle object's names should be passed to this action. If the attribute is a vector attribute and the -vv flag is passed, then the three floats passed will be used to set the values.If the attribute is a vector and the -fv flag is pass and the -vv flag is not passed, then the float will be repeated for each of the X, Y, and Z values of the attribute.Similarly, if the attribute is a float attribute and a vector value is passed, then the length of the vector passed will be used for the value. Note:The attribute passed must be a Per-Particle attribute. 
    """
    pass


def ContourProjectionOptions(*args, **kwargs):
    """
    unknown
    """
    pass


def ToggleShowBufferCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSelectBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def ikSpringSolverCallbacks(*args, **kwargs):
    """
    
    """
    pass


def unknownNode(plugin=None, p=None, realClassName=None, rcn=None, realClassTag=None, rct=None, *args, **kwargs):
    """
    Allows querying of the data stored for unknown nodes (nodes that are defined by a plug-in that Maya could not load when loading a scene file).
    """
    pass


def SmoothingLevelDecrease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintGrid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def translator(defaultFileRule=None, dfr=None, defaultOptions=None, do=None, extension=None, ext=None, fileCompression=None, cmp=None, filter=None, f=None, list=None, l=None, loaded=None, ld=None, objectType=None, ot=None, optionsScript=None, os=None, readSupport=None, rs=None, writeSupport=None, ws=None, *args, **kwargs):
    """
    Set or query parameters associated with the file translators specified in as the argument.
    """
    pass


def quit(abort=None, a=None, exitCode=None, ec=None, force=None, f=None, *args, **kwargs):
    """
    This command is used to exit the application.
    """
    pass


def assignShaderToType(*args, **kwargs):
    """
    
    """
    pass


def ToggleFrameRate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideNRigids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hide(allObjects=None, all=None, clearSelection=None, cs=None, invertComponents=None, ic=None, returnHidden=None, rh=None, testVisibility=None, tv=None, *args, **kwargs):
    """
    The 
    """
    pass


def xgmPoints(*args, **kwargs):
    """
    
    """
    pass


def ShowMeshAmplifyToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def itemFilterType(text=None, t=None, type=None, typ=None, *args, **kwargs):
    """
    This command queries a named itemFilter object.This object can be attached to selectionConnection objects, or to editors, in order to filter the item lists going through them.Using union and intersection filters, complex composite filters can be created. 
    """
    pass


def ParticleFill(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listCameras(orthographic=None, o=None, perspective=None, p=None, *args, **kwargs):
    """
    Command to list all cameras. If no flags are given, both perspective and orthographic cameras will be displayed. This command returns an array of camera names. When the transform name uniquely identifies the camera it is used, otherwise the shape name will be returned. 
    """
    pass


def threePointArcCtx(degree=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, spans=None, s=None, *args, **kwargs):
    """
    The threePointArcCtx command creates a new context for creating 3 point arcs
    """
    pass


def subdMapCut(constructionHistory=None, ch=None, name=None, n=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Cut along edges of the texture mapping. The cut edges become map borders.
    """
    pass


def NodeEditorUnpinSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveFromCharacterSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSurfaceHierarchyMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def partition(addSet=None, add=None, name=None, n=None, removeSet=None, rm=None, render=None, re=None, *args, **kwargs):
    """
    This command is used to create, query or add/remove sets to a partition. If a partition name needs to be specified, it is the first argument, other arguments represent the set names. 
    """
    pass


def flow(divisions=None, dv=None, localCompute=None, lc=None, localDivisions=None, ld=None, objectCentered=None, oc=None, *args, **kwargs):
    """
    The flow command creates a deformation lattice to `bend' the object that is animated along a curve of a motion path animation. The motion path animation has to have the follow option set to be on. 
    """
    pass


def CreateReferenceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dgPerformance(*args, **kwargs):
    """
    
    """
    pass


def WrinkleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleTextureBorderEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSetArchiveSize(*args, **kwargs):
    """
    
    """
    pass


def polyBlendColor(baseColorName=None, bcn=None, blendFunc=None, bfn=None, blendWeightA=None, bwa=None, blendWeightB=None, bwb=None, blendWeightC=None, bwc=None, blendWeightD=None, bwd=None, caching=None, cch=None, constructionHistory=None, ch=None, dstColorName=None, dst=None, name=None, n=None, nodeState=None, nds=None, srcColorName=None, src=None, *args, **kwargs):
    """
    Takes two color sets and blends them together into a third specified color set.
    """
    pass


def ProfilerToolShowAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNonlinears(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConformPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_preferencesTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def encodeString(*args, **kwargs):
    """
    This action will take a string and encode any character that would need to be escaped before being sent to some other command. Such characters include:
    """
    pass


def hotkeySet(current=None, cu=None, delete=None, delete=None, exists=None, ex=None, export=None, ep=None, hotkeySetArray=None, hsa=None, ip=None, ip=None, rename=None, re=None, source=None, src=None, *args, **kwargs):
    """
    Manages hotkey sets in Maya. A hotkey set holds hotkey to command mapping information. Default hotkey sets are hotkey sets that are shipped together with Maya. They are locked and cannot be altered. 
    """
    pass


def InsertKnotOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ImportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGraphUpDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkUseController(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCluster(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveConstraintTargetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConnectJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RestoreUIElements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def circularFillet(positionTolerance=None, pt=None, primaryRadius=None, pr=None, secondaryRadius=None, sr=None, tangentTolerance=None, tt=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The cmd is used to compute the rolling ball surface fillet ( circular fillet ) between two given NURBS surfaces. To generate trim curves on the surfaces, use -cos true. 
    """
    pass


def ubercam(*args, **kwargs):
    """
    Use this command to create a "ubercam" with equivalent behavior to all cameras used by shots in the sequencer.
    """
    pass


def dR_setExtendEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CycleBackgroundColor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def spaceLocator(absolute=None, a=None, name=None, n=None, position=None, p=None, relative=None, r=None, *args, **kwargs):
    """
    The command creates a locator at the specified position in space. By default it is created at (0,0,0). 
    """
    pass


def SelectSimilarOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshFillToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikSystemInfo(globalSnapHandle=None, gsh=None, *args, **kwargs):
    """
    This action modifies and queries the current ikSystem controls.
    """
    pass


def layout(annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command allows you to edit or query the properties of any layout. The argument is the name of the layout.
    """
    pass


def MirrorSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllImagePlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def window(backgroundColor=None, bgc=None, closeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dockCorner=None, dc=None, dockStation=None, ds=None, dockingLayout=None, dl=None, exists=None, ex=None, frontWindow=None, fw=None, height=None, h=None, iconName=None, iconName=None, iconify=None, i=None, interactivePlacement=None, ip=None, leftEdge=None, le=None, mainWindow=None, mw=None, maximizeButton=None, mxb=None, menuArray=None, ma=None, menuBar=None, mb=None, menuBarCornerWidget=None, mcw=None, menuBarResize=None, mbr=None, menuBarVisible=None, mbv=None, menuIndex=None, mi=None, minimizeButton=None, mnb=None, minimizeCommand=None, mnc=None, nestedDockingEnabled=None, nde=None, numberOfMenus=None, nm=None, parent=None, p=None, resizeToFitChildren=None, rtf=None, restoreCommand=None, rc=None, retain=None, ret=None, sizeable=None, s=None, state=None, st=None, title=None, t=None, titleBar=None, tb=None, titleBarMenu=None, tbm=None, toolbox=None, tlb=None, topEdge=None, te=None, topLeftCorner=None, tlc=None, useTemplate=None, ut=None, visible=None, vis=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    This command creates a new window but leaves it invisible. It is most efficient to add the window's elements and then make it visible with the showWindow command. The window can have an optional menu bar. Also, the title bar and minimize/maximize buttons can be turned on or off. If the title bar is off, then you cannot have minimize or maximize buttons. 
    """
    pass


def ModelingPanelUndoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_rotateTweakTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def buildSendToBackburnerDialog(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RebuildSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPondBoatLocatorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def binMembership(addToBin=None, add=None, exists=None, ex=None, inheritBinsFromNodes=None, ibn=None, isValidBinName=None, ivn=None, listBins=None, lb=None, makeExclusive=None, mke=None, notifyChanged=None, nfc=None, removeFromBin=None, rm=None, *args, **kwargs):
    """
    Command to assign nodes to bins.
    """
    pass


def arnoldRenderView(*args, **kwargs):
    """
    
    """
    pass


def InteractiveBindSkin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGrabBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def mayaDpiSettingAction(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorPickWalkLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shelfTabLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, borderStyle=None, bs=None, changeCommand=None, cc=None, childArray=None, ca=None, childResizable=None, cr=None, defineTemplate=None, dt=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontalScrollBarThickness=None, hst=None, image=None, i=None, imageVisible=None, iv=None, innerMarginHeight=None, imh=None, innerMarginWidth=None, imw=None, isObscured=None, io=None, manage=None, m=None, minChildWidth=None, mcw=None, moveTab=None, mt=None, newTabCommand=None, ntc=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preSelectCommand=None, psc=None, preventOverride=None, po=None, scrollable=None, scr=None, scrollableTabs=None, stb=None, selectCommand=None, sc=None, selectTab=None, st=None, selectTabIndex=None, sti=None, showNewTab=None, snt=None, tabLabel=None, tl=None, tabLabelIndex=None, tli=None, tabsClosable=None, tc=None, tabsVisible=None, tv=None, useTemplate=None, ut=None, verticalScrollBarThickness=None, vst=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries a shelf tab group which is essentially a normal tabLayout with some drop behaviour in the tab bar.A garbage can icon can appear in the top right corner to dispose of buttons dragged to it from shelves. 
    """
    pass


def SelectFacetMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SplitPolygonTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def memoryDiag(*args, **kwargs):
    """
    
    """
    pass


def newton(attenuation=None, att=None, magnitude=None, m=None, maxDistance=None, mxd=None, minDistance=None, mnd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, *args, **kwargs):
    """
    A Newton field pulls an object towards the exerting object with force dependent on the exerting object's mass, using Newton's universal law of gravitation. 
    """
    pass


def BakeSimulationOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleParticleCount(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setKeyPath(*args, **kwargs):
    """
    The setKeyPath command either creates or edits the path (a nurbs curve) based on the current position of the selected object at the current time. 
    """
    pass


def SendToUnrealAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicImportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayUVShaded(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKNode(*args, **kwargs):
    """
    
    """
    pass


def ToggleAutoSmooth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleCreateNodePane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeMoveTabDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NextSkinPaintMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyGeoSampler(alphaBlend=None, abl=None, averageColor=None, ac=None, clampAlphaMax=None, amx=None, clampAlphaMin=None, amn=None, clampRGBMax=None, cmx=None, clampRGBMin=None, cmn=None, colorBlend=None, cbl=None, colorDisplayOption=None, cdo=None, computeShadows=None, cs=None, displaceGeometry=None, dg=None, flatShading=None, fs=None, ignoreDoubleSided=None, ids=None, lightingOnly=None, lo=None, reuseShadows=None, rs=None, sampleByFace=None, bf=None, scaleFactor=None, sf=None, shareUV=None, su=None, useLightShadows=None, ul=None, *args, **kwargs):
    """
    This command performs a render sampling of surface color and transparency for each selected vertex or face and stores the sampled data as either the color value, or uses the sampled data to displace the affected vertices or faces by a sampled data value. Transparency is not used for displacement, and displacement is performed along vertex normals. The sampled data value used can be pre-scaled by a user defined amount. Additionally, the normals chosen for sampling can be overridden using a "flat" shading option. This option basically means to always use the normals of the faces when computing sampling values. This may be a desired if the user wishes to override an edge smoothness factor. Basically with the "flat" shading option on, edges are always considered to be hard. Note that displacement sampling will result in the -sampleByFace option to be turned off, since a displacement of a vertex always affects the faces the vertex is connected to. Finally, it is possible to force the storage of shared colors per vertex, and / or force the usage of unshared UV values. The computation of the resulting color is as follows: 
    """
    pass


def ToggleMeshEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def uvSnapshot(antiAliased=None, aa=None, blueColor=None, b=None, entireUVRange=None, euv=None, fileFormat=None, ff=None, greenColor=None, g=None, name=None, n=None, overwrite=None, o=None, redColor=None, r=None, uMax=None, umx=None, uMin=None, umn=None, uvSetName=None, uvs=None, vMax=None, vmx=None, vMin=None, vmn=None, xResolution=None, xr=None, yResolution=None, yr=None, *args, **kwargs):
    """
    Builds an image containg the UVs of the selected objects.
    """
    pass


def setFocus(*args, **kwargs):
    """
    Give keyboard focus to a specific control or panel, passed as an argument.
    """
    pass


def HideObjectGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def formLayout(annotation=None, ann=None, attachControl=None, ac=None, attachForm=None, af=None, attachNone=None, an=None, attachOppositeControl=None, aoc=None, attachOppositeForm=None, aof=None, attachPosition=None, ap=None, backgroundColor=None, bgc=None, childArray=None, ca=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfDivisions=None, nd=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a form layout control. A form layout allows absolute and relative positioning of the controls that are its immediate children. 
    """
    pass


def polyIterOnPoly(*args, **kwargs):
    """
    
    """
    pass


def xgmClumpBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def FreeTangentWeight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeUpdatePSDNetworks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shaderfx(*args, **kwargs):
    """
    
    """
    pass


def AddFloorContactPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dirmap(convertDirectory=None, cd=None, enable=None, en=None, getAllMappings=None, gam=None, getMappedDirectory=None, gmd=None, mapDirectory=None, m=None, unmapDirectory=None, um=None, *args, **kwargs):
    """
    Use this command to map a directory to another directory. The first argument is the directory to map, and the second is the destination directory to map to. 
    """
    pass


def fluidReplaceFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllPoses(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DuplicateEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlipTriangleEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAverageVertex(iterations=None, i=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Moves the selected vertices of a polygonal object to round its shape. Translate, move, rotate or scale vertices.
    """
    pass


def ToggleTimeSlider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleCurvatureOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyNormalPerVertex(allLocked=None, al=None, deformable=None, deformable=None, freezeNormal=None, fn=None, normalX=None, x=None, normalXYZ=None, xyz=None, normalY=None, y=None, normalZ=None, z=None, relative=None, rel=None, unFreezeNormal=None, ufn=None, *args, **kwargs):
    """
    Command associates normal(x, y, z) with vertices on polygonal objects. When used with the query flag, it returns the normal associated with the specified components. However, when queried, the command returns all normals (all vtx-face combinations) on the vertex, regardless of whether they are shared or not. 
    """
    pass


def HypershadeGraphRemoveUpstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dbmessage(file=None, f=None, list=None, l=None, monitor=None, m=None, type=None, t=None, *args, **kwargs):
    """
    The 
    """
    pass


def NURBSTexturePlacementToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyPlaneCtx(*args, **kwargs):
    """
    
    """
    pass


def HideNCloths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateImagePlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CVCurveToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Tension(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideTexturePlacements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKSelectedMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDisplayAsLargeSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineSelectConvertToFreeze(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtractSubdivSurfaceVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_lockSelTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def blendShapePanel(blendShapeEditor=None, be=None, control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a panel that derives from the base panel class that houses a blendShapeEditor. 
    """
    pass


def dR_renderLastTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddKeysTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideStrokePathCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def globalStitch(lockSurface=None, lk=None, maxSeparation=None, ms=None, modificationResistance=None, mr=None, sampling=None, sam=None, stitchCorners=None, sc=None, stitchEdges=None, se=None, stitchPartialEdges=None, spe=None, stitchSmoothness=None, ss=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command computes a globalStitch of NURBS surfaces. There should be at least oneNURBS surface. The NURBS surface(s) should be untrimmed. 
    """
    pass


def HypershadeSetTraversalDepthZero(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothTangent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arcLengthDimension(*args, **kwargs):
    """
    This command is used to create an arcLength dimension to display the arcLength of a curve/surface at a specified point on the curve/surface. 
    """
    pass


def HypershadeDeleteSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectNone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clipEditor(allTrackHeights=None, th=None, autoFit=None, af=None, clipDropCmd=None, cd=None, clipStyle=None, cs=None, control=None, ctl=None, defineTemplate=None, dt=None, deleteCmd=None, dc=None, deselectAll=None, da=None, displayActiveKeyTangents=None, dat=None, displayActiveKeys=None, dak=None, displayInfinities=None, di=None, displayKeys=None, dk=None, displayTangents=None, dtn=None, displayValues=None, dv=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, frameAll=None, fa=None, frameRange=None, fr=None, highlightConnection=None, hlc=None, highlightedBlend=None, hb=None, highlightedClip=None, hc=None, initialized=None, it=None, listAllCharacters=None, lac=None, listCurrentCharacters=None, lc=None, lockMainConnection=None, lck=None, lookAt=None, la=None, mainListConnection=None, mlc=None, manageSequencer=None, ms=None, menuContext=None, mc=None, panel=None, pnl=None, parent=None, p=None, selectBlend=None, sb=None, selectClip=None, sc=None, selectionConnection=None, slc=None, snapTime=None, st=None, snapValue=None, sv=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    Create a clip editor with the given name.
    """
    pass


def falloffCurve(addControlVertex=None, acv=None, annotation=None, ann=None, asString=None, asString=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, currentKey=None, ck=None, currentKeyValue=None, ckv=None, customCurveWidget=None, ccw=None, defineTemplate=None, dt=None, deleteControlVertex=None, dcv=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, optionVar=None, ov=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, readOnly=None, ro=None, snapToGrid=None, stg=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control for editing a 2D control curve. The control attaches to an optionVar used to store and retrieve the encoded control points stored in a string. 
    """
    pass


def ChangeVertexSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetCombBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SaveCurrentWorkspace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def unfold(applyToShell=None, applyToShell=None, areaWeight=None, aw=None, globalBlend=None, gb=None, globalMethodBlend=None, gmb=None, iterations=None, i=None, optimizeAxis=None, oa=None, pinSelected=None, ps=None, pinUvBorder=None, pub=None, scale=None, s=None, stoppingThreshold=None, ss=None, useScale=None, us=None, *args, **kwargs):
    """
    None
    """
    pass


def MakeLive(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKComputeReference(*args, **kwargs):
    """
    
    """
    pass


def PolyConvertToLoopAndDelete(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllTransforms(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleEdgeMetadata(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidMergeCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleContainerCentric(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReplaceObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCharacterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SineOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CustomNURBSSmoothness(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKSetBodyPartKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PoseEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_activeHandleX(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCurrentFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def aimConstraint(aimVector=None, aim=None, layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, offset=None, o=None, remove=None, rm=None, skip=None, sk=None, targetList=None, tl=None, upVector=None, u=None, weight=None, w=None, weightAliasList=None, wal=None, worldUpObject=None, wuo=None, worldUpType=None, wut=None, worldUpVector=None, wu=None, *args, **kwargs):
    """
    Constrain an object's orientation to point at a target object or at the average position of a number of targets. 
    """
    pass


def scrollLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, borderVisible=None, bv=None, childArray=None, ca=None, childResizable=None, cr=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontalScrollBarThickness=None, hst=None, isObscured=None, io=None, manage=None, m=None, minChildWidth=None, mcw=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, panEnabled=None, pe=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, resizeCommand=None, rc=None, scrollAreaHeight=None, sah=None, scrollAreaValue=None, sav=None, scrollAreaWidth=None, saw=None, scrollByPixel=None, sbp=None, scrollPage=None, sp=None, useTemplate=None, ut=None, verticalScrollBarAlwaysVisible=None, vsb=None, verticalScrollBarThickness=None, vst=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a scroll layout.A scroll layout is useful for when you have a number of controls which cannot all be visible at a time.This layout will display a horizontal and/or vertical scroll bar when necessary to bring into view the hidden controls. Since the scroll layout provides no real positioning of children you should use another control layout as the immediate child. 
    """
    pass


def GeometryConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNSoftBody(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reverseSurface(direction=None, d=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The reverseSurface command reverses one or both directions of a surface or can be used to "swap" the U and V directions (this creates the effect of reversing the surface normal). The name of the newly reversed surface and the name of the resulting dependency node is returned. The resulting surface has the same parameter ranges as the original surface. 
    """
    pass


def SymmetrizeSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def directKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, option=None, o=None, selectedOnly=None, so=None, *args, **kwargs):
    """
    This command creates a context which may be used to directly manipulate keyframes within the graph editor 
    """
    pass


def HideBoundingBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def switchTable(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label1=None, l1=None, label2=None, l2=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, selectedRow=None, sr=None, switchNode=None, sn=None, underPointerRow=None, upr=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries the switch table control. 
    """
    pass


def rehash(*args, **kwargs):
    """
    
    """
    pass


def ModifyUVVectorRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportUpAxis(*args, **kwargs):
    """
    
    """
    pass


def PaintGridOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParentBaseWireOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetCurrentUVSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothReplaceFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_showOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def isConnected(ignoreUnitConversion=None, iuc=None, *args, **kwargs):
    """
    The 
    """
    pass


def SelectPreviousObjects3dsMax(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceBooleanSubtractToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransformPolygonComponent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StitchSurfacePointsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolygonFaceTriangles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyQuad(angle=None, a=None, keepGroupBorder=None, kgb=None, keepHardEdges=None, khe=None, keepTextureBorders=None, ktb=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Merges selected triangles of a polygonal object into four-sided faces. 
    """
    pass


def CreatePolygonSphereOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attachCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def preloadRefEd(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectFileNode=None, sf=None, selectionConnection=None, slc=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This creates an editor for managing which references will be read in (loaded) and which deferred (unloaded) upon opening a file.
    """
    pass


def FBXImport(*args, **kwargs):
    """
    
    """
    pass


def xgmSplineCache(*args, **kwargs):
    """
    
    """
    pass


def DeformerSetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorSelectConnected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVNormalBasedProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cacheAppendOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def isTrue(*args, **kwargs):
    """
    This commmand returns the state of the named condition. If the condition is true, it returns 1.Otherwise it returns 0. 
    """
    pass


def deformerEvaluator(chains=None, c=None, meshes=None, m=None, *args, **kwargs):
    """
    Print debug information about deformer evaluator status.Inquery mode the debug information is returned as a string[],otherwise the information is displayed in the script editor.
    """
    pass


def TangentsAuto(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ContourProjection(*args, **kwargs):
    """
    unknown
    """
    pass


def ResetSoftSelectOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_vertLockSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVSnapTogetherOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPlanarProjection(createNewMap=None, cm=None, imageCenter=None, ic=None, imageCenterX=None, icx=None, imageCenterY=None, icy=None, imageScale=None, imageScale=None, imageScaleU=None, isu=None, imageScaleV=None, isv=None, insertBeforeDeformers=None, ibd=None, mapDirection=None, md=None, projectionCenter=None, pc=None, projectionCenterX=None, pcx=None, projectionCenterY=None, pcy=None, projectionCenterZ=None, pcz=None, projectionScale=None, ps=None, projectionScaleU=None, psu=None, projectionScaleV=None, psv=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, rotationAngle=None, ra=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Projects a map onto an object, using an orthogonal projection. The piece of the map defined from isu, isv, icx, icy area, is placed at pcx, pcy, pcz location. 
    """
    pass


def DeleteFBIKAllKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPondDynamicBuoyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeTopologyToTargets(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyAssignSubdivHole(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExpressionEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintAttrTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def loft(autoReverse=None, ar=None, close=None, c=None, createCusp=None, cc=None, degree=None, d=None, reverse=None, r=None, reverseSurfaceNormals=None, rsn=None, sectionSpans=None, ss=None, uniform=None, u=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, rebuild=None, rb=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command computes a skinned (lofted) surface passing through a number of NURBS curves. There must be at least two curves present. The NURBS curves may be surface isoparms, curve on surfaces, trimmed edges or polygon edges. 
    """
    pass


def TimeEditorToggleSnapToClipPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllSculptObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMapCut(moveratio=None, mvr=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Cut along edges of the texture mapping. The cut edges become map borders.
    """
    pass


def greasePencil(*args, **kwargs):
    """
    
    """
    pass


def ReverseCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachSkin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def meshReorder(*args, **kwargs):
    """
    
    """
    pass


def curveIntersect(constructionHistory=None, ch=None, direction=None, d=None, tolerance=None, tol=None, useDirection=None, ud=None, *args, **kwargs):
    """
    You must specify two curves to intersect. 
    """
    pass


def runup(cache=None, cch=None, fromPreviousFrame=None, fpf=None, fromStartFrame=None, fsf=None, maxFrame=None, mxf=None, state=None, st=None, *args, **kwargs):
    """
    runup plays the scene through a frame of frames, forcing dynamic objects to evaluate as it does so.If no max frame is specified, runup runs up to the current time. 
    """
    pass


def gradientControlNoAttr(annotation=None, ann=None, asString=None, asString=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, currentKey=None, ck=None, currentKeyChanged=None, ckc=None, currentKeyColorValue=None, clv=None, currentKeyCurveValue=None, cvv=None, currentKeyInterpValue=None, civ=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, optionVar=None, ov=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rampAsColor=None, rac=None, useTemplate=None, ut=None, valueAtPoint=None, vap=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control for editing a ramp (2D control curve). The control attaches to an optionVar used to store and retrieve the encoded gradient control points stored in a string. 
    """
    pass


def SelectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleUVEditorUVStatisticsHUD(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentFlat(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sculpt(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, deformerTools=None, dt=None, dropoffDistance=None, dds=None, dropoffType=None, drt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, groupWithLocator=None, gwl=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, insideMode=None, im=None, maxDisplacement=None, mxd=None, mode=None, m=None, name=None, n=None, objectCentered=None, oc=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, sculptTool=None, st=None, split=None, sp=None, *args, **kwargs):
    """
    This command creates/edits/queries a sculpt object deformer. By default for creation mode an implicit sphere will be used as the sculpting object if no sculpt tool is specified. The name of the created/edited object is returned. 
    """
    pass


def PostInfinityOscillate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportAutoAxisEnable(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorHideAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyEditEdgeFlow(adjustEdgeFlow=None, aef=None, edgeFlow=None, ef=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Edit edges of a polygonal object to respect surface curvature. 
    """
    pass


def dR_viewLightsTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def air(attenuation=None, att=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, enableSpread=None, es=None, fanSetup=None, fs=None, inheritRotation=None, iro=None, inheritVelocity=None, iv=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, speed=None, s=None, spread=None, sp=None, velocityComponentOnly=None, vco=None, wakeSetup=None, wks=None, windSetup=None, wns=None, *args, **kwargs):
    """
    The air field simulates the effects of moving air. The affected objects will be accelerated or decelerated so that their velocities match that of the air. 
    """
    pass


def CreatePolygonSVG(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PointOnCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def projectionContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Set the context for projection manips
    """
    pass


def IncrementFluidCenter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_cameraToPoly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetNormalAngle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def intSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, field=None, f=None, fieldMaxValue=None, fmx=None, fieldMinValue=None, fmn=None, fieldStep=None, fs=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, sliderStep=None, ss=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def NodeEditorPinByDefault(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySoftEdge(angle=None, a=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Selectively makes edges soft or hard. 
    """
    pass


def roundCRCtx(*args, **kwargs):
    """
    
    """
    pass


def FBXExportQuickSelectSetAsCache(*args, **kwargs):
    """
    
    """
    pass


def SurfaceBooleanSubtractTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickMenuExecute(*args, **kwargs):
    """
    
    """
    pass


def cylinder(axis=None, ax=None, degree=None, d=None, endSweep=None, esw=None, heightRatio=None, hr=None, pivot=None, p=None, radius=None, r=None, sections=None, s=None, spans=None, nsp=None, startSweep=None, ssw=None, tolerance=None, tol=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The cylinder command creates a new cylinder and/or a dependency node that creates one, and returns their names. 
    """
    pass


def MirrorDeformerWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKEffectorName(*args, **kwargs):
    """
    
    """
    pass


def surfaceShaderList(add=None, add=None, remove=None, rm=None, *args, **kwargs):
    """
    Add/Remove a relationship between an object and the current shading group. 
    """
    pass


def defaultLightListCheckBox(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, shadingGroup=None, sg=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a checkBox that controls whether a shadingGroup is connected/disconnected from the defaultLightList. 
    """
    pass


def dR_selectSimilar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getFluidAttr(attribute=None, at=None, lowerFace=None, lf=None, xIndex=None, xi=None, xvalue=None, x=None, yIndex=None, yi=None, yvalue=None, y=None, zIndex=None, zi=None, zvalue=None, z=None, *args, **kwargs):
    """
    Returns values of built-in fluid attributes such as density, velocity, etc., for individual grid cells or for all cells in the grid.
    """
    pass


def SoloMaterial(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyBevel(angleTolerance=None, at=None, autoFit=None, af=None, offset=None, o=None, offsetAsFraction=None, oaf=None, roundness=None, r=None, segments=None, sg=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Bevel edges.
    """
    pass


def Loft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayUVWireframe(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def linearPrecision(*args, **kwargs):
    """
    This command controls the display of linear strings in the interface. (See the linearField command). Setting this affects any linear strings displayed afterwards, formatting them so they will show at most the specified number of digits after the decimal point. Allowed values are 0 through 6. 
    """
    pass


def softModCtx(dragSlider=None, ds=None, exists=None, ex=None, falseColor=None, fc=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, reset=None, rst=None, *args, **kwargs):
    """
    Controls the softMod context.
    """
    pass


def DuplicateSpecialOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateToolWithSnapMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToVertexFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mouse(enableScrollWheel=None, esw=None, mouseButtonTracking=None, mbt=None, mouseButtonTrackingStatus=None, mbs=None, scrollWheelStatus=None, sws=None, *args, **kwargs):
    """
    This command allows to configure mouse.
    """
    pass


def webViewCmd(*args, **kwargs):
    """
    
    """
    pass


def colorManagementPrefs(cmConfigFileEnabled=None, cfe=None, cmEnabled=None, cme=None, colorManagePots=None, cmp=None, colorManagedNodes=None, cmn=None, colorManagementSDKVersion=None, cmv=None, configFilePath=None, cfp=None, defaultInputSpaceName=None, din=None, equalsToPolicyFile=None, etp=None, exportPolicy=None, epy=None, inputSpaceNames=None, iss=None, loadPolicy=None, lpy=None, loadedDefaultInputSpaceName=None, ldn=None, loadedOutputTransformName=None, lon=None, loadedRenderingSpaceName=None, lrn=None, loadedViewTransformName=None, lvn=None, missingColorSpaceNodes=None, mcn=None, ocioRulesEnabled=None, ore=None, outputTarget=None, ott=None, outputTransformEnabled=None, ote=None, outputTransformName=None, otn=None, outputTransformNames=None, ots=None, outputUseViewTransform=None, ovt=None, policyFileName=None, pfn=None, popupOnError=None, poe=None, refresh=None, rfr=None, renderingSpaceName=None, rsn=None, renderingSpaceNames=None, rss=None, restoreDefaults=None, rde=None, viewTransformName=None, vtn=None, viewTransformNames=None, vts=None, *args, **kwargs):
    """
    This command allows querying and editing the color management global data in a scene.It also allows for setting the view transform and rendering space which automatically configures the color processing in the enabled views.
    """
    pass


def reproInstancer(*args, **kwargs):
    """
    
    """
    pass


def dR_timeConfigTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GlobalStitch(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectPanelActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def copySkinWeights(destinationSkin=None, ds=None, influenceAssociation=None, ia=None, mirrorInverse=None, mi=None, mirrorMode=None, mm=None, noBlendWeight=None, nbw=None, noMirror=None, nm=None, normalize=None, nr=None, sampleSpace=None, spa=None, smooth=None, sm=None, sourceSkin=None, ss=None, surfaceAssociation=None, sa=None, uvSpace=None, uv=None, *args, **kwargs):
    """
    Command to copy or mirror the skinCluster weights accross oneof the three major axes.The command can be used to mirrorweights either from one surface to another or within thesame surface.
    """
    pass


def SetMeshRepeatTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CycleThroughCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DistributeShellsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SimplifyCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SphericalProjection(*args, **kwargs):
    """
    unknown
    """
    pass


def SelectToolOptionsMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostChannelField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgBatchExportArchive(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def poleVectorConstraint(layer=None, l=None, name=None, n=None, remove=None, rm=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrains the poleVector of an ikRPsolve handle to point at a target object or at the average position of a number of targets. 
    """
    pass


def dR_loadRecentFile1(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveNormalTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_loadRecentFile3(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_loadRecentFile4(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setAttr(alteredValue=None, av=None, caching=None, ca=None, capacityHint=None, ch=None, channelBox=None, cb=None, clamp=None, c=None, keyable=None, k=None, lock=None, l=None, size=None, s=None, type=None, typ=None, *args, **kwargs):
    """
    Sets the value of a dependency node attribute.No value for the the attribute is needed when the -l/-k/-s flags are used. The -type flag is only required when setting a non-numeric attribute. 
    """
    pass


def FBXExportReferencedAssetsContent(*args, **kwargs):
    """
    
    """
    pass


def createNurbsCylinderCtx(*args, **kwargs):
    """
    
    """
    pass


def polySlideEdge(absolute=None, a=None, direction=None, d=None, edgeDirection=None, ed=None, symmetry=None, sym=None, *args, **kwargs):
    """
    Moves an edge loop selection along the edges connected to the sides of its vertices. 
    """
    pass


def polyTestPop(*args, **kwargs):
    """
    
    """
    pass


def setInfinity(attribute=None, at=None, controlPoints=None, cp=None, hierarchy=None, hi=None, postInfinite=None, poi=None, preInfinite=None, pri=None, shape=None, s=None, *args, **kwargs):
    """
    Set the infinity type before (after) a paramCurve's first (last) keyframe. 
    """
    pass


def ShareOneBrush(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def journal(*args, **kwargs):
    """
    
    """
    pass


def projectTangent(curvature=None, c=None, curvatureScale=None, cs=None, ignoreEdges=None, ie=None, reverseTangent=None, rt=None, rotate=None, ro=None, tangentDirection=None, td=None, tangentScale=None, ts=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The project tangent command is used to align (for tangents) a curve to two other curves or a surface. A surface isoparm may be selected to define the direction (U or V) to align to. The end of the curve must intersect with these other objects. Curvature continuity may also be applied if required. 
    """
    pass


def UVContourStretchProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PixelMoveUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshWaxToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorShapeMenuStateAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignOfflineFileOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSurfaceMatchTopology(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pause(seconds=None, sec=None, *args, **kwargs):
    """
    Pause for a specified number of seconds for canned demos or for test scripts to allow user to view results. 
    """
    pass


def ShowAllUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetKeyPath(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texSculptCacheSync(*args, **kwargs):
    """
    
    """
    pass


def ExtrudeFaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddInfluenceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectMultiComponentMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportScaleFactor(*args, **kwargs):
    """
    
    """
    pass


def xgmSetGuideCVCount(*args, **kwargs):
    """
    
    """
    pass


def hudSliderButton(allowOverlap=None, ao=None, block=None, b=None, blockAlignment=None, ba=None, blockSize=None, bs=None, buttonLabel=None, bl=None, buttonLabelFontSize=None, bfs=None, buttonPressCommand=None, bpc=None, buttonReleaseCommand=None, brc=None, buttonShape=None, bsh=None, buttonWidth=None, bw=None, decimalPrecision=None, dp=None, internalPadding=None, ip=None, maxValue=None, max=None, minValue=None, min=None, padding=None, p=None, section=None, s=None, sliderDragCommand=None, sdc=None, sliderIncrement=None, si=None, sliderLabel=None, sl=None, sliderLabelFontSize=None, sfs=None, sliderLabelWidth=None, slw=None, sliderLength=None, sln=None, sliderPressCommand=None, spc=None, sliderReleaseCommand=None, src=None, type=None, t=None, value=None, v=None, valueAlignment=None, va=None, valueFontSize=None, vfs=None, valueWidth=None, vw=None, visible=None, vis=None, *args, **kwargs):
    """
    This command creates a Heads-up Display (HUD) slider button control which is placed in a 2D inactive overlay plane on the 3D viewport. It is to be used to provide hands-on interaction designated by a user script. The HUD slider button control is derived from a generic HUD object and thus inherits a similar workflow. 
    """
    pass


def dR_slideOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleAttrFilter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignOfflineFile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hyperGraph(addBookmark=None, abk=None, addDependGraph=None, adg=None, addDependNode=None, adn=None, animateTransition=None, atr=None, attributeEditor=None, ae=None, bookmarkName=None, bn=None, clear=None, clr=None, collapseContainer=None, cc=None, connectionDrawStyle=None, cds=None, control=None, ctl=None, defineTemplate=None, dt=None, deleteBookmark=None, dbk=None, dependGraph=None, dg=None, dependNode=None, dn=None, docTag=None, dtg=None, down=None, do=None, downstream=None, ds=None, dragAndDropBehaviorCommand=None, ddc=None, dropNode=None, dr=None, dropTargetNode=None, drt=None, edgeDblClickCommand=None, edc=None, edgeDimmedDblClickCommand=None, edd=None, enableAutomaticLayout=None, eal=None, exists=None, ex=None, expandContainer=None, ec=None, feedbackGadget=None, fbg=None, feedbackNode=None, fbn=None, filter=None, f=None, filterDetail=None, fd=None, fitImageToHeight=None, fih=None, fitImageToWidth=None, fiw=None, focusCommand=None, fc=None, fold=None, fo=None, forceMainConnection=None, fmc=None, forceRefresh=None, frf=None, frame=None, fr=None, frameBranch=None, frb=None, frameGraph=None, fg=None, frameHierarchy=None, frh=None, freeform=None, fre=None, fromAttr=None, fat=None, getNodeList=None, gnl=None, getNodePosition=None, gnp=None, graphLayoutStyle=None, gls=None, graphType=None, gt=None, highlightConnection=None, hlc=None, iconSize=None, ics=None, image=None, img=None, imageEnabled=None, ime=None, imageForContainer=None, ifc=None, imagePosition=None, imp=None, imageScale=None, ims=None, isHotkeyTarget=None, iht=None, layout=None, lay=None, layoutSelected=None, lsl=None, lockMainConnection=None, lck=None, look=None, loo=None, mainListConnection=None, mlc=None, mergeConnections=None, mc=None, navigateHome=None, hom=None, nextView=None, nvw=None, nodeDropCommand=None, ndr=None, nodePressCommand=None, np=None, nodeReleaseCommand=None, nr=None, opaqueContainers=None, opc=None, orientation=None, orientation=None, panel=None, pnl=None, parent=None, p=None, popupMenuScript=None, pms=None, previousView=None, pvw=None, range=None, rg=None, rebuild=None, rb=None, removeNode=None, rmn=None, rename=None, rn=None, resetFreeform=None, rf=None, restoreBookmark=None, rbk=None, scrollUpDownNoZoom=None, snz=None, selectionConnection=None, slc=None, setNodePosition=None, snp=None, showConnectionFromSelected=None, scf=None, showConnectionToSelected=None, sct=None, showConstraints=None, shc=None, showDeformers=None, shd=None, showExpressions=None, shx=None, showInvisible=None, shi=None, showRelationships=None, shr=None, showShapes=None, shs=None, showUnderworld=None, shu=None, stateString=None, sts=None, transitionFrames=None, tfr=None, unParent=None, up=None, unfold=None, uf=None, unfoldAll=None, ua=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, updateNodeAdded=None, una=None, updateSelection=None, us=None, upstream=None, ups=None, useFeedbackList=None, ufl=None, useTemplate=None, ut=None, viewOption=None, vo=None, visibility=None, vis=None, zoom=None, zm=None, *args, **kwargs):
    """
    The following is an overview of the basic features of the hypergraph. A more detailed description is given in the user manuals. 
    """
    pass


def setFluidAttr(addValue=None, ad=None, attribute=None, at=None, clear=None, cl=None, floatRandom=None, fr=None, floatValue=None, fv=None, lowerFace=None, lf=None, reset=None, re=None, vectorRandom=None, vr=None, vectorValue=None, vv=None, xIndex=None, xi=None, xvalue=None, x=None, yIndex=None, yi=None, yvalue=None, y=None, zIndex=None, zi=None, zvalue=None, z=None, *args, **kwargs):
    """
    Sets values of built-in fluid attributes such as density, velocity, etc., for individual grid cells or for all cells in the grid.
    """
    pass


def xgmCache(*args, **kwargs):
    """
    
    """
    pass


def convertTessellation(allCameras=None, acm=None, camera=None, cam=None, *args, **kwargs):
    """
    Command to translate the basic tessellation attributes to advanced. If a camera flag is specified the translation will be based on the distance the surface is from the camera. The closer the surface is to the camera the more triangles there will be in the tessellation. If the "-allCameras" flags is specified, the renderable camera closest to the surface will be used to set the tessellation. The camera tessellation estimate is also dependent on the current render resolution; a higher resolution the result in a more finely tessellated surface. Multiple NURB surfaces may be specified on the command line, or if no command arguments are specified the surfaces on the active list will be used. This command operates by calculating the chord height such that smooth tessellation is achieved when the surface is rendered.The advanced tessellation setting will be enabled on each surface specified, the primary tessellation parameters will be set, and chord height will be used as the secondary criteria.
    """
    pass


def LockNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hwReflectionMap(backTextureName=None, bkn=None, bottomTextureName=None, bmn=None, cubeMap=None, cm=None, decalMode=None, dm=None, enable=None, en=None, frontTextureName=None, ftn=None, leftTextureName=None, ltn=None, rightTextureName=None, rtn=None, sphereMapTextureName=None, smn=None, topTextureName=None, tpn=None, *args, **kwargs):
    """
    This command creates a hwReflectionMap node for having reflection on textured surfaces that currently have their boolean attribute displayHWEnvironment set to true. 
    """
    pass


def XgmSplineCacheExportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SwapBlendShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LoadHIKEffectorSetState(*args, **kwargs):
    """
    
    """
    pass


def gravity(attenuation=None, att=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, *args, **kwargs):
    """
    A gravity field simulates the Earth's gravitational force.It pulls objects in a fixed direction (generally downward) entirely independent of their position or mass. 
    """
    pass


def NodeEditorSetLargeNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleConnected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def greasePencilHelper(*args, **kwargs):
    """
    
    """
    pass


def HypershadeCloseActiveTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def glRenderEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, lookThru=None, lt=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, viewCameraName=None, vcn=None, *args, **kwargs):
    """
    Create a glRender view. This is a special view used for hardware rendering. This command is used to create and reparent the view as needed to support panels. See the glRender command for controlling the specific behavior of the hardware rendering. 
    """
    pass


def loadUI(listTypes=None, lt=None, uiFile=None, f=None, uiString=None, s=None, verbose=None, v=None, workingDirectory=None, wd=None, *args, **kwargs):
    """
    loadUI command allows loading of a user interface created in Trolltech 
    """
    pass


def HotkeyPreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphDelete(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setInputDeviceMapping(absolute=None, a=None, axis=None, ax=None, device=None, d=None, offset=None, o=None, relative=None, r=None, scale=None, s=None, view=None, v=None, world=None, w=None, *args, **kwargs):
    """
    The command sets a scale and offset for all attachments made to a specified device axis. Any attachment made to a mapped device axis will have the scale and offset applied to its values. 
    """
    pass


def FBXGetTakeComment(*args, **kwargs):
    """
    
    """
    pass


def FBIKReachKeyingOptionIK(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllNURBSCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TexSewActivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddCurvesToHairSystem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportBakeComplexStep(*args, **kwargs):
    """
    
    """
    pass


def XgmSplineCacheEnableSelectedCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textureWindow(backFacingColor=None, bfc=None, capture=None, cpt=None, captureSequenceNumber=None, csn=None, changeCommand=None, cc=None, checkerDensity=None, cd=None, clearImage=None, ci=None, cmEnabled=None, cme=None, control=None, ctl=None, defineTemplate=None, dt=None, displayAxes=None, dax=None, displayCheckered=None, dct=None, displayDistortion=None, ddt=None, displayDivisionLines=None, ddl=None, displayGridLines=None, dgl=None, displayImage=None, di=None, displayLabels=None, dl=None, displayPreselection=None, dps=None, displaySolidMap=None, dsm=None, displayStyle=None, dst=None, distortionPerObject=None, dpo=None, divisions=None, d=None, docTag=None, dtg=None, doubleBuffer=None, dbf=None, drawAxis=None, da=None, drawSubregions=None, dsr=None, exists=None, ex=None, exposure=None, exp=None, filter=None, f=None, forceMainConnection=None, fmc=None, forceRebake=None, frb=None, frameAll=None, fa=None, frameSelected=None, fs=None, frontFacingColor=None, ffc=None, gamma=None, ga=None, highlightConnection=None, hlc=None, imageBaseColor=None, ibc=None, imageDisplay=None, id=None, imageNames=None, imn=None, imageNumber=None, imageNumber=None, imagePixelSnap=None, ip=None, imageRatio=None, imr=None, imageSize=None, imageSize=None, imageTileRange=None, itr=None, imageUnfiltered=None, iuf=None, internalFaces=None, internalFaces=None, labelPosition=None, lp=None, loadImage=None, li=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, maxResolution=None, mrs=None, nbImages=None, nim=None, numUvSets=None, nuv=None, numberOfImages=None, ni=None, panel=None, pnl=None, parent=None, p=None, realSize=None, rs=None, refresh=None, ref=None, relatedFaces=None, rf=None, removeAllImages=None, ra=None, removeImage=None, ri=None, rendererString=None, rds=None, reset=None, r=None, saveImage=None, si=None, scaleBlue=None, sb=None, scaleGreen=None, sg=None, scaleRed=None, sr=None, selectInternalFaces=None, sif=None, selectRelatedFaces=None, srf=None, selectionConnection=None, slc=None, setUvSet=None, suv=None, singleBuffer=None, sbf=None, size=None, s=None, spacing=None, sp=None, stateString=None, sts=None, style=None, st=None, tileLabels=None, tlb=None, toggle=None, tgl=None, toggleExposure=None, tge=None, toggleGamma=None, tgg=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useFaceGroup=None, uf=None, useTemplate=None, ut=None, uvSets=None, uvs=None, viewPortImage=None, vpi=None, viewTransformName=None, vtn=None, writeImage=None, wi=None, *args, **kwargs):
    """
    This command is used to create a UV Editor and to query or edit the texture editor settings. 
    """
    pass


def getMetadata(dataType=None, dt=None, listChannelNames=None, lcn=None, listMemberNames=None, lmn=None, listStreamNames=None, lsn=None, memberName=None, mn=None, channelName=None, cn=None, channelType=None, cht=None, endIndex=None, eix=None, index=None, idx=None, indexType=None, idt=None, scene=None, scn=None, startIndex=None, six=None, streamName=None, stn=None, *args, **kwargs):
    """
    
    """
    pass


def ShowLastHidden(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dragAttrContext(connectTo=None, ct=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, reset=None, r=None, *args, **kwargs):
    """
    The dragAttrContext allows a user to manipulate the attributes of an object by using a virtual slider within the viewport.The virtual slider is used by dragging in a viewport with the middle mouse button.The speed at which the attributes are changed can be controlled by holding down the Ctrl key to slow it down and the Shift key to speed it up. 
    """
    pass


def findType(deep=None, d=None, exact=None, e=None, forward=None, f=None, type=None, t=None, *args, **kwargs):
    """
    The 
    """
    pass


def DuplicateCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bezierAnchorState(even=None, ev=None, smooth=None, sm=None, *args, **kwargs):
    """
    The bezierAnchorState command provides an easy interface to modify anchor states: 
    """
    pass


def dR_connectPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def helpLine(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a help line where tool help/hints are shown. 
    """
    pass


def CopyMeshAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorAddOnNodeCreate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteHistory(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCameraAimUpOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeTestTextureOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def removeMultiInstance(b=None, b=None, *args, **kwargs):
    """
    Removes a particular instance of a multiElement. This is only useful for input attributes since outputs will get regenerated the next time the node gets executed. This command will remove the instance and optionally break all incoming and outgoing connections to that instance. If the connections are not broken (with the -b true) flag, then the command will fail if connections exist. 
    """
    pass


def dR_alwaysOnTopTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutUVs3D(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateAudioTracksAtEnd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def callbacks(addCallback=None, ac=None, clearAllCallbacks=None, cac=None, clearCallbacks=None, cc=None, describeHooks=None, dh=None, dumpCallbacks=None, dc=None, executeCallbacks=None, ec=None, hook=None, h=None, listCallbacks=None, lc=None, owner=None, o=None, removeCallback=None, rc=None, *args, **kwargs):
    """
    This command allows you to add callbacks at key times during UI creation so that the Maya UI can be extended. The list of standard Maya hooks, as well as the arguments which will be passed to the callback based on the context are enumerated in the 
    """
    pass


def PointOnCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorExportSelectionOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Turbulence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PasteKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyProjectCurve(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The polyProjectCurve command creates curves by projecting a selected curve onto a selected poly mesh.The direction of projection will be the current view direction unless the direction vector is specified with the -direction/-d flag. 
    """
    pass


def PaintEffectPanelDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def moveVertexAlongDirection(direction=None, d=None, magnitude=None, m=None, normalDirection=None, n=None, uDirection=None, u=None, uvNormalDirection=None, uvn=None, vDirection=None, v=None, *args, **kwargs):
    """
    The command moves the selected vertex ( control vertex ) in the specified unit direction by the given magnitude. The vertex(ices) may also be moved in the direction of unit normal ( -n flag ). For NURBS surface vertices the direction of movement could also be either in tangent along U or tangent along V.The flags -n, -u, -v and -d are mutually exclusive, ie. the selected vertices can be all moved in only -n or -u or -v or -d. 
    """
    pass


def XgmSetPlaceBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def flushUndo(*args, **kwargs):
    """
    Removes everything from the undo queue, freeing up memory.
    """
    pass


def XgGuideTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdToBlind(absolutePosition=None, ap=None, includeCreases=None, ic=None, includeZeroOffsets=None, izo=None, *args, **kwargs):
    """
    The subdivision surface hierarchical edits will get copied into blind data on the given polygon.The polygon face count and topology must match the subdivision surface base mesh face count and topology. If they don't, the blind data will still appear, but is not guaranteed to produce the same result when converted back to a subdivision surface. 
    """
    pass


def extendFluid(*args, **kwargs):
    """
    
    """
    pass


def ShowMeshGrabToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def VortexOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeEdgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkLeftSelect(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewJointsTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmCreateInteractiveGroomSplines(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CoarserSubdivLevel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorFbxExportAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def intFieldGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enable1=None, en1=None, enable2=None, en2=None, enable3=None, en3=None, enable4=None, en4=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfFields=None, nf=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, useTemplate=None, ut=None, value=None, v=None, value1=None, v1=None, value2=None, v2=None, value3=None, v3=None, value4=None, v4=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def pluginDisplayFilter(classification=None, cls=None, deregister=None, dr=None, exists=None, ex=None, label=None, l=None, listFilters=None, lf=None, register=None, r=None, *args, **kwargs):
    """
    Register, deregister or query a plugin display filter. Plug-ins can use this command to register their own display filters which will appear in the 'Show' menus on Maya's model panels.
    """
    pass


def FBXLoadImportPresetFile(*args, **kwargs):
    """
    
    """
    pass


def TemplateObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def JointToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CombinePolygonsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def paramLocator(position=None, p=None, *args, **kwargs):
    """
    The command creates a locator in the underworld of a NURBS curve or NURBS surface at the specified parameter value.If no object is specified, then a locator will be created on the first valid selected item (either a curve point or a surface point). 
    """
    pass


def sbs_GetSubstanceBuildVersion(*args, **kwargs):
    """
    
    """
    pass


def MakeMotorBoatsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CircularFilletOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleAutoActivateBodyPart(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def affectedNet(type=None, t=None, *args, **kwargs):
    """
    This command gets the list of attributes on a node or node type and creates nodes of type TdnAffect, one for each attribute, that are connected iff the source node's attribute affects the destination node's attribute. 
    """
    pass


def fluidDeleteCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySetVertices(*args, **kwargs):
    """
    
    """
    pass


def OutlinerToggleDAGOnly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShareUVInstances(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nexQuadDrawContext(*args, **kwargs):
    """
    
    """
    pass


def polyWarpImage(*args, **kwargs):
    """
    
    """
    pass


def curveEditorCtx(direction=None, dir=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, relativeTangentSize=None, rts=None, title=None, t=None, *args, **kwargs):
    """
    The curveEditorCtx command creates a new NURBS editor context, which is used to edit a NURBS curve or surface. 
    """
    pass


def HypershadeMoveTabLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtractFace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSPlaneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetGraphsNamesFromSubstanceNode(*args, **kwargs):
    """
    
    """
    pass


def EnableDynamicConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CVCurveTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodePreset(attributes=None, atr=None, custom=None, ctm=None, delete=None, delete=None, exists=None, ex=None, isValidName=None, ivn=None, list=None, ls=None, load=None, ld=None, save=None, sv=None, *args, **kwargs):
    """
    Command to save and load preset settings for a node. This command allows you to take a snapshot of the values of all attributes of a node and save it to disk as a preset with user specified name. Later the saved preset can be loaded and applied onto a different node of the same type. The end result is that the node to which the preset is applied takes on the same values as the node from which the preset was generated had at the time of the snapshot.
    """
    pass


def animDisplay(modelUpdate=None, upd=None, refAnimCurvesEditable=None, rae=None, timeCode=None, tc=None, timeCodeOffset=None, tco=None, *args, **kwargs):
    """
    This command changes certain display options used by animation windows. 
    """
    pass


def HideLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clipSchedulerOutliner(annotation=None, ann=None, backgroundColor=None, bgc=None, clipScheduler=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries a clip scheduler outliner control.
    """
    pass


def dgfootprint(*args, **kwargs):
    """
    
    """
    pass


def BakeChannelOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportSkinWeightMapsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleOutliner(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleCompIndex(*args, **kwargs):
    """
    
    """
    pass


def nurbsSquare(center=None, c=None, centerX=None, cx=None, centerY=None, cy=None, centerZ=None, cz=None, degree=None, d=None, normal=None, nr=None, normalX=None, nrx=None, normalY=None, nry=None, normalZ=None, nrz=None, sideLength1=None, sl1=None, sideLength2=None, sl2=None, spansPerSide=None, sps=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The nurbsSquare command creates a square
    """
    pass


def TimeEditorToggleTimeCursorRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothCreateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadePerspLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddInfluence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreviousKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def muMessageAdd(*args, **kwargs):
    """
    
    """
    pass


def PaintGeomCacheToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVSphericalProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyDelFacet(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Deletes faces. If the result is split into disconnected pieces, the pieces (so-called shells) are still considered to be one object. 
    """
    pass


def ToggleTextureBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Flare(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pointOnPolyConstraint(layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, offset=None, o=None, remove=None, rm=None, skip=None, sk=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's position to the position of the target object or to the average position of a number of targets. 
    """
    pass


def RemoveInbetween(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reroot(*args, **kwargs):
    """
    This command will reroot a skeleton. The selected joint or the given joint at the command line will be the newroot of the skeleton. All ikHandles passing through the selected joint or above it will be deleted. 
    """
    pass


def displayString(delete=None, d=None, exists=None, ex=None, keys=None, k=None, replace=None, r=None, value=None, v=None, *args, **kwargs):
    """
    Assign a string value to a string identifier. Allows you define a string in one location and then refer to it by its identifier in many other locations. Formatted strings are also supported (NOTE however, this functionality is now provided in a more general fashion by the format command, use of format is recommended). You may embed up to 3 special character sequences ^1s, ^2s, and ^3s to perform automatic string replacement. The embedded characters will be replaced with the extra command arguments. See example section for more detail. Note the extra command arguments do not need to be display string identifiers.
    """
    pass


def selectPref(affectsActive=None, aa=None, allowHiliteSelection=None, ahs=None, autoSelectContainer=None, asc=None, autoUseDepth=None, aud=None, clickBoxSize=None, cbs=None, clickDrag=None, cld=None, containerCentricSelection=None, ccs=None, disableComponentPopups=None, dcp=None, expandPopupList=None, epl=None, ignoreSelectionPriority=None, isp=None, manipClickBoxSize=None, mcb=None, paintSelect=None, ps=None, paintSelectWithDepth=None, psd=None, popupMenuSelection=None, pms=None, preSelectBackfacing=None, psb=None, preSelectClosest=None, psc=None, preSelectDeadSpace=None, pds=None, preSelectHilite=None, psh=None, preSelectHiliteSize=None, phs=None, preSelectTweakDeadSpace=None, pdt=None, selectTypeChangeAffectsActive=None, stc=None, selectionChildHighlightMode=None, sch=None, singleBoxSelection=None, sbs=None, straightLineDistance=None, sld=None, trackSelectionOrder=None, tso=None, useDepth=None, ud=None, xformNoSelect=None, xns=None, *args, **kwargs):
    """
    This command controls state variables used to selection UI behavior.
    """
    pass


def FBXGetTakeIndex(*args, **kwargs):
    """
    
    """
    pass


def cone(axis=None, ax=None, degree=None, d=None, endSweep=None, esw=None, heightRatio=None, hr=None, pivot=None, p=None, radius=None, r=None, sections=None, s=None, spans=None, nsp=None, startSweep=None, ssw=None, tolerance=None, tol=None, useOldInitBehaviour=None, oib=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The cone command creates a new cone and/or a dependency node that creates one, and returns their names. 
    """
    pass


def SelectAllWires(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def vnnConnect(disconnect=None, d=None, *args, **kwargs):
    """
    Makes a connection between two VNN node ports. The first parameter is the full name of the DG node that contains the VNN graph. The next two parameters are the full path of the ports from the root of the VNN container. This command can be used for compound or node connections, and the parameters can be out-of-order. 
    """
    pass


def AddSelectionAsTargetShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menuItem(allowOptionBoxes=None, aob=None, altModifier=None, alt=None, annotation=None, ann=None, boldFont=None, bld=None, checkBox=None, cb=None, collection=None, cl=None, command=None, c=None, commandModifier=None, cmd=None, ctrlModifier=None, ctl=None, data=None, da=None, defineTemplate=None, dt=None, divider=None, d=None, dividerLabel=None, dl=None, docTag=None, dtg=None, dragDoubleClickCommand=None, ddc=None, dragMenuCommand=None, dmc=None, echoCommand=None, ec=None, enable=None, en=None, enableCommandRepeat=None, ecr=None, exists=None, ex=None, familyImage=None, fi=None, image=None, i=None, imageOverlayLabel=None, iol=None, insertAfter=None, ia=None, isCheckBox=None, icb=None, isOptionBox=None, iob=None, isRadioButton=None, irb=None, italicized=None, itl=None, keyEquivalent=None, ke=None, label=None, l=None, longDivider=None, ld=None, ltVersion=None, lt=None, optionBox=None, ob=None, optionBoxIcon=None, obi=None, optionModifier=None, opt=None, parent=None, p=None, postMenuCommand=None, pmc=None, postMenuCommandOnce=None, pmo=None, radialPosition=None, rp=None, radioButton=None, rb=None, shiftModifier=None, sh=None, sourceType=None, stp=None, subMenu=None, sm=None, tearOff=None, to=None, useTemplate=None, ut=None, version=None, ver=None, *args, **kwargs):
    """
    This command creates/edits/queries menu items.
    """
    pass


def DistanceTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleIsolateSelect(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCloseBorder(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Closes open borders of objects. For each border edge given, a face is created to fill the hole the edge lies on. 
    """
    pass


def AutoProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeHoleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FrameSelectedInAllViews(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def grid(default=None, df=None, displayAxes=None, da=None, displayAxesBold=None, dab=None, displayDivisionLines=None, ddl=None, displayGridLines=None, dgl=None, displayOrthographicLabels=None, dol=None, displayPerspectiveLabels=None, dpl=None, divisions=None, d=None, orthographicLabelPosition=None, olp=None, perspectiveLabelPosition=None, plp=None, reset=None, r=None, size=None, s=None, spacing=None, sp=None, style=None, st=None, toggle=None, tgl=None, *args, **kwargs):
    """
    This command changes the size and spacing of lines on the ground plane displayed in the perspective and orthographic views. 
    """
    pass


def ToggleCapsLockDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetDirectionBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteTextureReferenceObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShowDirectoriesOnly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attachGeometryCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveInfluence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVFrontFacingComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllNParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectLinesMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sculptMeshCacheCtx(adjustSize=None, asz=None, adjustStrength=None, ast=None, affectAllLayers=None, aal=None, brushDirection=None, bd=None, brushSize=None, bsz=None, brushStrength=None, bst=None, buildUpRate=None, bur=None, cloneHideSource=None, chs=None, cloneMethod=None, cm=None, cloneShapeSource=None, css=None, cloneTargetSource=None, cas=None, constrainToSurface=None, cts=None, direction=None, d=None, displayFrozen=None, df=None, displayMask=None, dm=None, displayWireframe=None, dw=None, falloffType=None, ft=None, flood=None, fl=None, floodFreeze=None, ff=None, frame=None, frm=None, freezeSelection=None, fsl=None, grabFollowPath=None, gfp=None, grabSilhouette=None, gs=None, grabTwist=None, gtw=None, inverted=None, inv=None, lastMode=None, lm=None, lockShellBorder=None, lsb=None, minSize=None, msz=None, minStrength=None, mst=None, mirror=None, mr=None, mode=None, m=None, orientToSurface=None, ots=None, sculptFalloffCurve=None, sfc=None, size=None, sz=None, stampDistance=None, s=None, stampFile=None, stp=None, stampFlipX=None, sfx=None, stampFlipY=None, sfy=None, stampOrientToStroke=None, sos=None, stampPlacement=None, sp=None, stampRandomization=None, srd=None, stampRandomizeFlipX=None, srx=None, stampRandomizeFlipY=None, sry=None, stampRandomizePosX=None, spx=None, stampRandomizePosY=None, spy=None, stampRandomizeRotation=None, srr=None, stampRandomizeScale=None, src=None, stampRandomizeStrength=None, srs=None, stampRotation=None, sr=None, steadyStrokeDistance=None, ssd=None, strength=None, st=None, updatePlane=None, upl=None, useGlobalSize=None, ugs=None, useScreenSpace=None, ssp=None, useStampDistance=None, usd=None, useStampImage=None, usi=None, useSteadyStroke=None, uss=None, wholeStroke=None, wst=None, wireframeAlpha=None, wa=None, wireframeColor=None, wc=None, *args, **kwargs):
    """
    This is a tool context command for mesh cache sculpting tool.
    """
    pass


def subgraph(*args, **kwargs):
    """
    
    """
    pass


def SymmetrizeUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostKillplane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectedAnimLayer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapPointToPoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSoftBodyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UIModeMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideWrapInfluences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendFluid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlaybackForward(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikCustomRigToolWidget(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorClipTrimEnd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iconTextCheckBox(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, flat=None, fla=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, highlightImage=None, hi=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, onCommand=None, onc=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, selectionHighlightImage=None, shi=None, selectionImage=None, si=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, value=None, v=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def MatchPivots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyColorSet(allColorSets=None, acs=None, clamped=None, cla=None, colorSet=None, cs=None, copy=None, cp=None, create=None, cr=None, currentColorSet=None, ccs=None, currentPerInstanceSet=None, cpi=None, delete=None, d=None, newColorSet=None, nc=None, perInstance=None, pi=None, rename=None, rn=None, representation=None, rpt=None, shareInstances=None, si=None, unshared=None, us=None, *args, **kwargs):
    """
    Command to do the following to color sets:- delete an existing color set.- rename an existing color set.- create a new empty color set.- set the current color set to a pre-existing color set.- modify sharing between instances of per-instance color sets- query the current color set.- query the names of all color sets.- query the name(s) along with representation value(s)or clamped value(s) of all color sets- query the representation value or clamped value of the current color set
    """
    pass


def SetIKFKKeyframe(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def falloffCurveAttr(addControlVertex=None, acv=None, annotation=None, ann=None, asString=None, asString=None, attribute=None, at=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, currentKey=None, ck=None, currentKeyValue=None, ckv=None, customCurveWidget=None, ccw=None, defineTemplate=None, dt=None, deleteControlVertex=None, dcv=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, readOnly=None, ro=None, selectedPositionControl=None, spc=None, selectedValueControl=None, svc=None, snapToGrid=None, stg=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control for editing a 2D control curve. This control attaches to a curve attribute, which must be a multi attribute where each entry is a compound composed of: 
    """
    pass


def DeltaMushOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reverseCurve(constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, range=None, rn=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The reverseCurve command reverses the direction of a curve or curve-on-surface.A string is returned containing the pathname of the newly reversed curve and the name of the resulting dependency node.The reversed curve has the same parameter range as the original curve. 
    """
    pass


def ShowObjectGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PencilCurveTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecrementFluidCenter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenCloseCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSplineBaseDensityScaleChangeCmd(*args, **kwargs):
    """
    
    """
    pass


def pointOnCurve(curvatureCenter=None, cc=None, curvatureRadius=None, cr=None, normal=None, no=None, normalizedNormal=None, nn=None, normalizedTangent=None, nt=None, parameter=None, pr=None, position=None, p=None, tangent=None, t=None, turnOnPercentage=None, top=None, constructionHistory=None, ch=None, *args, **kwargs):
    """
    This command returns information for a point on a NURBS curve. If no flag is specified, it assumes p/position by default. 
    """
    pass


def CameraSetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BreakShadowLinks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetPreferredAngle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def U3DBrushSizeOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ls(absoluteName=None, an=None, allPaths=None, ap=None, assemblies=None, assemblies=None, cameras=None, ca=None, containerType=None, ct=None, containers=None, con=None, dagObjects=None, dag=None, defaultNodes=None, dn=None, dependencyNodes=None, dep=None, exactType=None, et=None, excludeType=None, ext=None, flatten=None, fl=None, geometry=None, g=None, ghost=None, gh=None, head=None, hd=None, hilite=None, hl=None, intermediateObjects=None, io=None, invisible=None, iv=None, leaf=None, lf=None, lights=None, lt=None, live=None, lv=None, lockedNodes=None, ln=None, long=None, l=None, materials=None, mat=None, modified=None, mod=None, noIntermediate=None, ni=None, nodeTypes=None, nt=None, objectsOnly=None, o=None, orderedSelection=None, os=None, partitions=None, pr=None, persistentNodes=None, pn=None, planes=None, pl=None, preSelectHilite=None, psh=None, readOnly=None, ro=None, recursive=None, r=None, referencedNodes=None, rn=None, references=None, rf=None, renderGlobals=None, rg=None, renderQualities=None, rq=None, renderResolutions=None, rr=None, renderSetups=None, rs=None, selection=None, sl=None, sets=None, set=None, shapes=None, s=None, shortNames=None, sn=None, showNamespace=None, sns=None, showType=None, st=None, tail=None, tl=None, templated=None, tm=None, textures=None, tex=None, transforms=None, tr=None, type=None, typ=None, undeletable=None, ud=None, untemplated=None, ut=None, uuid=None, uid=None, visible=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def symmetricModelling(about=None, a=None, allowPartial=None, ap=None, axis=None, ax=None, preserveSeam=None, ps=None, reset=None, r=None, seamFalloffCurve=None, sf=None, seamTolerance=None, st=None, symmetry=None, s=None, tolerance=None, t=None, topoSymmetry=None, ts=None, *args, **kwargs):
    """
    This command allows you to change the symmetric modelling options. 
    """
    pass


def SetShrinkWrapInnerObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorClipLoopToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    Edit the characteristic of an editor
    """
    pass


def RenderSetupWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def spring(addSprings=None, add=None, allPoints=None, all=None, count=None, ct=None, damping=None, d=None, dampingPS=None, dPS=None, endForceWeight=None, efw=None, exclusive=None, exc=None, length=None, l=None, maxDistance=None, mxd=None, minDistance=None, mnd=None, minMax=None, mm=None, name=None, n=None, noDuplicate=None, nd=None, restLength=None, rl=None, restLengthPS=None, rPS=None, startForceWeight=None, sfw=None, stiffness=None, s=None, stiffnessPS=None, sPS=None, useDampingPS=None, udp=None, useRestLengthPS=None, urp=None, useStiffnessPS=None, usp=None, walkLength=None, wl=None, wireframe=None, wf=None, *args, **kwargs):
    """
    The spring command can do any of the following:
    """
    pass


def transformCompare(root=None, r=None, *args, **kwargs):
    """
    Compares two transforms passed as arguments. If they are the same, returns 0. If they are different, returns 1. If no transforms are specified in the command line, then the transforms from the active list are used. 
    """
    pass


def InteractiveSplitToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreviousManipulatorHandle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshRepeatToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySplit(edgepoint=None, ep=None, facepoint=None, fp=None, insertpoint=None, ip=None, smoothingangle=None, sma=None, subdivision=None, s=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    Split facets/edges of a polygonal object. 
    """
    pass


def SetFluidAttrFromCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveRotateScaleToolToggleSnapRelativeMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveEditTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeRegionDollyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command can be used to create a dolly context for the dope sheet editor. 
    """
    pass


def BrushPresetBlendShapeOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyColorBlindData(aboveMaxColorBlue=None, amb=None, aboveMaxColorGreen=None, amg=None, aboveMaxColorRed=None, amr=None, attrName=None, n=None, belowMinColorBlue=None, bmb=None, belowMinColorGreen=None, bmg=None, belowMinColorRed=None, bmr=None, clashColorBlue=None, ccb=None, clashColorGreen=None, ccg=None, clashColorRed=None, ccr=None, colorBlue=None, cb=None, colorGreen=None, cg=None, colorRed=None, cr=None, dataType=None, dt=None, enableFalseColor=None, efc=None, maxColorBlue=None, mxb=None, maxColorGreen=None, mxg=None, maxColorRed=None, mxr=None, maxValue=None, mxv=None, minColorBlue=None, mnb=None, minColorGreen=None, mng=None, minColorRed=None, mnr=None, minValue=None, mnv=None, mode=None, m=None, noColorBlue=None, ncb=None, noColorGreen=None, ncg=None, noColorRed=None, ncr=None, numIdTypes=None, num=None, queryMode=None, q=None, typeId=None, id=None, useMax=None, umx=None, useMin=None, umn=None, value=None, v=None, *args, **kwargs):
    """
    This command applies false color to the selected polygonal components and objects, depending on whether or not blind data exists for the selected components (or, in the case of poly objects, dynamic attributes), and, depending on the color mode indicated, what the values are. It is possible to color objects based on whether or not the data exists, if the data matches a specific value or range of values, or grayscale color the data according to what the actual value is in relation to the specified min and max. This command also has a query mode in which the components and/or objects are returned in a string array to allow for selection filtering.
    """
    pass


def RelaxInitialState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetKeyVertexColor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CancelBatchRender(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportColladaTriangulate(*args, **kwargs):
    """
    
    """
    pass


def dR_modeMulti(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRevertSelectedSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewXrayTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selConstraintOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportSkinWeightMaps(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMoveEdge(worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, localCenter=None, lc=None, localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localRotate=None, lr=None, localRotateX=None, lrx=None, localRotateY=None, lry=None, localRotateZ=None, lrz=None, localScale=None, ls=None, localScaleX=None, lsx=None, localScaleY=None, lsy=None, localScaleZ=None, lsz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, *args, **kwargs):
    """
    Modifies edges of a polygonal object. Translate, move, rotate or scale edges. 
    """
    pass


def lightList(add=None, add=None, remove=None, rm=None, *args, **kwargs):
    """
    Add/Remove a relationship between an object and the current light. Soon to be replaced by the connect-attribute command. 
    """
    pass


def distanceDimension(endPoint=None, ep=None, startPoint=None, sp=None, *args, **kwargs):
    """
    This command is used to create a distance dimension to display the distance between two specified points. 
    """
    pass


def CreateShrinkWrap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshSmoothTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGraphUpstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgPreRendering(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintSelectToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetAsCombinationTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def makebot(checkdepends=None, c=None, checkres=None, r=None, input=None, i=None, nooverwrite=None, nov=None, output=None, o=None, verbose=None, v=None, *args, **kwargs):
    """
    The makebot command takes an image file and produces a block ordered texture (BOT) file, to be used for texture caching. If a relative pathname is specified for the input image file, project management rules apply.If a relative pathname is specified for the output BOT file, project management rules apply and gets put into the sourceImages directory. 
    """
    pass


def RefineSelectedComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_targetWeldRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllDynamicConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def resourceManager(nameFilter=None, nf=None, saveAs=None, s=None, *args, **kwargs):
    """
    List resources matching certain properties.
    """
    pass


def FBXLoadExportPresetFile(*args, **kwargs):
    """
    
    """
    pass


def HypershadeDeleteAllUtilities(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddToCurrentSceneMotionBuilder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnterEditMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachSubdivSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_setRelaxAffectsAuto(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttrTool(exists=None, ex=None, remove=None, rm=None, *args, **kwargs):
    """
    
    """
    pass


def PaintOperationMarkingMenuRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def emit(attribute=None, at=None, floatValue=None, fv=None, object=None, o=None, position=None, pos=None, vectorValue=None, vv=None, *args, **kwargs):
    """
    The 
    """
    pass


def SmoothProxy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def trim(locatorU=None, lu=None, locatorV=None, lv=None, selected=None, sl=None, shrink=None, sh=None, tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command trims a surface to its curves on surface by first splitting the surface and then selecting which regions to keep or discard. 
    """
    pass


def loadModule(allModules=None, a=None, load=None, ld=None, scan=None, sc=None, *args, **kwargs):
    """
    Maya plug-ins may be installed individually within one of Maya's standard plug-in directories, or they may be packaged up with other resources in a "module". Each module resides in its own directory and provides a module definition file to make Maya aware of the plug-ins it provides. When Maya starts up it loads all of the module files it finds, making the module's plug-ins, scripts and other resources available for use. Note that the plug-ins themselves are not loaded at this time, Maya is simply made aware of them so that they can be loaded if needed. The loadModule command provides the ability to list and load any new modules which have been added since Maya started up, thereby avoiding the need to restart Maya before being able to use them.
    """
    pass


def ExportDeformerWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def graphSelectContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    This command can be used to create a selection context for the hypergraph editor. 
    """
    pass


def Create3DContainerEmitterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeCharacterSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGraphClearGraph(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMapSewMove(limitPieceSize=None, lps=None, numberFaces=None, nf=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command can be used to Move and Sew together separate UV pieces along geometric edges. UV pieces that correspond to the same geometric edge, are merged together by moving the smaller piece to the larger one.
    """
    pass


def BrushPresetReplaceShading(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewClipPlane(autoClipPlane=None, acp=None, farClipPlane=None, fcp=None, nearClipPlane=None, ncp=None, surfacesOnly=None, so=None, *args, **kwargs):
    """
    The viewClipPlane command can be used to query or set a camera's clip planes. If a camera is not specified, the camera in the active view will be used. The near and far clip plane flags may be used in conjunction with the auto clip plane flag. 
    """
    pass


def ChamferVertexOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertKeysTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetKeyTranslate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSoftBody(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenUVEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iconTextButton(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, commandRepeatable=None, rpt=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, flat=None, fla=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, handleNodeDropCallback=None, hnd=None, height=None, h=None, highlightColor=None, hlc=None, highlightImage=None, hi=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelEditingCallback=None, lec=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, scaleIcon=None, sic=None, selectionImage=None, si=None, sourceType=None, stp=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def polyPlatonicSolid(axis=None, ax=None, createUVs=None, cuv=None, radius=None, r=None, sideLength=None, l=None, solidType=None, st=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The polyPlatonicSolid command creates a new polygonal platonic solid. 
    """
    pass


def insertJoint(*args, **kwargs):
    """
    This command will insert a new joint under the given or selected joint. If the given joint has child joints, they will be reparented under the new inserted joint. 
    """
    pass


def changeSubdivComponentDisplayLevel(level=None, l=None, relative=None, r=None, *args, **kwargs):
    """
    Explicitly forces the subdivision surface to display components at a particular level of refinement.
    """
    pass


def SculptMeshDeactivateBrushStrength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeEditor(activeTab=None, at=None, addNewNodes=None, ann=None, addNode=None, an=None, additiveGraphingMode=None, agm=None, allAttributes=None, ala=None, allNodes=None, aln=None, allowNewTabs=None, ant=None, allowTabTearoff=None, att=None, autoSizeNodes=None, asn=None, backToParentView=None, bpv=None, beginCreateNode=None, bcn=None, beginNewConnection=None, bnc=None, breakSelectedConnections=None, bsc=None, closeAllTabs=None, cat=None, closeTab=None, clt=None, consistentNameSize=None, cns=None, contentsChangedCommand=None, cc=None, control=None, ctl=None, createInfo=None, ci=None, createNodeCommand=None, cnc=None, createTab=None, ct=None, customAttributeListEdit=None, cal=None, cycleHUD=None, ch=None, defaultPinnedState=None, dps=None, defineTemplate=None, dt=None, deleteSelected=None, deleteSelected=None, docTag=None, dtg=None, dotFormat=None, dot=None, downstream=None, ds=None, duplicateTab=None, dpt=None, exists=None, ex=None, extendToShapes=None, ets=None, feedbackConnection=None, fbc=None, feedbackNode=None, fbn=None, feedbackPlug=None, fbp=None, feedbackTabIndex=None, fbi=None, feedbackType=None, fbt=None, filter=None, f=None, filterCreateNodeTypes=None, fcn=None, focusCommand=None, fc=None, forceMainConnection=None, fmc=None, frameAll=None, fa=None, frameModelSelection=None, fms=None, frameSelected=None, fs=None, getNodeList=None, gnl=None, graphSelectedConnections=None, gsc=None, graphSelection=None, gsl=None, gridSnap=None, gs=None, gridVisibility=None, gv=None, highlightConnection=None, hlc=None, hudMessage=None, hm=None, ignoreAssets=None, ia=None, inContainerView=None, icv=None, isContainerNode=None, icn=None, island=None, isl=None, keyPressCommand=None, kpc=None, keyReleaseCommand=None, krc=None, layout=None, lay=None, layoutCommand=None, lc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, nodeSwatchSize=None, nss=None, nodeTitleMode=None, ntm=None, nodeViewMode=None, nvm=None, openContainerView=None, ocv=None, panView=None, pv=None, panel=None, pnl=None, parent=None, p=None, pinSelectedNodes=None, psn=None, popupMenuScript=None, pms=None, primary=None, pr=None, redockTab=None, rdt=None, removeDownstream=None, rd=None, removeNode=None, rem=None, removeUnselected=None, run=None, removeUpstream=None, ru=None, renameNode=None, ren=None, renameTab=None, rt=None, restoreInfo=None, ri=None, restoreLastClosedTab=None, rlt=None, rootNode=None, rn=None, rootsFromSelection=None, rfs=None, scaleView=None, sv=None, selectAll=None, sa=None, selectConnectionNodes=None, scn=None, selectDownstream=None, sd=None, selectFeedbackConnection=None, sfc=None, selectNode=None, sln=None, selectUpstream=None, su=None, selectionConnection=None, slc=None, settingsChangedCallback=None, scc=None, shaderNetworks=None, sns=None, showAllNodeAttributes=None, saa=None, showNamespace=None, sn=None, showSGShapes=None, ssg=None, showShapes=None, ss=None, showTabs=None, tab=None, showTransforms=None, st=None, stateString=None, sts=None, syncedSelection=None, ssl=None, tabChangeCommand=None, tcc=None, toggleAttrFilter=None, taf=None, toggleSelectedPins=None, tsp=None, toggleSwatchSize=None, tss=None, toolTipCommand=None, ttc=None, traversalDepthLimit=None, tdl=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, upstream=None, ups=None, useAssets=None, ua=None, useTemplate=None, ut=None, vnnCompound=None, vc=None, vnnDgContainer=None, vd=None, vnnRuntime=None, vr=None, *args, **kwargs):
    """
    This command creates/edits/queries a nodeEditor editor. The optional argument is the name of the control.
    """
    pass


def CreateNURBSCylinderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LevelOfDetailGroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PostInfinityCycleOffset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshGrabUVToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PasteVertexSkinWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttrCtx(accopacity=None, aco=None, activeListChangedProc=None, alp=None, afterStrokeCmd=None, asc=None, alphaclamp=None, alc=None, alphaclamplower=None, acl=None, alphaclampupper=None, acu=None, attrSelected=None, asl=None, beforeStrokeCmd=None, bsc=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clamp=None, cl=None, clamplower=None, cll=None, clampupper=None, clu=None, clear=None, clr=None, colorRamp=None, cr=None, colorfeedback=None, cf=None, colorrangelower=None, crl=None, colorrangeupper=None, cru=None, dataTypeIndex=None, dti=None, disablelighting=None, dl=None, dragSlider=None, dsl=None, duringStrokeCmd=None, dsk=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, filterNodes=None, fon=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, interactiveUpdate=None, iu=None, lowerradius=None, lr=None, mappressure=None, mp=None, maxvalue=None, mxv=None, minvalue=None, miv=None, name=None, n=None, objattrArray=None, oaa=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintNodeArray=None, pna=None, paintattrselected=None, pas=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, rampMaxColor=None, rxc=None, rampMinColor=None, rmc=None, reflection=None, rn=None, reflectionaxis=None, ra=None, selectedattroper=None, sao=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toolOffProc=None, tfp=None, toolOnProc=None, top=None, useColorRamp=None, ucr=None, useMaxMinColor=None, umc=None, usepressure=None, up=None, value=None, val=None, whichTool=None, wst=None, *args, **kwargs):
    """
    This is a context command to set the flags on the artAttrContext, which is the base context for attribute painting operations. All commands require the name of the context as the last argument as this provides the name of the context to create, edit or query. 
    """
    pass


def snapshot(constructionHistory=None, ch=None, endTime=None, et=None, increment=None, i=None, motionTrail=None, mt=None, name=None, n=None, startTime=None, st=None, update=None, u=None, *args, **kwargs):
    """
    This command can be used to create either a series of surfaces evaluated at the times specified by the command flags, or a motion trail displaying the trajectory of the object's pivot point at the times specified.
    """
    pass


def Create3DContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachToPath(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorClipScaleEnd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setAttrMapping(absolute=None, a=None, attribute=None, at=None, axis=None, ax=None, clutch=None, c=None, device=None, d=None, offset=None, o=None, relative=None, r=None, scale=None, s=None, selection=None, sl=None, *args, **kwargs):
    """
    This command applies an offset and scale to a specified device attachment. This command is different than the setInputDeviceMapping command, which applies a mapping to a device axis. 
    """
    pass


def pairBlend(attribute=None, at=None, input1=None, i1=None, input2=None, i2=None, node=None, nd=None, *args, **kwargs):
    """
    The pairBlend node allows a weighted combinations of 2 inputs to be blended together. It is created automatically when keying or constraining an attribute which is already connected.
    """
    pass


def inViewMessage(alpha=None, a=None, assistMessage=None, amg=None, backColor=None, bkc=None, clear=None, cl=None, dragKill=None, dk=None, fade=None, f=None, fadeInTime=None, fit=None, fadeOutTime=None, fot=None, fadeStayTime=None, fst=None, font=None, ft=None, fontSize=None, fts=None, frameOffset=None, fof=None, hide=None, hd=None, message=None, msg=None, minimize=None, min=None, position=None, pos=None, restore=None, res=None, show=None, sh=None, statusMessage=None, smg=None, textAlpha=None, ta=None, textOffset=None, tof=None, uvEditor=None, uv=None, *args, **kwargs):
    """
    Used for displaying in-view messages. 
    """
    pass


def SelectAllJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeEditPSDFile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RebuildCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportProxyContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fileDialog(application=None, app=None, defaultFileName=None, dfn=None, directoryMask=None, dm=None, mode=None, m=None, title=None, t=None, *args, **kwargs):
    """
    The fileBrowserDialog and fileDialog commands have now been deprecated. Both commands are still callable, but it is recommended that the fileDialog2 command be used instead.To maintain some backwards compatibility, both fileBrowserDialog and fileDialog will convert the flags/values passed to them into the appropriate flags/values that the fileDialog2 command uses and will call that command internally.It is not guaranteed that this compatibility will be able to be maintained in future versions so any new scripts that are written should use fileDialog2. 
    """
    pass


def invertShape(*args, **kwargs):
    """
    
    """
    pass


def SelectToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveRotateScaleToolToggleSnapMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlaybackStop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_safeFrameTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleEdgeIDs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsPlateau(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectKeyframe(*args, **kwargs):
    """
    
    """
    pass


def HypershadeOpenCreateWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def combinationShape(addDriver=None, add=None, allDrivers=None, ald=None, blendShape=None, bs=None, combinationTargetIndex=None, cti=None, combinationTargetName=None, ctn=None, combineMethod=None, cm=None, driverTargetIndex=None, dti=None, driverTargetName=None, dtn=None, exist=None, ex=None, removeDriver=None, rmd=None, *args, **kwargs):
    """
    Command to create or edit drive relationship of blend shape targets
    """
    pass


def sbs_GetBakeFormat(*args, **kwargs):
    """
    
    """
    pass


def melOptions(duplicateVariableWarnings=None, dvw=None, *args, **kwargs):
    """
    Set and query options that affect the behavior of Maya's Embedded Language (MEL).
    """
    pass


def xgmExport(*args, **kwargs):
    """
    
    """
    pass


def polySphericalProjection(createNewMap=None, cm=None, imageCenter=None, ic=None, imageCenterX=None, icx=None, imageCenterY=None, icy=None, imageScale=None, imageScale=None, imageScaleU=None, isu=None, imageScaleV=None, isv=None, insertBeforeDeformers=None, ibd=None, projectionCenter=None, pc=None, projectionCenterX=None, pcx=None, projectionCenterY=None, pcy=None, projectionCenterZ=None, pcz=None, projectionScale=None, ps=None, projectionScaleU=None, psu=None, projectionScaleV=None, psv=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, rotationAngle=None, ra=None, seamCorrect=None, sc=None, smartFit=None, sf=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Projects a spherical map onto an object.
    """
    pass


def objExists(*args, **kwargs):
    """
    This command simply returns true or false depending on whether an object with the given name exists. 
    """
    pass


def currentTime(update=None, u=None, *args, **kwargs):
    """
    When given a time argument (with or without the -edit flag) this command sets the current global time.The model updates and displays at the new time, unless "-update off" is present on the command line. 
    """
    pass


def xgmSplineGeometryConvert(*args, **kwargs):
    """
    
    """
    pass


def dpBirailCtx(*args, **kwargs):
    """
    
    """
    pass


def connectJoint(connectMode=None, cm=None, parentMode=None, pm=None, *args, **kwargs):
    """
    This command will connect two skeletons based on the two selected joints. The first selected joint can be made a child of the parent of the second selected joint or a child of the second selected joint, depending on the flags used. 
    """
    pass


def shadingConnection(connectionState=None, cs=None, *args, **kwargs):
    """
    Sets the connection state of a connection between nodes that are used in shading. Specify the destination attribute of the connection. 
    """
    pass


def hikRigSync(*args, **kwargs):
    """
    
    """
    pass


def stitchSurface(bias=None, b=None, cvIthIndex=None, ci=None, cvJthIndex=None, cj=None, fixBoundary=None, fb=None, parameterU=None, u=None, parameterV=None, v=None, positionalContinuity=None, pc=None, stepCount=None, sc=None, tangentialContinuity=None, tc=None, togglePointNormals=None, tpn=None, togglePointPosition=None, tpp=None, toggleTolerance=None, tt=None, tolerance=None, tol=None, cascade=None, c=None, constructionHistory=None, ch=None, keepG0Continuity=None, kg0=None, keepG1Continuity=None, kg1=None, name=None, n=None, numberOfSamples=None, ns=None, object=None, o=None, replaceOriginal=None, rpo=None, weight0=None, wt0=None, weight1=None, wt1=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The stitchSurface command aligns two surfaces together to be G(0) and/or G(1) continuous by ajusting only the Control Vertices of the surfaces. The two surfaces can be stitched by specifying the two isoparm boundary edges that are to stitched together. The edge to which the two surfaces are stitched together is obtained by doing a weighted average of the two edges. The weights for the two edges is specified using the flags -wt0, -wt1 respectively. 
    """
    pass


def CreateShrinkWrapOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attributeQuery(affectsAppearance=None, aa=None, affectsWorldspace=None, aws=None, attributeType=None, at=None, cachedInternally=None, ci=None, categories=None, ct=None, channelBox=None, ch=None, connectable=None, c=None, enum=None, e=None, exists=None, ex=None, hidden=None, h=None, indeterminant=None, idt=None, indexMatters=None, im=None, internal=None, i=None, internalGet=None, ig=None, internalSet=None, internalSet=None, keyable=None, k=None, listChildren=None, lc=None, listDefault=None, ld=None, listEnum=None, le=None, listParent=None, lp=None, listSiblings=None, ls=None, longName=None, ln=None, maxExists=None, mxe=None, maximum=None, max=None, message=None, msg=None, minExists=None, mne=None, minimum=None, min=None, multi=None, m=None, niceName=None, nn=None, node=None, n=None, numberOfChildren=None, nc=None, range=None, r=None, rangeExists=None, re=None, readable=None, rd=None, renderSource=None, rs=None, shortName=None, sn=None, softMax=None, smx=None, softMaxExists=None, sxe=None, softMin=None, smn=None, softMinExists=None, sme=None, softRange=None, s=None, softRangeExists=None, se=None, storable=None, st=None, type=None, typ=None, typeExact=None, tex=None, usedAsColor=None, uac=None, usedAsFilename=None, uaf=None, usesMultiBuilder=None, umb=None, worldspace=None, ws=None, writable=None, w=None, *args, **kwargs):
    """
    attributeQuery returns information about the configuration of an attribute. It handles both boolean flags, returning true or false, as well as other return values. Specifying more than one boolean flag will return the logical "and" of all the specified boolean flags.You may not specify any two flags when both do not provide a boolean return type.(eg. "-internal -hidden" is okay but "-range -hidden" or "-range -softRange" is not.)
    """
    pass


def text(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, dropRectCallback=None, drc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hyperlink=None, hl=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, recomputeSize=None, rs=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, wordWrap=None, ww=None, *args, **kwargs):
    """
    Create a simple text label control.
    """
    pass


def nParticle(attribute=None, at=None, cache=None, ch=None, conserve=None, c=None, count=None, ct=None, deleteCache=None, dc=None, dynamicAttrList=None, dal=None, floatValue=None, fv=None, gridSpacing=None, grs=None, inherit=None, i=None, jitterBasePoint=None, jbp=None, jitterRadius=None, jr=None, lowerLeft=None, ll=None, name=None, n=None, numJitters=None, nj=None, order=None, order=None, particleId=None, id=None, perParticleDouble=None, ppd=None, perParticleVector=None, ppv=None, position=None, p=None, shapeName=None, sn=None, upperRight=None, ur=None, vectorValue=None, vv=None, *args, **kwargs):
    """
    The nParticle command creates a new nParticle object from a list of world space points. If an nParticle object is created, the command returns the names of the new particle shape and its associated particle object dependency node. If an object was queried, the results of the query are returned. Per particle attributes can be queried using the particleId or the order of the particle in the particle array. If an object was edited, nothing is returned. 
    """
    pass


def PaintEffectsToPolyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCreateContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptPolygonsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toolBar(allowedArea=None, aa=None, annotation=None, ann=None, area=None, a=None, backgroundColor=None, bgc=None, content=None, con=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a toolbar. Tool bars are movable panel that contains a set of controls. They are placed in the tool bar area around the central control in a main window. Tool bars can be moved inside their current area, moved into new areas and floated. 
    """
    pass


def nexConnectCtx(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorUnsoloAllTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveShelf(*args, **kwargs):
    """
    This command saves the specified shelf (first argument) to the specified file (second argument). 
    """
    pass


def CurveUtilitiesMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMirrorFace(direction=None, d=None, mergeMode=None, mm=None, mergeThreshold=None, mt=None, mergeThresholdType=None, mtt=None, mirrorAxis=None, ma=None, mirrorPosition=None, mps=None, pivot=None, p=None, pivotX=None, px=None, pivotY=None, py=None, pivotZ=None, pz=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Mirror all the faces of the selected object.
    """
    pass


def PolyExtrudeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SendToUnrealSetProject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeOutliner(addCommand=None, ac=None, addObject=None, a=None, annotation=None, ann=None, attrAlphaOrder=None, aao=None, backgroundColor=None, bgc=None, connectivity=None, c=None, currentSelection=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, lastMenuChoice=None, lmc=None, longNames=None, ln=None, manage=None, m=None, menuCommand=None, mc=None, menuMultiOption=None, mmo=None, multiSelect=None, ms=None, niceNames=None, nn=None, noBackground=None, nbg=None, noConnectivity=None, nc=None, nodesDisplayed=None, nd=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, pressHighlightsUnconnected=None, phu=None, preventOverride=None, po=None, remove=None, rm=None, removeAll=None, rma=None, replace=None, rpl=None, selectCommand=None, sc=None, showConnectedOnly=None, sco=None, showHidden=None, sh=None, showInputs=None, si=None, showNonConnectable=None, snc=None, showNonKeyable=None, snk=None, showOutputs=None, so=None, showPublished=None, sp=None, showReadOnly=None, sro=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    The nodeOutliner command creates, edits and queries an outline control that shows dependency nodes and their attributes. Compound attributes are further expandable to show their children. Additional configure flags allow multi selection, customizable commands to issue upon selection, and showing connections (and connectability) to a single input attribute. There are also the abilities to add/remove/replace nodes through the command line interface, and drag/add. 
    """
    pass


def createPolySoccerBallCtx(*args, **kwargs):
    """
    
    """
    pass


def extendCurve(distance=None, d=None, extendMethod=None, em=None, extensionType=None, et=None, inputPoint=None, ip=None, join=None, jn=None, pointX=None, px=None, pointY=None, py=None, pointZ=None, pz=None, removeMultipleKnots=None, rmk=None, start=None, s=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, range=None, rn=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command extends a curve or creates a new curve as an extension 
    """
    pass


def ToggleViewCube(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidDeleteCacheFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AnimationTurntable(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySplitRing(direction=None, dr=None, divisions=None, div=None, rootEdge=None, re=None, smoothingAngle=None, sma=None, splitType=None, stp=None, weight=None, wt=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Splits a series of ring edges of connected quads and inserts connecting edges between them. 
    """
    pass


def SculptMeshActivateBrushStrength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def inheritTransform(preserve=None, p=None, toggle=None, tgl=None, *args, **kwargs):
    """
    This command toggles the inherit state of an object. If this flag is off the object will not inherit transformations from its parent. In other words transformations applied to the parent node will not affect the object and it will act as though it is under the world. 
    """
    pass


def manipMoveContext(activeHandle=None, ah=None, activeHandleNormal=None, ahn=None, alignAlong=None, aa=None, constrainAlongNormal=None, xn=None, currentActiveHandle=None, cah=None, editPivotMode=None, epm=None, editPivotPosition=None, epp=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, interactiveUpdate=None, iu=None, lastMode=None, lm=None, manipVisible=None, vis=None, mode=None, m=None, orientAxes=None, oa=None, orientJoint=None, oj=None, orientJointEnabled=None, oje=None, orientObject=None, oo=None, orientTowards=None, ot=None, pinPivot=None, pin=None, pivotOriHandle=None, poh=None, position=None, p=None, postCommand=None, psc=None, postDragCommand=None, pod=None, preCommand=None, prc=None, preDragCommand=None, prd=None, preserveChildPosition=None, pcp=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAbout=None, rab=None, reflectionAxis=None, rfa=None, reflectionTolerance=None, rft=None, secondaryAxisOrient=None, sao=None, snap=None, s=None, snapComponentsRelative=None, scr=None, snapLiveFaceCenter=None, slf=None, snapLivePoint=None, slp=None, snapPivotOri=None, spo=None, snapPivotPos=None, spp=None, snapRelative=None, sr=None, snapValue=None, sv=None, translate=None, tr=None, tweakMode=None, twk=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a move manip context. Note that the flags -s, -sv, -sr, -scr, -slp, -slf control the global behaviour of all move manip context.Changing one context independently is not allowed.Changing a context's behaviour using the above flags, will change all existing move manip context. 
    """
    pass


def constructionHistory(toggle=None, tgl=None, *args, **kwargs):
    """
    This command turns construction history on or off.
    """
    pass


def ConformPolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleToolWithSnapMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAppend(append=None, a=None, edge=None, ed=None, hole=None, hl=None, point=None, p=None, subdivision=None, s=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    Appends a new face to the selected polygonal object. The first argument must be a border edge. The new face will be automatically closed. 
    """
    pass


def XgmSetSelectBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateFBIKOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyVertexSkinWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostEmissionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def disconnectAttr(nextAvailable=None, na=None, *args, **kwargs):
    """
    Disconnects two connected attributes. First argument is the source attribute, second is the destination.
    """
    pass


def manipMoveLimitsCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Create a context for the translate limits manipulator.
    """
    pass


def ArchiveSceneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeviceEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFaceNormalDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleShowMuteInformation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorOpenContentBrowser(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toggleAxis(origin=None, o=None, view=None, v=None, *args, **kwargs):
    """
    Toggles the state of the display axis. 
    """
    pass


def HideFur(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetNoiseBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadePinByDefault(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteHair(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_modeEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateAudioClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorCreateForEachCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetDrivenKeyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePartition(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def performanceOptions(clusterResolution=None, cr=None, disableStitch=None, ds=None, disableTrimDisplay=None, dt=None, latticeResolution=None, lr=None, passThroughBindSkinAndFlexors=None, pbf=None, passThroughBlendShape=None, pbs=None, passThroughCluster=None, pc=None, passThroughDeltaMush=None, pdm=None, passThroughFlexors=None, pf=None, passThroughLattice=None, pl=None, passThroughPaintEffects=None, pp=None, passThroughSculpt=None, ps=None, passThroughWire=None, pw=None, skipHierarchyTraversal=None, sht=None, useClusterResolution=None, ucr=None, useLatticeResolution=None, ulr=None, *args, **kwargs):
    """
    Sets the global performance options for the application.The options allow the disabling of features such as stitch surfaces or deformers to cut down on computation time in the scene. 
    """
    pass


def HIKSetSelectionKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IntersectSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFaceNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsToNurbs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DoUnghostOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsStepped(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def manipScaleContext(activeHandle=None, ah=None, alignAlong=None, aa=None, constrainAlongNormal=None, xn=None, currentActiveHandle=None, cah=None, editPivotMode=None, epm=None, editPivotPosition=None, epp=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, lastMode=None, lm=None, manipVisible=None, vis=None, mode=None, m=None, orientAxes=None, oa=None, orientObject=None, oo=None, orientTowards=None, ot=None, pinPivot=None, pin=None, pivotOriHandle=None, poh=None, position=None, p=None, postCommand=None, psc=None, postDragCommand=None, pod=None, preCommand=None, prc=None, preDragCommand=None, prd=None, preserveChildPosition=None, pcp=None, preserveUV=None, puv=None, preventNegativeScale=None, pns=None, reflection=None, rfl=None, reflectionAbout=None, rab=None, reflectionAxis=None, rfa=None, reflectionTolerance=None, rft=None, scale=None, sc=None, snapPivotOri=None, spo=None, snapPivotPos=None, spp=None, tweakMode=None, twk=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a scale manip context.
    """
    pass


def DeleteConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResampleCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_nexCmd(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorToggleMuteSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nBase(clearCachedTextureMap=None, cct=None, clearStart=None, cs=None, stuffStart=None, ss=None, textureToVertex=None, ttv=None, *args, **kwargs):
    """
    Edits one or more nBase objects. Note that nBase objects include nCloth, nRigid and nParticle objects, but the options on this command do not currently apply to nParticle objects.
    """
    pass


def PreInfinityLinear(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SphericalProjectionOptions(*args, **kwargs):
    """
    unknown
    """
    pass


def ConvertSelectionToEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toggleWindowVisibility(*args, **kwargs):
    """
    Toggle the visibility of a window. If no window is specified then the current window (most recently created) is used. See also the 
    """
    pass


def filterExpand(expand=None, ex=None, fullPath=None, fp=None, selectionMask=None, sm=None, symActive=None, sma=None, symNegative=None, smn=None, symPositive=None, smp=None, symSeam=None, sms=None, *args, **kwargs):
    """
    Based on selected components (or components specified on the command line), the command filters and/or expands the list given the options. Returns a string array containing all matching selection items. Selection masks are as follows: 
    """
    pass


def TagAsControllerParent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TemplateBrushSettings(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReorderVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ctxAbort(*args, **kwargs):
    """
    This command tells the current context to reset itself, losing what has been done so far.If a escape context has been set it then makes that context current. 
    """
    pass


def AddDivisionsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorManagementCatalog(addTransform=None, adt=None, editUserTransformPath=None, eut=None, listSupportedExtensions=None, lse=None, listTransformConnections=None, ltc=None, path=None, pth=None, queryUserTransformPath=None, qut=None, removeTransform=None, rmt=None, transformConnection=None, tcn=None, type=None, typ=None, *args, **kwargs):
    """
    This non-undoable action performs additions and removals of custom color transforms from the Autodesk native color transform catalog.Once a custom color transform has been added to the catalog, it can be used in the same way as the builtin Autodesk native color transforms.
    """
    pass


def FBXExportConvertUnitString(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorExtendToShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def U3DBrushSizeOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCut(cutPlaneCenter=None, pc=None, cutPlaneCenterX=None, pcx=None, cutPlaneCenterY=None, pcy=None, cutPlaneCenterZ=None, pcz=None, cutPlaneHeight=None, ph=None, cutPlaneRotate=None, ro=None, cutPlaneRotateX=None, rx=None, cutPlaneRotateY=None, ry=None, cutPlaneRotateZ=None, rz=None, cutPlaneSize=None, ps=None, cutPlaneWidth=None, pw=None, cuttingDirection=None, cd=None, deleteFaces=None, df=None, extractFaces=None, ef=None, extractOffset=None, eo=None, extractOffsetX=None, eox=None, extractOffsetY=None, eoy=None, extractOffsetZ=None, eoz=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command splits a mesh, or a set of poly faces, along a plane. The position and orientation of the plane can be adjusted using the appropriate flags listed above.In addition, the cut operation can also delete the faces lying on one side of the cutting plane, or extract those faces by an offset amount. 
    """
    pass


def vnnPaste(*args, **kwargs):
    """
    Paste the copied VNN nodes to target VNN compound. The first parameter is the full name of the DG node that contains the VNN graph. The second parameter is the full path of the target VNN compound. A "vnnCopy" must be called before this command is called. 
    """
    pass


def retimeKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, moveByFrame=None, mbf=None, name=None, n=None, snapOnFrame=None, sof=None, *args, **kwargs):
    """
    This command creates a context which may be used to scale keyframes within the graph editor using the retime tool. 
    """
    pass


def CreateNURBSSphereOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listAttr(array=None, a=None, caching=None, ca=None, category=None, ct=None, changedSinceFileOpen=None, cfo=None, channelBox=None, cb=None, connectable=None, c=None, extension=None, ex=None, fromPlugin=None, fp=None, hasData=None, hd=None, hasNullData=None, hnd=None, inUse=None, iu=None, keyable=None, k=None, leaf=None, lf=None, locked=None, l=None, multi=None, m=None, output=None, o=None, ramp=None, ra=None, read=None, r=None, readOnly=None, ro=None, scalar=None, s=None, scalarAndArray=None, sa=None, settable=None, se=None, shortNames=None, sn=None, string=None, st=None, unlocked=None, u=None, usedAsFilename=None, uf=None, userDefined=None, ud=None, visible=None, v=None, write=None, w=None, *args, **kwargs):
    """
    This command lists the attributes of a node.If no flags are specified all attributes are listed. 
    """
    pass


def OutlinerToggleNamespace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateFluidCacheOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshGrabTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Gravity(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleDisplacement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowModelingUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshFoamyTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetFocusToNumericInputLine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickExecute(*args, **kwargs):
    """
    
    """
    pass


def bifSaveFrame(*args, **kwargs):
    """
    
    """
    pass


def HypershadeOpenRenderViewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def curveRGBColor(hueSaturationValue=None, hsv=None, list=None, l=None, listNames=None, ln=None, remove=None, r=None, resetToFactory=None, rf=None, resetToSaved=None, rs=None, *args, **kwargs):
    """
    This command creates, changes or removes custom curve colors, which are used to draw the curves in the Graph Editor. The custom curve names may contain the wildcards "?", which marches a single character, and "*", which matches any number of characters. These colors are part of the UI and not part of the saved data for a model.This command is not undoable. 
    """
    pass


def symbolButton(annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a symbol button.A symbol button behaves like a regular button, the only difference is a symbol button displays an image rather that a text label.A command may be attached to the button which will be executed when the button is pressed. 
    """
    pass


def dgdirty(allPlugs=None, a=None, clean=None, c=None, implicit=None, i=None, list=None, l=None, propagation=None, p=None, showTiming=None, st=None, verbose=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def ConvertSelectionToUVShellBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickDisconnect(*args, **kwargs):
    """
    
    """
    pass


def iGroom(*args, **kwargs):
    """
    
    """
    pass


def BestPlaneTexturingTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmWidthBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def SetFluidAttrFromCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdMatchTopology(frontOfChain=None, foc=None, *args, **kwargs):
    """
    Command matches topology across multiple subdiv surfaces - at all levels.
    """
    pass


def XgExportArchive(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def uniform(attenuation=None, att=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, *args, **kwargs):
    """
    A uniform field pushes objects in a fixed direction.The field strength, but not the field direction, depends on the distance from the object to the field location. 
    """
    pass


def ViewAlongAxisNegativeZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ViewAlongAxisNegativeX(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectConnected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateAnimTracksAtEnd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenBinsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_SetBakeFormat(*args, **kwargs):
    """
    
    """
    pass


def SelectPolygonToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def blend2(autoAnchor=None, aa=None, autoNormal=None, an=None, flipLeftNormal=None, fln=None, flipRightNormal=None, frn=None, leftAnchor=None, la=None, leftEnd=None, le=None, leftStart=None, ls=None, multipleKnots=None, mk=None, positionTolerance=None, pt=None, reverseLeft=None, rvl=None, reverseRight=None, rvr=None, rightAnchor=None, ra=None, rightEnd=None, re=None, rightStart=None, rs=None, tangentTolerance=None, tt=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a surface by blending between given curves. This is an enhancement (more user control) compared to blend which is now obsolete. 
    """
    pass


def HypershadeAddOnNodeCreate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pose(allPoses=None, ap=None, apply=None, a=None, name=None, n=None, *args, **kwargs):
    """
    This command is used to create character poses.
    """
    pass


def AddToCharacterSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TwoPointArcTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WedgePolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setStartupMessage(*args, **kwargs):
    """
    Update the startup window message.Also know as the 'Splash Screen', this is the window that appears while the application is starting up. 
    """
    pass


def PrelightPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDuplicateShadingNetwork(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowLattices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVSphericalProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKPinTranslate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddFaceDivisionsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeOutliner(animCurve=None, ac=None, annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, display=None, dsp=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries a keyframe outliner control.
    """
    pass


def shelfLayout(alignment=None, aln=None, annotation=None, ann=None, backgroundColor=None, bgc=None, cellHeight=None, ch=None, cellWidth=None, cw=None, cellWidthHeight=None, cwh=None, childArray=None, ca=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, ltVersion=None, lt=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, position=None, pos=None, preventOverride=None, po=None, spacing=None, spa=None, style=None, st=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a new empty shelf layout. The shelf layout can accept drops of commands scripts. Use 
    """
    pass


def CreateWrap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorStackedView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmFreezeBrushContext(*args, **kwargs):
    """
    
    """
    pass


def HypershadeTransferAttributeValuesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BrushPresetBlendOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def targetWeldCtx(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, mergeToCenter=None, mtc=None, *args, **kwargs):
    """
    Create a new context to weld vertices together on a poly object.
    """
    pass


def PolygonBooleanIntersection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyHole(assignHole=None, ah=None, createHistory=None, ch=None, *args, **kwargs):
    """
    Command to set and clear holes on given faces.
    """
    pass


def SpreadSheetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXRead(*args, **kwargs):
    """
    
    """
    pass


def commandPort(bufferSize=None, bs=None, close=None, cl=None, echoOutput=None, eo=None, name=None, n=None, noreturn=None, nr=None, pickleOutput=None, po=None, prefix=None, pre=None, returnNumCommands=None, rnc=None, securityWarning=None, sw=None, sourceType=None, stp=None, *args, **kwargs):
    """
    Opens or closes the Maya command port. The command port comprises a socket to which a client program may connect. An example command port client "mcp" is included in the Motion Capture developers kit. 
    """
    pass


def PublishConnections(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_rotatePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RandomizeShellsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_pointSnapRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintBlendShapeWeightsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def muMessageDelete(*args, **kwargs):
    """
    
    """
    pass


def PartitionEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorClipHoldToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryReplaceCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCloseAllTabs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def panelConfiguration(addPanel=None, ap=None, configString=None, cfs=None, createStrings=None, cs=None, defaultImage=None, di=None, defineTemplate=None, dt=None, editStrings=None, es=None, exists=None, ex=None, image=None, i=None, isFixedState=None, isFixedState=None, label=None, l=None, labelStrings=None, ls=None, numberOfPanels=None, np=None, removeAllPanels=None, rap=None, removeLastPanel=None, rlp=None, replaceCreateString=None, rcs=None, replaceEditString=None, res=None, replaceFixedState=None, rfs=None, replaceLabel=None, rl=None, replacePanel=None, rp=None, replaceTypeString=None, rts=None, sceneConfig=None, sc=None, typeStrings=None, ts=None, useTemplate=None, ut=None, userCreated=None, uc=None, *args, **kwargs):
    """
    This command creates a panel configuration object. Typically you would not call this method command directly. Instead use the Panel Editor. 
    """
    pass


def ArcLengthTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cycleCheck(all=None, all=None, children=None, c=None, dag=None, dag=None, evaluation=None, e=None, firstCycleOnly=None, fco=None, firstPlugPerNode=None, fpn=None, lastPlugPerNode=None, lpn=None, list=None, l=None, listSeparator=None, ls=None, parents=None, p=None, secondary=None, s=None, timeLimit=None, tl=None, *args, **kwargs):
    """
    This command searches for plug cycles in the dependency graph. If a plug or node is selected then it searches for cycles that that plug or node is involved with. Plugs or nodes can also be passed as arguments. If the -all flag is used then the entire graph is searched. 
    """
    pass


def xgmDirectionBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def SendAsNewScenePrintStudio(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyOpacityPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Import(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynExpression(creation=None, c=None, runtimeAfterDynamics=None, rad=None, runtimeBeforeDynamics=None, rbd=None, string=None, s=None, *args, **kwargs):
    """
    This command describes an expression that belongs to the specified particle shape.The expression is a block of code of unlimited length with a C-like syntax that can perform conversions, mathematical operations, and logical decision making on any numeric attribute(s) or per-particle attribute(s) in the scene.One expression can read and alter any number of these attributes.Every particle shape in your scene has three expressions, one for the runtimeBeforeDynamics, one for the runtimeAfterDynamics and one for creation time.The create expression gets executed for every particle in the object whose age is 0.0.The runtime expression gets executed for each particle with an age greater then 0.0.Unlike expressions created with the 
    """
    pass


def nClothCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderSetupFind(*args, **kwargs):
    """
    
    """
    pass


def AssignOfflineFileFromRefEd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreviousGreasePencilFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hyperShade(assign=None, a=None, clearWorkArea=None, cwa=None, collapse=None, clp=None, createNode=None, rcn=None, dependGraphArea=None, dg=None, downStream=None, ds=None, duplicate=None, dup=None, fixRenderSize=None, fix=None, incremental=None, inc=None, listDownstreamNodes=None, ldn=None, listDownstreamShaderNodes=None, lds=None, listUpstreamNodes=None, lun=None, name=None, n=None, networks=None, net=None, noSGShapes=None, nsg=None, noShapes=None, ns=None, noTransforms=None, nt=None, objects=None, o=None, renderCreateAndDrop=None, rcd=None, reset=None, rst=None, resetGraph=None, rsg=None, resetSwatch=None, rss=None, setAllowsRegraphing=None, sar=None, setWorkArea=None, swa=None, shaderNetwork=None, sn=None, shaderNetworks=None, sns=None, shaderNetworksSelectMaterialNodes=None, smn=None, snapShot=None, snp=None, uncollapse=None, ucl=None, upStream=None, ups=None, userDefinedLayout=None, udl=None, workAreaAddCmd=None, waa=None, workAreaDeleteCmd=None, wad=None, workAreaSelectCmd=None, was=None, *args, **kwargs):
    """
    Commands for shader editing in the hypergraph
    """
    pass


def changeSubdivRegion(action=None, a=None, level=None, l=None, *args, **kwargs):
    """
    Changes a subdivision surface region based on the command parameters. The command operates on the selected subdivision surfaces.
    """
    pass


def SculptMeshInvertFreeze(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def outlinerEditor(allowMultiSelection=None, ams=None, alwaysToggleSelect=None, ats=None, animLayerFilterOptions=None, alf=None, attrAlphaOrder=None, aao=None, attrFilter=None, af=None, autoExpand=None, xpd=None, autoExpandLayers=None, ael=None, autoSelectNewObjects=None, autoSelectNewObjects=None, containersIgnoreFilters=None, cif=None, control=None, ctl=None, defineTemplate=None, dt=None, directSelect=None, ds=None, displayMode=None, dm=None, doNotSelectNewObjects=None, dns=None, docTag=None, dtg=None, dropIsParent=None, dip=None, editAttrName=None, ean=None, exists=None, ex=None, expandAllItems=None, eai=None, expandAllSelectedItems=None, eas=None, expandAttribute=None, att=None, expandConnections=None, xc=None, expandObjects=None, eo=None, feedbackItemName=None, fbn=None, feedbackRowNumber=None, fbr=None, filter=None, f=None, forceMainConnection=None, fmc=None, getCurrentSetOfItem=None, gcs=None, highlightActive=None, ha=None, highlightConnection=None, hlc=None, highlightSecondary=None, hs=None, ignoreDagHierarchy=None, hir=None, ignoreHiddenAttribute=None, iha=None, ignoreOutlinerColor=None, ioc=None, isChildSelected=None, ics=None, isSet=None, isSet=None, isSetMember=None, ism=None, lockMainConnection=None, lck=None, longNames=None, ln=None, mainListConnection=None, mlc=None, mapMotionTrails=None, mmt=None, masterOutliner=None, mst=None, niceNames=None, nn=None, object=None, obj=None, organizeByLayer=None, obl=None, panel=None, pnl=None, parent=None, p=None, parentObject=None, po=None, pinPlug=None, pin=None, refresh=None, rfs=None, removeFromCurrentSet=None, rcs=None, renameItem=None, rni=None, renameSelectedItem=None, rsi=None, renderFilterActive=None, rfa=None, renderFilterIndex=None, rfi=None, renderFilterVisible=None, rfv=None, selectCommand=None, sec=None, selectionConnection=None, slc=None, selectionOrder=None, sod=None, setFilter=None, sf=None, setsIgnoreFilters=None, sif=None, showAnimCurvesOnly=None, aco=None, showAnimLayerWeight=None, saw=None, showAssets=None, a=None, showAssignedMaterials=None, sam=None, showAttrValues=None, av=None, showAttributes=None, atr=None, showCompounds=None, cmp=None, showConnected=None, con=None, showContainedOnly=None, sco=None, showContainerContents=None, scc=None, showDagOnly=None, dag=None, showLeafs=None, laf=None, showNamespace=None, sn=None, showNumericAttrsOnly=None, num=None, showPinIcons=None, spi=None, showPublishedAsConnected=None, spc=None, showReferenceMembers=None, rm=None, showReferenceNodes=None, rn=None, showSelected=None, sc=None, showSetMembers=None, ssm=None, showShapes=None, shp=None, showTextureNodesOnly=None, tno=None, showTimeEditor=None, ste=None, showUVAttrsOnly=None, uv=None, showUnitlessCurves=None, su=None, showUpstreamCurves=None, suc=None, sortOrder=None, so=None, stateString=None, sts=None, transmitFilters=None, tf=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, unpinPlug=None, unp=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates an outliner editor which can be used to display a list of objects.
    """
    pass


def ConvertSelectionToUVShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllStaticChannels(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetBreakdownKeyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateFBIK(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCameraOnly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCylindricalProjection(createNewMap=None, cm=None, imageCenter=None, ic=None, imageCenterX=None, icx=None, imageCenterY=None, icy=None, imageScale=None, imageScale=None, imageScaleU=None, isu=None, imageScaleV=None, isv=None, insertBeforeDeformers=None, ibd=None, projectionCenter=None, pc=None, projectionCenterX=None, pcx=None, projectionCenterY=None, pcy=None, projectionCenterZ=None, pcz=None, projectionScale=None, ps=None, projectionScaleU=None, psu=None, projectionScaleV=None, psv=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, rotationAngle=None, ra=None, seamCorrect=None, sc=None, smartFit=None, sf=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Projects a cylindrical map onto an object.
    """
    pass


def MoveToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def memory(asFloat=None, af=None, freeMemory=None, fr=None, gigaByte=None, gb=None, heapMemory=None, he=None, kiloByte=None, kb=None, megaByte=None, mb=None, pageFaults=None, pf=None, pageReclaims=None, pr=None, physicalMemory=None, phy=None, summary=None, sum=None, swapFree=None, swf=None, swapLogical=None, swl=None, swapMax=None, swm=None, swapPhysical=None, swp=None, swapVirtual=None, swv=None, swaps=None, sw=None, *args, **kwargs):
    """
    Used to query essential statistics on memory availability and usage. 
    """
    pass


def polyNormalizeUV(createNewMap=None, cm=None, insertBeforeDeformers=None, ibd=None, normalizeType=None, nt=None, preserveAspectRatio=None, pa=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Normalizes the UVs of input polyFaces. The existing UVs of the faces are normalized between 0 and 1. 
    """
    pass


def SelectAllAssets(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyBlindData(associationType=None, at=None, binaryData=None, bnd=None, booleanData=None, bd=None, delete=None, delete=None, doubleData=None, dbd=None, int64Data=None, lid=None, intData=None, ind=None, longDataName=None, ldn=None, rescan=None, res=None, reset=None, rst=None, shape=None, sh=None, shortDataName=None, sdn=None, stringData=None, sd=None, typeId=None, id=None, *args, **kwargs):
    """
    Command creates blindData types (basically creates an instance of TdnPolyBlindData). When used with the query flag, it returns the data types that define this blindData type. This command is to be used create a blindData node *and* to edit the same.. The associationType flag *has* to be specified at all times.. This is because if an instance of the specified BD typeId exists in the history chain but if the associationType is not the same, then a new polyBlindData node is created.. For object level blind data, only the object itself must be specified. A new compound attribute BlindDataNNNN will be created on the object. Blind data attribute names must be unique across types for object level blind data. So, the command will require the following to be specified:- typeId,- associationType- longDataName or shortDataName of data being edited.- The actual data being specified.- The components that this data is to be attached to.
    """
    pass


def colorSliderButtonGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, buttonCommand=None, bc=None, buttonLabel=None, bl=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, image=None, i=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rgbValue=None, rgb=None, rowAttach=None, rat=None, symbolButtonCommand=None, sbc=None, symbolButtonDisplay=None, sbd=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def PointConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GridOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddInBetweenTargetShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_bridgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fontDialog(FontList=None, fl=None, scalable=None, sc=None, *args, **kwargs):
    """
    Displays a dialog of available fonts for the user to select from. The name of the selected font is returned, or an empty string if no font was selected. 
    """
    pass


def PreInfinityConstant(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddDivisions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def readPDC(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorCopy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyLayoutUV(flipReversed=None, fr=None, layout=None, l=None, layoutMethod=None, lm=None, percentageSpace=None, ps=None, rotateForBestFit=None, rbf=None, scale=None, sc=None, separate=None, se=None, uvSetName=None, uvs=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Move UVs in the texture plane to avoid overlaps.
    """
    pass


def FBXUICallBack(*args, **kwargs):
    """
    
    """
    pass


def OffsetSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldFlushCache(*args, **kwargs):
    """
    
    """
    pass


def SelectPreviousObjectsMotionBuilder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeFieldGrp(*args, **kwargs):
    """
    
    """
    pass


def CreatePoseInterpolatorEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChangeUVSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def disableIncorrectNameWarning(*args, **kwargs):
    """
    Disable the warning dialog which complains about incorrect node names when opening Maya files. 
    """
    pass


def CreateClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OrientJointOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachBrushToCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def headsUpDisplay(allDescendants=None, ad=None, allowOverlap=None, ao=None, attachToRefresh=None, atr=None, attributeChange=None, ac=None, block=None, b=None, blockAlignment=None, ba=None, blockSize=None, bs=None, command=None, c=None, conditionChange=None, cc=None, conditionFalse=None, cf=None, conditionTrue=None, ct=None, connectionChange=None, con=None, dataAlignment=None, da=None, dataFontSize=None, dfs=None, dataWidth=None, dw=None, decimalPrecision=None, dp=None, disregardIndex=None, di=None, event=None, ev=None, exists=None, ex=None, getOption=None, op=None, gridColor=None, gco=None, label=None, l=None, labelFontSize=None, lfs=None, labelWidth=None, lw=None, lastOccupiedBlock=None, lob=None, layoutVisibility=None, lv=None, listConditions=None, lc=None, listEvents=None, le=None, listHeadsUpDisplays=None, lh=None, listNodeChanges=None, lnc=None, listPresets=None, lp=None, name=None, n=None, nextFreeBlock=None, nfb=None, nodeChanges=None, nc=None, padding=None, p=None, preset=None, pre=None, refresh=None, r=None, remove=None, rem=None, removeID=None, rid=None, removePosition=None, rp=None, resetNodeChanges=None, rnc=None, scriptResult=None, sr=None, section=None, s=None, setOption=None, so=None, showGrid=None, sg=None, visible=None, vis=None, *args, **kwargs):
    """
    This command creates a Heads-up Display (HUD) object which is placed in a 2D inactive overlay plane on the 3D viewport. It is to be used to provide hands-on information designated by a user script. The text string displayed on the viewport is formatted using the various flags of this command. 
    """
    pass


def OneClickFetchRemoteCharacter(*args, **kwargs):
    """
    
    """
    pass


def PolyBrushMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenameAttribute(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def psdConvSolidTxOptions(*args, **kwargs):
    """
    
    """
    pass


def sphere(axis=None, ax=None, degree=None, d=None, endSweep=None, esw=None, heightRatio=None, hr=None, pivot=None, p=None, radius=None, r=None, sections=None, s=None, spans=None, nsp=None, startSweep=None, ssw=None, tolerance=None, tol=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The sphere command creates a new sphere. The number of spans in the in each direction of the sphere is determined by the useTolerance attribute. If -ut is true then the -tolerance attribute will be used. If -ut is false then the -sections attribute will be used. 
    """
    pass


def FourViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddTimeWarp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def aliasAttr(remove=None, rm=None, *args, **kwargs):
    """
    Allows aliases (alternate names) to be defined for any attribute of a specified node. When an attribute is aliased, the alias will be used by the system to display information about the attribute. The user may, however, freely use either the alias or the original name of the attribute. Only a single alias can be specified for an attribute so setting an alias on an already-aliased attribute destroys the old alias.
    """
    pass


def dR_bridgeRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrFieldSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, attribute=None, at=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraButton=None, eb=None, extraButtonCommand=None, ebc=None, extraButtonIcon=None, ebi=None, fieldMaxValue=None, fmx=None, fieldMinValue=None, fmn=None, fieldStep=None, fs=None, forceAddMapButton=None, fmb=None, fullPathName=None, fpn=None, height=None, h=None, hideMapButton=None, hmb=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, sliderMaxValue=None, smx=None, sliderMinValue=None, smn=None, sliderStep=None, ss=None, step=None, s=None, useTemplate=None, ut=None, vertical=None, vr=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def outlinerPanel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, outlinerEditor=None, oe=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates, edit and queries outliner panels which contain only an outliner editor. 
    """
    pass


def NodeEditorAdditiveGraphingMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def modelPanel(barLayout=None, bl=None, camera=None, cam=None, control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, modelEditor=None, me=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a panel consisting of a model editor. See the 
    """
    pass


def HypershadeSetTraversalDepthUnlim(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PokePolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ctxEditMode(buttonDown=None, btd=None, buttonUp=None, btu=None, *args, **kwargs):
    """
    This command tells the current context to switch edit modes.
    """
    pass


def MirrorPolygonGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportOfflineFileFromRefEdOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BrushAnimationMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PinSelectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectLightsShadowingObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetKeyAnimated(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPushOver(*args, **kwargs):
    """
    
    """
    pass


def dR_graphEditorTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleViewAxis(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleEditPoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RaiseMainWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def stroke(name=None, n=None, pressure=None, pr=None, seed=None, s=None, *args, **kwargs):
    """
    The stroke command creates a new Paint Effects stroke node.
    """
    pass


def CreateEmptyUVSetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmCreateInteractiveGroomSplinesOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDisplayAsSmallSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReplaceObjectsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UndoCanvas(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ungroup(absolute=None, a=None, parent=None, p=None, relative=None, r=None, world=None, w=None, *args, **kwargs):
    """
    This command ungroups the specified objects. 
    """
    pass


def rebuildCurve(degree=None, d=None, endKnots=None, end=None, fitRebuild=None, fr=None, keepControlPoints=None, kcp=None, keepEndPoints=None, kep=None, keepRange=None, kr=None, keepTangents=None, kt=None, rebuildType=None, rt=None, smartSurfaceCurveRebuild=None, scr=None, spans=None, s=None, tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, range=None, rn=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command rebuilds a curve by modifying its parameterization. In some cases the shape may also change. The rebuildType (-rt) determines how the curve is to be rebuilt. 
    """
    pass


def CreateVolumeCone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def instanceable(allow=None, a=None, recursive=None, r=None, shape=None, s=None, *args, **kwargs):
    """
    
    """
    pass


def xgmFileRender(*args, **kwargs):
    """
    
    """
    pass


def extendSurface(distance=None, d=None, extendDirection=None, ed=None, extendMethod=None, em=None, extendSide=None, es=None, extensionType=None, et=None, join=None, jn=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command extends a surface or creates a new surface as an extension. 
    """
    pass


def rangeControl(annotation=None, ann=None, backgroundColor=None, bgc=None, changedCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, maxRange=None, max=None, minRange=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    This command creates a control used for displaying and modifying the current playback range. 
    """
    pass


def renderSetupSelect(*args, **kwargs):
    """
    
    """
    pass


def HypershadeSelectDownStream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_modeObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyCreaseTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderManip(camera=None, cam=None, light=None, lt=None, spotLight=None, slt=None, state=None, st=None, *args, **kwargs):
    """
    This command creates manipulators for cameras or lights.
    """
    pass


def ToggleZoomInMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Birail1Options(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleWeightDefault(*args, **kwargs):
    """
    
    """
    pass


def LoopBrushAnimation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFbikDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSortReverseOrder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def containerBind(allNames=None, all=None, bindingSet=None, bs=None, bindingSetConditions=None, bsc=None, bindingSetList=None, bsl=None, force=None, f=None, preview=None, p=None, *args, **kwargs):
    """
    This is an accessory command to the container command which is used for some automated binding operations on the container. A container's published interface can be bound using a bindingSet on the associated container template.
    """
    pass


def TimeEditorExplodeGroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setDrivenKeyframe(attribute=None, at=None, controlPoints=None, cp=None, currentDriver=None, cd=None, driven=None, dn=None, driver=None, dr=None, driverValue=None, dv=None, hierarchy=None, hi=None, inTangentType=None, itt=None, insert=None, i=None, insertBlend=None, ib=None, outTangentType=None, ott=None, shape=None, s=None, value=None, v=None, *args, **kwargs):
    """
    This command sets a driven keyframe.A driven keyframe is similar to a regular keyframe. However, while a standard keyframe always has an x-axis of time in the graph editor, for a drivenkeyframe the user may choose any attribute as the x-axis of the graph editor. 
    """
    pass


def geomToBBox(bakeAnimation=None, ba=None, combineMesh=None, cm=None, endTime=None, et=None, keepOriginal=None, ko=None, name=None, n=None, nameSuffix=None, ns=None, sampleBy=None, sb=None, shaderColor=None, sc=None, single=None, s=None, startTime=None, st=None, *args, **kwargs):
    """
    Create polygonal mesh bounding boxes for geometry. Can also create a single bounding box per hierarchy.
    """
    pass


def createPolyHelixCtx(*args, **kwargs):
    """
    
    """
    pass


def getRenderTasks(camera=None, c=None, renderLayer=None, rl=None, *args, **kwargs):
    """
    Command to return render tasks to render an image source.Image source can depend on upstream image sources that result from renderings of 3D scene, or 2D renderings (e.g. render targets). This command obtains the graph of image source render dependencies, and creates render tasks according to these dependencies.A render task has context, which can be camera, render layer, and resolution, or other, renderer-specific context.Because of image source overrides, the render task context depends on the path through the render dependency graph, with the most upstream override for a context item applied.As there can be multiple paths through a render dependency graph to a render dependency, there can be multiple render tasks for a given render dependency.
    """
    pass


def polyCrease(createHistory=None, ch=None, operation=None, op=None, relativeValue=None, rv=None, value=None, v=None, vertexValue=None, vv=None, *args, **kwargs):
    """
    Command to set the crease values on the edges or vertices of a poly.The crease values are used by the smoothing algorithm.
    """
    pass


def FBXExportQuaternion(*args, **kwargs):
    """
    
    """
    pass


def CleanupPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditFluidResolutionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportIncludeChildren(*args, **kwargs):
    """
    
    """
    pass


def scriptCtx(allComponents=None, alc=None, allObjects=None, alo=None, animBreakdown=None, abd=None, animCurve=None, ac=None, animInTangent=None, ait=None, animKeyframe=None, ak=None, animOutTangent=None, aot=None, baseClassName=None, bcn=None, camera=None, ca=None, cluster=None, cl=None, collisionModel=None, clm=None, controlVertex=None, cv=None, cumulativeLists=None, cls=None, curve=None, c=None, curveKnot=None, ck=None, curveOnSurface=None, cos=None, curveParameterPoint=None, cpp=None, dimension=None, dim=None, dynamicConstraint=None, dc=None, edge=None, eg=None, editPoint=None, ep=None, emitter=None, em=None, enableRootSelection=None, ers=None, exists=None, ex=None, exitUponCompletion=None, euc=None, expandSelectionList=None, esl=None, facet=None, fc=None, field=None, fi=None, finalCommandScript=None, fcs=None, fluid=None, fl=None, follicle=None, fo=None, forceAddSelect=None, fas=None, hairSystem=None, hs=None, handle=None, ha=None, history=None, ch=None, hull=None, hl=None, ignoreInvalidItems=None, iii=None, ikEndEffector=None, iee=None, ikHandle=None, ikh=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imagePlane=None, ip=None, implicitGeometry=None, ig=None, isoparm=None, iso=None, joint=None, j=None, jointPivot=None, jp=None, lastAutoComplete=None, lac=None, lattice=None, la=None, latticePoint=None, lp=None, light=None, lt=None, localRotationAxis=None, ra=None, locator=None, lc=None, locatorUV=None, luv=None, locatorXYZ=None, xyz=None, nCloth=None, ncl=None, nParticle=None, npr=None, nParticleShape=None, nps=None, nRigid=None, nr=None, name=None, n=None, nonlinear=None, nl=None, nurbsCurve=None, nc=None, nurbsSurface=None, ns=None, objectComponent=None, ocm=None, orientationLocator=None, ol=None, particle=None, pr=None, particleShape=None, ps=None, plane=None, pl=None, polymesh=None, p=None, polymeshEdge=None, pe=None, polymeshFace=None, pf=None, polymeshFreeEdge=None, pfe=None, polymeshUV=None, puv=None, polymeshVertex=None, pv=None, polymeshVtxFace=None, pvf=None, rigidBody=None, rb=None, rigidConstraint=None, rc=None, rotatePivot=None, rp=None, scalePivot=None, sp=None, sculpt=None, sc=None, selectHandle=None, sh=None, setAllowExcessCount=None, sae=None, setAutoComplete=None, sac=None, setAutoToggleSelection=None, sat=None, setDoneSelectionPrompt=None, dsp=None, setNoSelectionHeadsUp=None, snh=None, setNoSelectionPrompt=None, snp=None, setSelectionCount=None, ssc=None, setSelectionHeadsUp=None, ssh=None, setSelectionPrompt=None, ssp=None, showManipulators=None, sm=None, spring=None, spr=None, springComponent=None, spc=None, stroke=None, str=None, subdiv=None, sd=None, subdivMeshEdge=None, sme=None, subdivMeshFace=None, smf=None, subdivMeshPoint=None, smp=None, subdivMeshUV=None, smu=None, surfaceEdge=None, se=None, surfaceFace=None, sf=None, surfaceKnot=None, sk=None, surfaceParameterPoint=None, spp=None, surfaceRange=None, sr=None, surfaceUV=None, suv=None, texture=None, tx=None, title=None, t=None, toolCursorType=None, tct=None, toolFinish=None, tf=None, toolStart=None, ts=None, totalSelectionSets=None, tss=None, vertex=None, v=None, *args, **kwargs):
    """
    This command allows a user to create their own tools based on the selection tool. A number of selection lists can be collected, the behaviour of the selection and the selection masks are fully customizable, etc. 
    """
    pass


def surfaceSampler(camera=None, cam=None, fileFormat=None, ff=None, filename=None, fn=None, filterSize=None, fs=None, filterType=None, ft=None, flipU=None, fu=None, flipV=None, fv=None, ignoreMirroredFaces=None, imf=None, ignoreTransforms=None, it=None, mapHeight=None, mh=None, mapMaterials=None, mm=None, mapOutput=None, mo=None, mapSpace=None, sp=None, mapWidth=None, mw=None, maxSearchDistance=None, msd=None, maximumValue=None, max=None, overscan=None, os=None, searchCage=None, sc=None, searchMethod=None, sm=None, searchOffset=None, so=None, shadows=None, sh=None, source=None, s=None, sourceUVSpace=None, sus=None, superSampling=None, ss=None, target=None, t=None, targetUVSpace=None, tus=None, useGeometryNormals=None, ugn=None, uvSet=None, uv=None, *args, **kwargs):
    """
    Maps surface detail from a source surface to a new texture map on a target surface. Both objects must be selected when the command is invoked, with the source surface selected first, and the target last. 
    """
    pass


def PolygonBooleanDifferenceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideControllers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynControl(*args, **kwargs):
    """
    
    """
    pass


def nexMultiCutCtx(*args, **kwargs):
    """
    
    """
    pass


def date(date=None, d=None, format=None, f=None, shortDate=None, sd=None, shortTime=None, st=None, time=None, t=None, *args, **kwargs):
    """
    Returns information about current time and date. Use the predefined formats, or the 
    """
    pass


def AddOceanDynamicLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphSnapOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def goal(goal=None, g=None, index=None, i=None, useTransformAsGoal=None, utr=None, weight=None, w=None, *args, **kwargs):
    """
    Specifies the given objects as being goals for the given particle object.If the goal objects are geometry, each particle in the particle object will each try to follow or match its position to that of a certain vertex/CV/lattice point of the goal.If the goal object is another particle object, each particle will try to follow a paricle of the goal. In any other case, all the particles will try to follow the current location of the goal object's transform.You can get this latter behavior for a geometry or particle object too by using -utr true. 
    """
    pass


def displacementToPoly(findBboxOnly=None, fbb=None, *args, **kwargs):
    """
    Command bakes geometry with displacement mapping into a polygonal object.
    """
    pass


def SelectToolOptionsMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorPaste(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SingleViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleGrid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssumePreferredAngleOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def squareSurface(continuityType1=None, ct1=None, continuityType2=None, ct2=None, continuityType3=None, ct3=None, continuityType4=None, ct4=None, curveFitCheckpoints=None, cfc=None, endPointTolerance=None, ept=None, rebuildCurve1=None, rc1=None, rebuildCurve2=None, rc2=None, rebuildCurve3=None, rc3=None, rebuildCurve4=None, rc4=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command produces a square surface given 3 or 4 curves. This resulting square surface is created within the intersecting region of the selected curves. The order of selection is important and the curves must intersect or their ends must meet.
    """
    pass


def texSelectShortestPathCtx(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    Creates a new context to select shortest edge path between two vertices or UVs in the texture editor window. 
    """
    pass


def FBXImportUpAxis(*args, **kwargs):
    """
    
    """
    pass


def XgmSplineCacheDeleteNodesAhead(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShowDirectoriesAndFiles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCameraOnlyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeUnpinSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdMapSewMove(constructionHistory=None, ch=None, limitPieceSize=None, lps=None, name=None, n=None, numberFaces=None, nf=None, worldSpace=None, ws=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command can be used to Move and Sew together separate UV pieces along geometric edges. UV pieces that correspond to the same geometric edge, are merged together by moving the smaller piece to the larger one. 
    """
    pass


def ToggleUnsharedUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hyperPanel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, hyperEditor=None, he=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates, edit and queries hypergraph panels which contain only a hypergraph editor. 
    """
    pass


def xgmSplineQuery(*args, **kwargs):
    """
    
    """
    pass


def HideMarkers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WhatsNewHighlightingOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerspRelationshipEditorLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_softSelDistanceTypeGlobal(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynamicConstraintRemove(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCreateAsset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectCamerasAndImagePlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AimConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorUnmuteSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishChildAnchorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def commandEcho(addFilter=None, af=None, filter=None, f=None, lineNumbers=None, ln=None, state=None, st=None, *args, **kwargs):
    """
    This command controls what is echoed to the command window.
    """
    pass


def UVContourStretchProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowStrokes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintSelectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteExpressions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def projectCurve(direction=None, d=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, tolerance=None, tol=None, useNormal=None, un=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The projectCurve command creates curves on surface where all selected curves project onto the selected surfaces. Projection can be done using the surface normals or the user can specify the vector to project along. Note: the user does not have to specify the curves and surfaces in any particular order in the command line. 
    """
    pass


def ToggleCreaseEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateTextureDeformerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def group(absolute=None, a=None, empty=None, em=None, name=None, n=None, parent=None, p=None, relative=None, r=None, useAsGroup=None, uag=None, world=None, w=None, *args, **kwargs):
    """
    This command groups the specified objects under a new group and returns the name of the new group. 
    """
    pass


def dR_snapToBackfacesTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSmoothnessHull(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorFrameCenterView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConnectToTime(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeCollideOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DynamicRelationshipEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsToCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldRender(*args, **kwargs):
    """
    
    """
    pass


def Birail2Options(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AnimationSweepOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportAnimOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AutobindContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UpdateBindingSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowBaseWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusDisplayNComponentNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportLights(*args, **kwargs):
    """
    
    """
    pass


def SelectPointsMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LastActionTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddOceanDynamicLocatorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def referenceEdit(applyFailedEdits=None, afe=None, changeEditTarget=None, cet=None, failedEdits=None, fld=None, removeEdits=None, r=None, successfulEdits=None, scs=None, editCommand=None, ec=None, onReferenceNode=None, orn=None, *args, **kwargs):
    """
    Use this command to remove and change the modifications which have been applied to references. A valid commandTarget is either a reference node, a reference file, a node in a reference, or a plug from a reference. Only modifications that have been made from the currently open scene can be changed or removed. The 'referenceQuery -topReference' command can be used to determine what modifications have been made to a given commandTarget. Additionally only unapplied edits will be affected. Edits are unapplied when the node(s) which they affect are unloaded, or when they could not be successfully applied. By default this command only works on failed edits (this can be adjusted using the "-failedEdits" and "-successfulEdits" flags). Specifying a reference node as the command target is equivalent to specifying every node in the target reference file as a target. In this situation the results may differ depending on whether the target reference is loaded or unloaded. When it is unloaded, edits that affect both a node in the target reference and a node in one of its descendant references may be missed (e.g. those edits may not be removed). This is because when a reference is unloaded Maya no longer retains detailed information about which nodes belong to it. However, edits that only affect nodes in the target reference or in one of its ancestral references should be removed as expected. When the flags -removeEdits and -editCommand are used together, by default all connectAttr edits are removed from the specified source object. To remove only edits that connect to a specific target object, the target object can be passed as an additional argument to the command. This narrows the match criteria, so that only edits that connect the source object to the provided target in this additional argument are removed. See the example below. NOTE: When specifying a plug it is important to use the appropriate long attribute name.
    """
    pass


def xgmSetActive(*args, **kwargs):
    """
    
    """
    pass


def SetKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPrimSelectionContext(*args, **kwargs):
    """
    
    """
    pass


def nClothReplaceCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePointLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nop(*args, **kwargs):
    """
    
    """
    pass


def TogglePolyDisplayHardEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorAlwaysDisplayTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleZoomOut(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateClipOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddWrapInfluence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShapeMenuStateNoShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OffsetCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AppendToHairCacheOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def animView(endTime=None, et=None, maxValue=None, max=None, minValue=None, min=None, nextView=None, nv=None, previousView=None, pv=None, startTime=None, st=None, *args, **kwargs):
    """
    This command allows you to specify the current view range within an animation editor. 
    """
    pass


def attachNclothCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideFkSkeleton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleIKSolvers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideSelectedObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorCreateDoWhileCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtractSubdivSurfaceVerticesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewSet(animate=None, an=None, back=None, b=None, bottom=None, bo=None, fit=None, fit=None, fitFactor=None, ff=None, front=None, f=None, home=None, h=None, keepRenderSettings=None, krs=None, leftSide=None, ls=None, namespace=None, ns=None, nextView=None, nv=None, persp=None, p=None, previousView=None, pv=None, rightSide=None, rs=None, side=None, s=None, top=None, t=None, viewNegativeX=None, vnx=None, viewNegativeY=None, vny=None, viewNegativeZ=None, vnz=None, viewX=None, vx=None, viewY=None, vy=None, viewZ=None, vz=None, *args, **kwargs):
    """
    This command positions the camera to one of the pre-defined positions. If the fit flag is set in conjunction with persp, top, side, or front, the view is "fit" based on the list of selected objects (if there are any) or on all the objects if nothing is selected. Notice that the fit flag cannot be set in conjunction with view along axis commands like viewX. If a camera is not specified, the camera in the active view will be used. If no flag is specified, the camera is set to the home position. 
    """
    pass


def TimeEditorSetZeroKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def alignSurface(curvatureContinuity=None, cc=None, curvatureScale1=None, cs1=None, curvatureScale2=None, cs2=None, directionU=None, du=None, joinParameter=None, jnp=None, positionalContinuity=None, pc=None, positionalContinuityType=None, pct=None, reverse1=None, rv1=None, reverse2=None, rv2=None, swap1=None, sw1=None, swap2=None, sw2=None, tangentContinuity=None, tc=None, tangentContinuityType=None, tct=None, tangentScale1=None, ts1=None, tangentScale2=None, ts2=None, twist=None, tw=None, attach=None, at=None, constructionHistory=None, ch=None, keepMultipleKnots=None, kmk=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The surface align command is used to align surfaces in maya. The main alignment options are positional, tangent and curvature continuity. Curvature continuity implies tangent continuity. 
    """
    pass


def cacheFileCombine(cacheIndex=None, ci=None, channelName=None, cnm=None, connectCache=None, cc=None, keepWeights=None, kw=None, layerNode=None, ln=None, nextAvailable=None, na=None, object=None, obj=None, objectIndex=None, oi=None, *args, **kwargs):
    """
    Creates a cacheBlend node that can be used to combine, layer or blend multiple cacheFiles for a given object.
    """
    pass


def CreateEmitterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonCopy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WhatsNewStartupDialogOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ActivateGlobalScreenSliderModeMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProjectCurveOnMeshOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textScrollList(allItems=None, ai=None, allowAutomaticSelection=None, aas=None, allowMultiSelection=None, ams=None, annotation=None, ann=None, append=None, a=None, appendPosition=None, ap=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, deleteKeyCommand=None, dkc=None, deselectAll=None, da=None, deselectIndexedItem=None, dii=None, deselectItem=None, di=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, lineFont=None, lf=None, manage=None, m=None, noBackground=None, nbg=None, numberOfItems=None, ni=None, numberOfPopupMenus=None, npm=None, numberOfRows=None, nr=None, numberOfSelectedItems=None, nsi=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, removeAll=None, ra=None, removeIndexedItem=None, rii=None, removeItem=None, ri=None, selectCommand=None, sc=None, selectIndexedItem=None, sii=None, selectItem=None, si=None, selectUniqueTagItem=None, sut=None, showIndexedItem=None, shi=None, uniqueTag=None, utg=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries a text scrolling list. The list can be in single select mode where only one item at at time is selected, or in multi-select mode where many items may be selected. 
    """
    pass


def mayaPreviewRenderIntoNewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteCurrentWorkspace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportOCMerge(*args, **kwargs):
    """
    
    """
    pass


def IncreaseCheckerDensity(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scaleConstraint(layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, offset=None, o=None, remove=None, rm=None, scaleCompensate=None, sc=None, skip=None, sk=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's scale to the scale of the target object or to the average scale of a number of targets. 
    """
    pass


def RenameCurrentUVSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def replaceCacheFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyFlexor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LockCurveLength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def radioButtonGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, annotation1=None, an1=None, annotation2=None, an2=None, annotation3=None, an3=None, annotation4=None, an4=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, changeCommand1=None, cc1=None, changeCommand2=None, cc2=None, changeCommand3=None, cc3=None, changeCommand4=None, cc4=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, data1=None, da1=None, data2=None, da2=None, data3=None, da3=None, data4=None, da4=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enable1=None, en1=None, enable2=None, en2=None, enable3=None, en3=None, enable4=None, en4=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, label1=None, l1=None, label2=None, l2=None, label3=None, l3=None, label4=None, l4=None, labelAnnotation=None, la=None, labelArray2=None, la2=None, labelArray3=None, la3=None, labelArray4=None, la4=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, numberOfRadioButtons=None, nrb=None, offCommand=None, ofc=None, offCommand1=None, of1=None, offCommand2=None, of2=None, offCommand3=None, of3=None, offCommand4=None, of4=None, onCommand=None, onc=None, onCommand1=None, on1=None, onCommand2=None, on2=None, onCommand3=None, on3=None, onCommand4=None, on4=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, select=None, sl=None, shareCollection=None, scl=None, useTemplate=None, ut=None, vertical=None, vr=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def RenderIntoNewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyQueryBlindData(associationType=None, at=None, binaryData=None, bnd=None, booleanData=None, bd=None, doubleData=None, dbd=None, intData=None, ind=None, longDataName=None, ldn=None, maxValue=None, max=None, minValue=None, min=None, shortDataName=None, sdn=None, showComp=None, sc=None, stringData=None, sd=None, subString=None, ss=None, typeId=None, id=None, *args, **kwargs):
    """
    Command query's blindData associated with particular polygonal components. So, the command will require the following to be specified:- selection list to query Optional are the:- typeId- associationType- longDataName or shortDataName of data being queried.- The actual data being specified.- showComponent flag Note that for object level blind data, the showComponent flag will be ignored. If no components are selected, the assocation flag will be ignored and object level data will be queried.
    """
    pass


def xgmFreezeBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def polyClean(cleanEdges=None, ce=None, cleanPartialUVMapping=None, cpm=None, cleanVertices=None, cv=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    polyClean will attempt to remove components that are invalid in the description of a poly mesh.
    """
    pass


def bindSkin(byClosestPoint=None, bcp=None, byPartition=None, bp=None, colorJoints=None, cj=None, delete=None, d=None, doNotDescend=None, dnd=None, enable=None, en=None, name=None, n=None, partition=None, p=None, toAll=None, ta=None, toSelectedBones=None, tsb=None, toSkeleton=None, ts=None, unbind=None, ub=None, unbindKeepHistory=None, ubk=None, unlock=None, ul=None, *args, **kwargs):
    """
    This command binds the currently selected objects to the currently selected skeletons.Shapes which can be bound are: meshes, nurbs curves, nurbs surfaces, lattices, subdivision surfaces, and API shapes. Multiple shapes and multiple skeletons can be bound at once by selecting them or specifying them on the command line. Selection order is not important.
    """
    pass


def container(addNode=None, an=None, asset=None, a=None, assetMember=None, am=None, bindAttr=None, ba=None, connectionList=None, cl=None, current=None, c=None, fileName=None, fn=None, findContainer=None, fc=None, force=None, f=None, includeHierarchyAbove=None, iha=None, includeHierarchyBelow=None, ihb=None, includeNetwork=None, inc=None, includeNetworkDetails=None, ind=None, includeShaders=None, isd=None, includeShapes=None, ish=None, includeTransform=None, it=None, isContainer=None, isc=None, name=None, n=None, nodeList=None, nl=None, nodeNamePrefix=None, nnp=None, parentContainer=None, par=None, preview=None, p=None, publishAndBind=None, pb=None, publishAsChild=None, pac=None, publishAsParent=None, pap=None, publishAsRoot=None, pro=None, publishAttr=None, pa=None, publishConnections=None, pc=None, publishName=None, pn=None, removeContainer=None, rc=None, removeNode=None, rn=None, type=None, typ=None, unbindAndUnpublish=None, ubp=None, unbindAttr=None, ua=None, unbindChild=None, unc=None, unbindParent=None, unp=None, unpublishChild=None, upc=None, unpublishName=None, un=None, unpublishParent=None, upp=None, unsortedOrder=None, uso=None, *args, **kwargs):
    """
    This command can be used to create and query container nodes. It is also used to perform operations on containers such as: 
    """
    pass


def SubdividePolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SoftModDeformer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddAuxEffector(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def QuickRigEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def itemFilter(byBin=None, bk=None, byName=None, bn=None, byScript=None, bs=None, byType=None, bt=None, category=None, cat=None, classification=None, cls=None, clearByBin=None, cbk=None, clearByType=None, cbt=None, difference=None, di=None, exists=None, ex=None, intersect=None, intersect=None, listBuiltInFilters=None, lbf=None, listOtherFilters=None, lof=None, listUserFilters=None, luf=None, negate=None, neg=None, parent=None, p=None, pythonModule=None, pym=None, secondScript=None, ss=None, text=None, t=None, union=None, un=None, uniqueNodeNames=None, unn=None, *args, **kwargs):
    """
    This command creates a named itemFilter object.This object can be attached to selectionConnection objects, or to editors, in order to filter the item lists going through them.Using union, intersection and difference filters, complex composite filters can be created. 
    """
    pass


def polyShortestPathCtx(*args, **kwargs):
    """
    Creates a new context to select shortest edge path between two vertices or UVs in the 3d viewport. 
    """
    pass


def PolygonBooleanUnionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TestTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDeleteAllCamerasAndImagePlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def freezeOptions(displayLayers=None, dl=None, downstream=None, dn=None, explicitPropagation=None, ep=None, invisible=None, inv=None, referencedNodes=None, rn=None, runtimePropagation=None, rt=None, upstream=None, up=None, *args, **kwargs):
    """
    This command provides access to the options used by the evaluation manager to handle propagation and recognition of when a node is in a frozen state. See the individual flags for the different options available. These values are all stored as user preferences and persist across sessions.
    """
    pass


def SelectUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def superCtx(*args, **kwargs):
    """
    
    """
    pass


def AveragePolygonNormalsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteUVsWithoutHotkey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyPaintValueRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texMoveContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, position=None, p=None, snapComponentsRelative=None, scr=None, snapPixelMode=None, spm=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a texture editor move manip context. Note that the above flags control the global behaviour of all texture editor move manip contexts.Changing one context independently is not allowed.Changing a context's behaviour using the above flags, will change all existing texture editor move manip contexts. 
    """
    pass


def PolyMergeEdgesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReattachSkeleton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateJiggleOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheDisableSelectedCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAppendVertex(append=None, a=None, hole=None, h=None, point=None, p=None, texture=None, tx=None, vertex=None, v=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    Appends a new face to the selected polygonal object. The direction of the normal is given by the vertex order: the face normal points towards the user when the vertices rotate counter clockwise. Note that holes must be described in the opposite direction. 
    """
    pass


def ShowTexturePlacements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikGetNodeCount(*args, **kwargs):
    """
    
    """
    pass


def dgmodified(*args, **kwargs):
    """
    The 
    """
    pass


def NodeEditorPublishCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GoToWorkingFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def KeyBlendShapeTargetsWeight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderPartition(*args, **kwargs):
    """
    Set or query the model's current partition. When flag 
    """
    pass


def CreateUVsBasedOnCamera(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidVoxelInfo(checkBounds=None, cb=None, inBounds=None, ib=None, objectSpace=None, os=None, radius=None, r=None, voxel=None, v=None, voxelCenter=None, vc=None, xIndex=None, xi=None, yIndex=None, yi=None, zIndex=None, zi=None, *args, **kwargs):
    """
    Provides basic information about the mapping of a fluid voxel grid into world- or object space of the fluid.Use this command to determine the center point of a voxel, or to find the voxel containing a given point, among other things.
    """
    pass


def SmoothHairCurvesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NewtonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def lsUI(cmdTemplates=None, ct=None, collection=None, col=None, contexts=None, ctx=None, controlLayouts=None, cl=None, controls=None, ctl=None, dumpWidgets=None, dw=None, editors=None, ed=None, head=None, hd=None, long=None, l=None, menuItems=None, mi=None, menus=None, m=None, numWidgets=None, nw=None, panels=None, p=None, radioMenuItemCollections=None, rmc=None, tail=None, tl=None, type=None, typ=None, windows=None, wnd=None, *args, **kwargs):
    """
    This command returns the names of UI objects.
    """
    pass


def hikGetNodeIdFromName(*args, **kwargs):
    """
    
    """
    pass


def subdToPoly(applyMatrixToResult=None, amr=None, copyUVTopology=None, cut=None, depth=None, d=None, extractPointPosition=None, epp=None, format=None, f=None, inSubdCVId=None, inSubdCVId=None, inSubdCVIdLeft=None, isl=None, inSubdCVIdRight=None, isr=None, maxPolys=None, mp=None, outSubdCVId=None, os=None, outSubdCVIdLeft=None, osl=None, outSubdCVIdRight=None, osr=None, outv=None, ov=None, preserveVertexOrdering=None, pvo=None, sampleCount=None, sc=None, shareUVs=None, suv=None, subdNormals=None, un=None, addUnderTransform=None, aut=None, connectShaders=None, cs=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command tessellates a subdivision surface and produces polygon. The name of the new polygon is returned. If construction history is ON, then the name of the new dependency node is returned as well. 
    """
    pass


def NodeEditorCloseAllTabs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXProperty(*args, **kwargs):
    """
    
    """
    pass


def cmdScrollFieldExecuter(appendText=None, at=None, autoCloseBraces=None, acb=None, clear=None, clr=None, commandCompletion=None, cco=None, copySelection=None, cp=None, currentLine=None, cl=None, cutSelection=None, ct=None, execute=None, exc=None, executeAll=None, exa=None, filterKeyPress=None, fkp=None, hasFocus=None, hf=None, hasSelection=None, hsl=None, insertText=None, it=None, load=None, ld=None, loadContents=None, ldc=None, numberOfLines=None, nl=None, objectPathCompletion=None, opc=None, pasteSelection=None, pst=None, redo=None, rd=None, removeStoredContents=None, rsc=None, replaceAll=None, rpa=None, saveSelection=None, sv=None, saveSelectionToShelf=None, svs=None, searchAndSelect=None, sas=None, searchDown=None, sd=None, searchMatchCase=None, smc=None, searchString=None, ss=None, searchWraps=None, sw=None, select=None, sl=None, selectAll=None, sla=None, selectedText=None, slt=None, showLineNumbers=None, sln=None, showTooltipHelp=None, sth=None, source=None, src=None, sourceType=None, st=None, spacesPerTab=None, spt=None, storeContents=None, stc=None, tabsForIndent=None, tfi=None, text=None, t=None, textLength=None, tl=None, undo=None, ud=None, *args, **kwargs):
    """
    A script editor executer control used to issue script commands to Maya.
    """
    pass


def ShowClusters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectUtilities(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def characterMap(mapAttr=None, ma=None, mapMethod=None, mm=None, mapNode=None, mn=None, mapping=None, m=None, proposedMapping=None, pm=None, unmapAttr=None, ua=None, unmapNode=None, umn=None, *args, **kwargs):
    """
    This command is used to create a correlation between the attributes of 2 or more characters.
    """
    pass


def FBXLoadMBImportPresetFile(*args, **kwargs):
    """
    
    """
    pass


def dR_edgedFacesTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def wrinkleContext(branchCount=None, brc=None, branchDepth=None, bd=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, randomness=None, rnd=None, style=None, st=None, thickness=None, th=None, wrinkleCount=None, wc=None, wrinkleIntensity=None, wi=None, *args, **kwargs):
    """
    This command creates a context that creates wrinkles.
    """
    pass


def ToggleIKHandleSnap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InvertSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def disable(value=None, v=None, *args, **kwargs):
    """
    This command enables or disables the control passed as argument.
    """
    pass


def CreateSculptDeformerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TumbleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textFieldButtonGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, buttonCommand=None, bc=None, buttonLabel=None, bl=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, enableButton=None, eb=None, exists=None, ex=None, fileName=None, fi=None, forceChangeCommand=None, fcc=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, insertText=None, it=None, insertionPosition=None, ip=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, placeholderText=None, pht=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, text=None, tx=None, textChangedCommand=None, tcc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def RigidBodySolver(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FrameAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def psdExport(alphaChannelIdx=None, aci=None, bytesPerChannel=None, bpc=None, emptyLayerSet=None, els=None, format=None, format=None, layerName=None, lyn=None, layerSetName=None, lsn=None, outFileName=None, ofn=None, preMultiplyAlpha=None, pma=None, psdFileName=None, ifn=None, *args, **kwargs):
    """
    Writes the Photoshop file layer set into different formats.The outputfile depth (bit per channel ) can be different from that of the input.If the input is 16 bpc and output is 8 bpc, there will be data loss.
    """
    pass


def evaluationManager(cycleCluster=None, ccl=None, enabled=None, e=None, idleBuild=None, ib=None, invalidate=None, inv=None, manipulation=None, man=None, mode=None, m=None, downstreamFrom=None, dst=None, nodeTypeGloballySerialize=None, ntg=None, nodeTypeParallel=None, ntp=None, nodeTypeSerialize=None, nts=None, nodeTypeUntrusted=None, ntu=None, upstreamFrom=None, ust=None, safeMode=None, sfm=None, *args, **kwargs):
    """
    Handles turning on and off the evaluation manager method of evaluating the DG. Query the 'mode' flag to see all available evaluation modes. The special mode 'off' disables the evaluation manager. The scheduling override flags 'nodeTypeXXX' force certain node types to use specific scheduling types, even though the node descriptions might indicate otherwise. Use with caution; certain nodes may not react well to alternative scheduling types. Only one scheduling type override will be in force at a time, the most restrictive one. In order, they are untrusted, globally serialized, locally serialized, and parallel. The node types will however remember all overrides. For example, if you set a node type override to be untrusted, then to be parallel it will continue to use the untrusted override. If you then turn off the untrusted override, the scheduling will advance to the parallel one. The actual node scheduling type is always superceded by the overrides. For example, a serial node will still be considered as parallel if the node type has the parallel override set, even though 'serial' is a more restrictive scheduling type. See the 'dbpeek' command 'graph' operation with arguments 'evaluationGraph' and 'scheduling' to see what scheduling type any particular node will end up using after the hierarchy of overrides and native scheduling types is applied.
    """
    pass


def DuplicateFace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artSetPaintCtx(accopacity=None, aco=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clear=None, clr=None, dragSlider=None, dsl=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, lowerradius=None, lr=None, mappressure=None, mp=None, name=None, n=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, reflection=None, rn=None, reflectionaxis=None, ra=None, setcolorfeedback=None, scf=None, setdisplaycvs=None, dcv=None, setopertype=None, sot=None, settomodify=None, stm=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, usepressure=None, up=None, *args, **kwargs):
    """
    This tool allows the user to modify the set membership (add, transfer, remove cvs) on nurbs surfaces using Maya Artisan's interface. 
    """
    pass


def igConvertToLogical(*args, **kwargs):
    """
    
    """
    pass


def PublishConnectionsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonBooleanIntersectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cacheFile(appendFrame=None, apf=None, attachFile=None, af=None, cacheFileNode=None, cfn=None, cacheFormat=None, cf=None, cacheInfo=None, ci=None, cacheableAttrs=None, cat=None, cacheableNode=None, cnd=None, channelIndex=None, chi=None, channelName=None, cnm=None, convertPc2=None, pc2=None, createCacheNode=None, ccn=None, creationChannelName=None, cch=None, dataSize=None, dsz=None, deleteCachedFrame=None, dcf=None, descriptionFileName=None, dfn=None, directory=None, dir=None, doubleToFloat=None, dtf=None, endTime=None, et=None, fileName=None, f=None, format=None, fm=None, geometry=None, gm=None, inAttr=None, ia=None, inTangent=None, it=None, interpEndTime=None, iet=None, interpStartTime=None, ist=None, noBackup=None, nb=None, outAttr=None, oa=None, outTangent=None, ot=None, pc2File=None, pcf=None, pointCount=None, pc=None, points=None, pts=None, pointsAndNormals=None, pan=None, prefix=None, p=None, refresh=None, r=None, replaceCachedFrame=None, rcf=None, replaceWithoutSimulating=None, rws=None, runupFrames=None, rf=None, sampleMultiplier=None, spm=None, simulationRate=None, smr=None, singleCache=None, sch=None, startTime=None, st=None, staticCache=None, sc=None, worldSpace=None, ws=None, *args, **kwargs):
    """
    Creates one or more cache files on disk to store attribute data for a span of frames. The caches can be created for points/normals on a geometry (using the pts/points or pan/pointsAndNormals flag), for vectorArray output data (using the oa/outAttr flag), or for additional node specific data (using the cnd/cacheableNode flag for those nodes that support it). 
    """
    pass


def LookAtSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setToolTo(*args, **kwargs):
    """
    This command switches control to the named context.
    """
    pass


def setKeyCtx(breakdown=None, bd=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to set keys within the graph editor 
    """
    pass


def SetProject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def defaultNavigation(connectToExisting=None, ce=None, createNew=None, cn=None, defaultAttribute=None, da=None, defaultTraversal=None, dtv=None, defaultWorkingNode=None, dwn=None, delete=None, delete=None, destination=None, d=None, force=None, f=None, ignore=None, i=None, navigatorDecisionString=None, nds=None, quiet=None, qt=None, relatedNodes=None, ren=None, source=None, s=None, unignore=None, u=None, *args, **kwargs):
    """
    The defaultNavigation command defines default behaviours when creating or manipulating connections between nodes and when navigating between nodes via those connections. This command is primarily used by attribute editors. 
    """
    pass


def NodeEditorToggleZoomIn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCreaseCtx(createSet=None, cs=None, extendSelection=None, es=None, relative=None, r=None, *args, **kwargs):
    """
    Create a new context to crease components on polygonal objects
    """
    pass


def hikGetEffectorIdFromName(*args, **kwargs):
    """
    
    """
    pass


def SetVertexNormal(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshCloneTargetToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySplitCtx2(constrainToEdges=None, cte=None, edgeMagnets=None, em=None, snapTolerance=None, st=None, *args, **kwargs):
    """
    Create a new context to split facets on polygonal objects
    """
    pass


def IntersectSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptSubdivsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GpuCacheExportAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InTangentAuto(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CenterViewOfSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorClipScaleToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleRotationPivots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeEdgeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleProxyDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UntemplateObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateWrapOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorFrameAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowSmoothSkinInfluences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ZoomTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParticleFillOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetWeightsToDefault(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVPlanarProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def psdEditTextureFile(addChannel=None, adc=None, addChannelColor=None, acc=None, addChannelImage=None, aci=None, deleteChannel=None, deleteChannel=None, psdFileName=None, psf=None, snapShotImage=None, ssi=None, uvSnapPostionTop=None, uvt=None, *args, **kwargs):
    """
    Edits the existing PSD file. Addition and deletion of the channels (layer sets) are supported. 
    """
    pass


def SelectAllPolygonGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TwoSideBySideViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFastInteraction(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePaintOnPaintableObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynPaintCtx(*args, **kwargs):
    """
    
    """
    pass


def RenderTextureRangeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateVolumeLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSelectionHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshBulgeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mouldSrf(*args, **kwargs):
    """
    
    """
    pass


def ApplySettingsToSelectedStroke(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sequenceManager(addSequencerAudio=None, asa=None, attachSequencerAudio=None, ata=None, currentShot=None, cs=None, currentTime=None, ct=None, listSequencerAudio=None, lsa=None, listShots=None, lsh=None, modelPanel=None, mp=None, node=None, nd=None, writableSequencer=None, ws=None, *args, **kwargs):
    """
    The sequenceManager command manages sequences, shots, and their related scenes.
    """
    pass


def DeleteRigidBodies(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlipUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyColorSetCmdWrapper(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorClipResetTiming(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikHandleCtx(autoPriorityH=None, apH=None, createCurve=None, ccv=None, createRootAxis=None, cra=None, exists=None, ex=None, forceSolverH=None, fsH=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, numSpans=None, ns=None, parentCurve=None, pcv=None, poWeightH=None, pwH=None, priorityH=None, pH=None, rootOnCurve=None, roc=None, rootTwistMode=None, rtm=None, simplifyCurve=None, scv=None, snapCurve=None, snc=None, snapHandleH=None, snH=None, solverTypeH=None, stH=None, stickyH=None, sH=None, twistType=None, tws=None, weightH=None, wH=None, *args, **kwargs):
    """
    The ikHandle context command (ikHandleCtx) updates parameters of ikHandle tool.The options for the tool will be set to the flags that the user specifies. 
    """
    pass


def PrelightPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransplantHairOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geomBind(bindMethod=None, bm=None, falloff=None, fo=None, geodesicVoxelParams=None, gvp=None, maxInfluences=None, mi=None, *args, **kwargs):
    """
    This command is used to compute weights using the GeomBind lib.
    """
    pass


def getRenderDependencies(*args, **kwargs):
    """
    Command to return dependencies of an image source.Image sources (such as render targets) can depend on other upstream image sources that result from renderings of 3D scene, or renderings of 2D compositing graphs. This command returns these dependencies, so that they can be analyzed and rendered.
    """
    pass


def SoftModTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def psdChannelOutliner(addChild=None, ach=None, allItems=None, all=None, annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfItems=None, ni=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, psdParent=None, ppa=None, removeAll=None, ra=None, removeChild=None, rc=None, selectCommand=None, sc=None, selectItem=None, si=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a psdChannelOutliner control which is capable of displaying a tree structure upto one level. 
    """
    pass


def selectionConnection(activeCacheList=None, atc=None, activeCharacterList=None, acl=None, activeList=None, act=None, addScript=None, addScript=None, addTo=None, add=None, characterList=None, cl=None, clear=None, clr=None, connectionList=None, lst=None, defineTemplate=None, dt=None, deselect=None, d=None, editor=None, ed=None, exists=None, ex=None, filter=None, f=None, findObject=None, fo=None, g=None, g=None, highlightList=None, hl=None, identify=None, id=None, keyframeList=None, key=None, lock=None, lck=None, modelList=None, mdl=None, object=None, obj=None, parent=None, p=None, remove=None, rm=None, removeScript=None, rs=None, select=None, s=None, setList=None, sl=None, switch=None, sw=None, useTemplate=None, ut=None, worldList=None, wl=None, *args, **kwargs):
    """
    This command creates a named selectionConnection object. This object is simply a shared selection list. It may be used by editors to share their highlight data. For example, an outliner may attach its selected list to one of these objects, and a graph editor may use the same object as a list source. Then, the graph editor would only display objects that are selected in the outliner. 
    """
    pass


def geometryMergeCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scmh(absolute=None, a=None, ignore=None, i=None, quiet=None, q=None, relative=None, r=None, *args, **kwargs):
    """
    Set the current manipulator handle value(s).In UI units (where applicable), though the syntax is set to handle the unit type of the current manipulator handle (if available). 
    """
    pass


def NodeEditorShowAllCustomAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCreateTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishRootTransform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorToggleTimeCursorPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportProtectDrivenKeys(*args, **kwargs):
    """
    
    """
    pass


def SplitMeshWithProjectedCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportColladaFrameRate(*args, **kwargs):
    """
    
    """
    pass


def recordDevice(cleanup=None, c=None, data=None, da=None, device=None, d=None, duration=None, dr=None, playback=None, p=None, state=None, st=None, wait=None, w=None, *args, **kwargs):
    """
    Starts and stops server side device recording. The data is recorded at the device rate. Once recorded, the data may be brought into Maya with the applyTake command. 
    """
    pass


def FBXGetTakeName(*args, **kwargs):
    """
    
    """
    pass


def MakeCurvesDynamicOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeEditorPanel(activeClipEditMode=None, ace=None, activeTabRootClipId=None, atr=None, activeTabTime=None, att=None, activeTabView=None, atv=None, autoFit=None, af=None, control=None, ctl=None, defineTemplate=None, dt=None, displayActiveKeyTangents=None, dat=None, displayActiveKeys=None, dak=None, displayInfinities=None, di=None, displayKeys=None, dk=None, displayTangents=None, dtn=None, displayValues=None, dv=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, groupIdForTabView=None, gtv=None, highlightConnection=None, hlc=None, keyingTarget=None, kt=None, layerId=None, l=None, lockMainConnection=None, lck=None, lookAt=None, la=None, mainListConnection=None, mlc=None, menu=None, m=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, setToPrevClipEditMode=None, spe=None, snapTime=None, st=None, snapToClip=None, stc=None, snapToFrame=None, stf=None, snapTolerance=None, sto=None, snapValue=None, sv=None, stateString=None, sts=None, tabView=None, tv=None, timeCursor=None, tc=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    Time Editor - non-linear animation editor
    """
    pass


def fluidReplaceFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def parentConstraint(createCache=None, cc=None, decompRotationToChild=None, dr=None, deleteCache=None, dc=None, layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, remove=None, rm=None, skipRotate=None, sr=None, skipTranslate=None, st=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's position and rotation so that it behaves as if it were a child of the target object(s). In the case of multiple targets, the overall position and rotation of the constrained object is the weighted average of each target's contribution to the position and rotation of the object. 
    """
    pass


def arnoldRenderToTexture(*args, **kwargs):
    """
    
    """
    pass


def AirOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def popupMenu(allowOptionBoxes=None, aob=None, altModifier=None, alt=None, button=None, b=None, ctrlModifier=None, ctl=None, defineTemplate=None, dt=None, deleteAllItems=None, dai=None, exists=None, ex=None, itemArray=None, ia=None, markingMenu=None, mm=None, numberOfItems=None, ni=None, parent=None, p=None, postMenuCommand=None, pmc=None, postMenuCommandOnce=None, pmo=None, shiftModifier=None, sh=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a popup menu and attaches it to the current control if no parent is specified.The popup menu is posted with the right mouse button by default. 
    """
    pass


def SaveSceneAs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artPuttyCtx(accopacity=None, aco=None, activeListChangedProc=None, alp=None, afterStrokeCmd=None, asc=None, alphaclamp=None, alc=None, alphaclamplower=None, acl=None, alphaclampupper=None, acu=None, attrSelected=None, asl=None, autosmooth=None, asm=None, beforeStrokeCmd=None, bsc=None, brushStrength=None, bs=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clamp=None, cl=None, clamplower=None, cll=None, clampupper=None, clu=None, clear=None, clr=None, collapsecvtol=None, clc=None, colorRamp=None, cr=None, colorfeedback=None, cf=None, colorrangelower=None, crl=None, colorrangeupper=None, cru=None, dataTypeIndex=None, dti=None, disablelighting=None, dl=None, dispdecr=None, dde=None, dispincr=None, din=None, dragSlider=None, dsl=None, duringStrokeCmd=None, dsk=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, filterNodes=None, fon=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, interactiveUpdate=None, iu=None, invertrefvector=None, irv=None, lowerradius=None, lr=None, mappressure=None, mp=None, maxdisp=None, md=None, maxvalue=None, mxv=None, minvalue=None, miv=None, mouldtypemouse=None, mtm=None, name=None, n=None, objattrArray=None, oaa=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintNodeArray=None, pna=None, paintattrselected=None, pas=None, paintmode=None, pm=None, polecv=None, pcv=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, rampMaxColor=None, rxc=None, rampMinColor=None, rmc=None, reflection=None, rn=None, reflectionaxis=None, ra=None, refsurface=None, rs=None, refvector=None, rv=None, refvectoru=None, rvu=None, refvectorv=None, rvv=None, selectedattroper=None, sao=None, showactive=None, sa=None, smoothiters=None, si=None, stampProfile=None, stP=None, stitchcorner=None, stc=None, stitchedgeflood=None, sef=None, stitchtype=None, stt=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toolOffProc=None, tfp=None, toolOnProc=None, top=None, updateerasesrf=None, ues=None, updaterefsrf=None, urs=None, useColorRamp=None, ucr=None, useMaxMinColor=None, umc=None, usepressure=None, up=None, value=None, val=None, whichTool=None, wst=None, *args, **kwargs):
    """
    This is a context command to set the flags on the artAttrContext, which is the base context for attribute painting operations. All commands require the name of the context as the last argument as this provides the name of the context to create, edit or query. 
    """
    pass


def ToggleViewportRenderer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGridToggleSnap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def illustratorCurves(constructionHistory=None, ch=None, illustratorFilename=None, ifn=None, name=None, n=None, object=None, o=None, scaleFactor=None, sf=None, *args, **kwargs):
    """
    The illustratorCurves command creates NURBS curves from an input Adobe(R) Illustrator(R) file. 
    """
    pass


def ColorPreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyVertexNormalCtx(*args, **kwargs):
    """
    
    """
    pass


def nucleusDisplayMaterialNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleTransformDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SendAsNewScene3dsMax(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NParticleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def track(down=None, d=None, left=None, l=None, right=None, r=None, upDistance01=None, u=None, upDistance02=None, up=None, *args, **kwargs):
    """
    The track command translates a camera horizontally or vertically in the world space. The viewing-direction and up-direction of the camera are not altered. There is no translation in the viewing direction. 
    """
    pass


def FBXImportSkeletonDefinitionsAs(*args, **kwargs):
    """
    
    """
    pass


def FloatSelectedPondObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostFoam(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddToCurrentScene3dsMax(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetCutSewUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportConstraints(*args, **kwargs):
    """
    
    """
    pass


def timeEditorBakeClips(bakeToClip=None, btc=None, clipId=None, id=None, combineLayers=None, cl=None, forceSampling=None, fs=None, keepOriginalClip=None, koc=None, path=None, pt=None, sampleBy=None, sb=None, targetTrackIndex=None, tti=None, targetTracksNode=None, ttn=None, *args, **kwargs):
    """
    This command is used to bake Time Editor clips and to blend them into a single clip. 
    """
    pass


def AlignCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def evaluator(clusters=None, cl=None, configuration=None, c=None, enable=None, en=None, info=None, i=None, name=None, n=None, nodeType=None, nt=None, nodeTypeChildren=None, ntc=None, priority=None, p=None, valueName=None, vn=None, *args, **kwargs):
    """
    Handles turning on and off custom evaluation overrides used by the evaluation manager. Query no flag to see all available custom evaluators. Query the 'enable' flag to check if an evaluator is currently enabled. If the 'name' flag isn't used then return all modes and their current active state.
    """
    pass


def PostInfinityLinear(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artSelectCtx(accopacity=None, aco=None, addselection=None, ads=None, afterStrokeCmd=None, asc=None, beforeStrokeCmd=None, bsc=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clear=None, clr=None, dragSlider=None, dsl=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, importthreshold=None, ift=None, lowerradius=None, lr=None, mappressure=None, mp=None, name=None, n=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, reflection=None, rn=None, reflectionaxis=None, ra=None, selectall=None, sal=None, selectop=None, sop=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toggleall=None, tal=None, unselectall=None, ual=None, usepressure=None, up=None, *args, **kwargs):
    """
    This command is used to select/deselect/toggle components on selected surfaces using a brush interface (Maya Artisan). Since, it selects components of the surface, it only works in the component mode. 
    """
    pass


def timeEditorClipOffset(applyToAllRoots=None, atr=None, clipId=None, id=None, matchClipId=None, mci=None, matchDstTime=None, mdt=None, matchObj=None, mob=None, matchOffsetRot=None, mor=None, matchOffsetTrans=None, mot=None, matchPath=None, mpt=None, matchRotOp=None, mro=None, matchSrcTime=None, mst=None, matchTransOp=None, mto=None, offsetTransform=None, oft=None, path=None, pt=None, resetMatch=None, rsm=None, resetMatchPath=None, rmp=None, rootObj=None, rob=None, upVectorX=None, upx=None, upVectorY=None, upy=None, upVectorZ=None, upz=None, *args, **kwargs):
    """
    This command is used to compute an offset to apply on a source clip in order to automatically align it to a destination clip at a specified match element. For this command to work, offset objects must be specified for the character.
    """
    pass


def FBXImportSetTake(*args, **kwargs):
    """
    
    """
    pass


def HypershadeGridToggleVisibility(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyConvertToRingAndSplit(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ThreePointArcToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WireDropoffLocatorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishParentAnchor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BrushPresetBlend(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PencilCurveToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportConvertUnitString(*args, **kwargs):
    """
    
    """
    pass


def CreateFluidCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def toolButton(allowMultipleTools=None, amt=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, collection=None, cl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, ltVersion=None, lt=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, onCommand=None, onc=None, parent=None, p=None, popupIndicatorVisible=None, piv=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, select=None, sl=None, style=None, st=None, tool=None, t=None, toolArray=None, ta=None, toolCount=None, tc=None, toolImage1=None, ti1=None, toolImage2=None, ti2=None, toolImage3=None, ti3=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a toolButton that is added to the most recently created tool button collection unless the 
    """
    pass


def findKeyframe(animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, curve=None, c=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, shape=None, s=None, time=None, t=None, timeSlider=None, ts=None, which=None, w=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def PolygonPasteOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nonLinear(after=None, af=None, afterReference=None, ar=None, autoParent=None, ap=None, before=None, bf=None, commonParent=None, cp=None, defaultScale=None, ds=None, deformerTools=None, dt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, split=None, sp=None, type=None, typ=None, *args, **kwargs):
    """
    This command creates a functional deformer of the specified type that will deform the selected objects.The deformer consists of three nodes: The deformer driver that gets connected to the history of the selected objects, the deformer handle transform that controls position and orientation of the axis of the deformation and the deformer handle that maintains the deformation parameters. The type of the deformer handle shape created depends on the specified type of the deformer.The deformer handle will be positioned at the center of the selected objects' bounding box and oriented to match the orientation of the leading object in the selection list.The deformer handle transform will be selected when the command is completed. 
    """
    pass


def shot(audio=None, aud=None, clip=None, cl=None, clipDuration=None, cd=None, clipOpacity=None, co=None, clipSyncState=None, css=None, clipZeroOffset=None, czo=None, copy=None, c=None, createCustomAnim=None, cca=None, currentCamera=None, cc=None, customAnim=None, ca=None, deleteCustomAnim=None, dca=None, determineTrack=None, dt=None, endTime=None, et=None, favorite=None, fav=None, flag1=None, f1=None, flag10=None, f10=None, flag11=None, f11=None, flag12=None, f12=None, flag2=None, f2=None, flag3=None, f3=None, flag4=None, f4=None, flag5=None, f5=None, flag6=None, f6=None, flag7=None, f7=None, flag8=None, f8=None, flag9=None, f9=None, hasCameraSet=None, hcs=None, hasStereoCamera=None, hsc=None, linkAudio=None, la=None, lock=None, lck=None, mute=None, m=None, paste=None, p=None, pasteInstance=None, pi=None, postHoldTime=None, pst=None, preHoldTime=None, prt=None, scale=None, s=None, selfmute=None, sm=None, sequenceDuration=None, sqd=None, sequenceEndTime=None, set=None, sequenceStartTime=None, sst=None, shotName=None, sn=None, sourceDuration=None, sd=None, startTime=None, st=None, track=None, trk=None, transitionInLength=None, til=None, transitionInType=None, tit=None, transitionOutLength=None, tol=None, transitionOutType=None, tot=None, unlinkAudio=None, ula=None, *args, **kwargs):
    """
    Use this command to create a shot node or manipulate that node.
    """
    pass


def moveKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, moveFunction=None, mf=None, name=None, n=None, option=None, o=None, *args, **kwargs):
    """
    This command creates a context which may be used to move keyframes within the graph editor 
    """
    pass


def CreateDiskCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SymmetrizeUVBrushSizeOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorFrameAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKInitAxis(*args, **kwargs):
    """
    
    """
    pass


def CreateSpotLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SoloLastOutput(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def resampleFluid(resampleDepth=None, rd=None, resampleHeight=None, rh=None, resampleWidth=None, rw=None, *args, **kwargs):
    """
    A command to extend the fluid grid, keeping the voxels the same size, and keeping the existing contents of the fluid in the same place. Note that the fluid transform is also modified to make this possible.
    """
    pass


def XgmSplinePresetImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusDisplayTransformNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickAcknowledgeCallback(*args, **kwargs):
    """
    
    """
    pass


def SendAsNewSceneMotionBuilder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideClusters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewBottom(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GeometryConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mtkShrinkWrap(*args, **kwargs):
    """
    
    """
    pass


def ExtendCurveOnSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmModifierGuideOp(*args, **kwargs):
    """
    
    """
    pass


def CreateSculptDeformer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CameraModeToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePoseOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecreaseGammaFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def myTestCmd(*args, **kwargs):
    """
    
    """
    pass


def dR_tweakPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EmitFluidFromObjectOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProductInformation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def namespaceInfo(absoluteName=None, an=None, baseName=None, bn=None, currentNamespace=None, cur=None, dagPath=None, dp=None, fullName=None, fn=None, internal=None, int=None, isRootNamespace=None, ir=None, listNamespace=None, ls=None, listOnlyDependencyNodes=None, lod=None, listOnlyNamespaces=None, lon=None, parent=None, p=None, recurse=None, r=None, shortName=None, sn=None, *args, **kwargs):
    """
    This command displays information about a namespace. The target namespace can optionally be specified on the command line. If no namespace is specified, the command will display information about the current namespace. 
    """
    pass


def ToggleWireframeInArtisan(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectComponentToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def skinPercent(ignoreBelow=None, ib=None, normalize=None, nrm=None, pruneWeights=None, prw=None, relative=None, r=None, resetToDefault=None, rtd=None, transform=None, t=None, transformMoveWeights=None, tmw=None, transformValue=None, tv=None, value=None, v=None, zeroRemainingInfluences=None, zri=None, *args, **kwargs):
    """
    This command edits and queries the weight values on members of a skinCluster node, given as the first argument. If no object components are explicitly mentioned in the command line, the current selection list is used. 
    """
    pass


def CreatePointLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenPropertyEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurlCurvesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCameraAim(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BlindDataEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetEditionModeScale(*args, **kwargs):
    """
    
    """
    pass


def OffsetSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapPointToPointOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artSetPaint(*args, **kwargs):
    """
    
    """
    pass


def dR_multiCutPointCmd(*args, **kwargs):
    """
    
    """
    pass


def SelectAllNURBSSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PanZoomTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMeshMaps(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleRangeSlider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeAdditiveGraphingMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySphere(axis=None, ax=None, createUVs=None, cuv=None, radius=None, r=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The sphere command creates a new polygonal sphere. 
    """
    pass


def PaintEffectsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeConvertPSDToFileTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DollyTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def loadPlugin(addCallback=None, ac=None, allPlugins=None, a=None, name=None, n=None, quiet=None, qt=None, removeCallback=None, rc=None, *args, **kwargs):
    """
    Load plug-ins into Maya. The parameter(s) to this command are either the names or pathnames of plug-in files.The convention for naming plug-ins is to use a .so extension on Linux, a .mll extension on Windows and .bundle extension on Mac OS X. If no extension is provided then the default extension for the platform will be used. To load a Python plugin you must explicitly supply the '.py' extension. 
    """
    pass


def setUITemplate(popTemplate=None, ppt=None, pushTemplate=None, pst=None, *args, **kwargs):
    """
    This command sets the current(default) command template for the ELF commands.The special name NONE can be used to set no templates current. See "uiTemplate" command also. 
    """
    pass


def boundary(endPoint=None, ep=None, endPointTolerance=None, ept=None, order=None, order=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command produces a boundary surface given 3 or 4 curves. This resulting boundary surface passes through two of the given curves in one direction, while in the other direction the shape is defined by the remaining curve(s).If the "endPoint" option is on, then the curve endpoints must touch before a surface will be created.This is the usual situation where a boundary surface is useful. 
    """
    pass


def SelectPreviousObjectsMudbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def flowLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, columnSpacing=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, vertical=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, wrap=None, wr=None, *args, **kwargs):
    """
    This command creates a layout that arranges its children along a single line (either horizontal or vertical). Depending on the value of the -wrap boolean flag (default is false), if the layout's parent cannot fit all the children on one line, the children will either wrap onto the next line(s) or be truncated. 
    """
    pass


def xgmBakeGuideToUVSpace(*args, **kwargs):
    """
    
    """
    pass


def radioCollection(collectionItemArray=None, cia=None, defineTemplate=None, dt=None, exists=None, ex=None, gl=None, gl=None, numberOfCollectionItems=None, nci=None, parent=None, p=None, select=None, sl=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a radio button collection. Collections are parented to the current default layout if no parent is specified with the 
    """
    pass


def floatFieldGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enable1=None, en1=None, enable2=None, en2=None, enable3=None, en3=None, enable4=None, en4=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfFields=None, nf=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, showTrailingZeros=None, tze=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, value1=None, v1=None, value2=None, v2=None, value3=None, v3=None, value4=None, v4=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def flushThumbnailCache(*args, **kwargs):
    """
    
    """
    pass


def MakeFluidCollideOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fontAttributes(*args, **kwargs):
    """
    
    """
    pass


def nurbsCube(axis=None, ax=None, degree=None, d=None, heightRatio=None, hr=None, lengthRatio=None, lr=None, patchesU=None, u=None, patchesV=None, v=None, pivot=None, p=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The nurbsCube command creates a new NURBS Cube made up of six planes. It creates an unit cube with center at origin by default. 
    """
    pass


def undoInfo(chunkName=None, cn=None, closeChunk=None, cck=None, infinity=None, infinity=None, length=None, l=None, openChunk=None, ock=None, printQueue=None, pq=None, redoName=None, rn=None, redoQueueEmpty=None, rqe=None, state=None, st=None, stateWithoutFlush=None, swf=None, undoName=None, un=None, undoQueueEmpty=None, uqe=None, *args, **kwargs):
    """
    This command controls the undo/redo parameters. 
    """
    pass


def polyBevel3(angleTolerance=None, at=None, autoFit=None, af=None, offset=None, o=None, offsetAsFraction=None, oaf=None, roundness=None, r=None, segments=None, sg=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Bevel edges.
    """
    pass


def OneClickGetContactingAppName(*args, **kwargs):
    """
    
    """
    pass


def SquareSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def circle(center=None, c=None, centerX=None, cx=None, centerY=None, cy=None, centerZ=None, cz=None, degree=None, d=None, first=None, fp=None, firstPointX=None, fpx=None, firstPointY=None, fpy=None, firstPointZ=None, fpz=None, fixCenter=None, fc=None, normal=None, nr=None, normalX=None, nrx=None, normalY=None, nry=None, normalZ=None, nrz=None, radius=None, r=None, sections=None, s=None, sweep=None, sw=None, tolerance=None, tol=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The circle command creates a circle or partial circle (arc)
    """
    pass


def assembly(active=None, a=None, activeLabel=None, al=None, canCreate=None, cc=None, createOptionBoxProc=None, cob=None, createRepresentation=None, cr=None, defaultType=None, dt=None, deleteRepresentation=None, dr=None, deregister=None, d=None, input=None, input=None, isAType=None, isa=None, isTrackingMemberEdits=None, ite=None, label=None, lbl=None, listRepTypes=None, lrt=None, listRepTypesProc=None, lrp=None, listRepresentations=None, lr=None, listTypes=None, lt=None, name=None, n=None, newRepLabel=None, nrl=None, postCreateUIProc=None, aoc=None, proc=None, prc=None, renameRepresentation=None, rnr=None, repLabel=None, rl=None, repName=None, rnm=None, repNamespace=None, rns=None, repPostCreateUIProc=None, poc=None, repPreCreateUIProc=None, pec=None, repType=None, rt=None, repTypeLabel=None, rtl=None, repTypeLabelProc=None, rtp=None, type=None, typ=None, *args, **kwargs):
    """
    Command to register assemblies for the scene assembly framework, to create them, and to edit and query them. Assembly nodes are DAG nodes, and are therefore shown in the various DAG editors (Outliner, Hypergraph, Node Editor). At assembly creation time, the node name defaults to the node type name. The assembly command can create any node that is derived from the assembly node base class.It also acts as a registry of these types, so that various scripting callbacks can be defined and registered with the assembly command.These callbacks are invoked by Maya during operations on assembly nodes, and can be used to customize behavior. 
    """
    pass


def FBXImportSkins(*args, **kwargs):
    """
    
    """
    pass


def createAttrPatterns(patternDefinition=None, pd=None, patternFile=None, pf=None, patternType=None, pt=None, *args, **kwargs):
    """
    Create a new instance of an attribute pattern given a pattern type (e.g. XML) and a string or data file containing the description of the attribute tree in the pattern's format.
    """
    pass


def BakeDeformerTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bakeResults(animation=None, an=None, attribute=None, at=None, bakeOnOverrideLayer=None, bol=None, controlPoints=None, cp=None, destinationLayer=None, dl=None, disableImplicitControl=None, dic=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, minimizeRotation=None, mr=None, oversamplingRate=None, osr=None, preserveOutsideKeys=None, pok=None, removeBakedAttributeFromLayer=None, ral=None, resolveWithoutLayer=None, rwl=None, sampleBy=None, sb=None, shape=None, s=None, simulation=None, sm=None, smart=None, sr=None, sparseAnimCurveBake=None, sac=None, time=None, t=None, *args, **kwargs):
    """
    This command allows the user to replace a chain of dependency nodes which define the value for an attribute with a single animation curve. Command allows the user to specify the range and frequency of sampling. 
    """
    pass


def textField(alwaysInvokeEnterCommandOnReturn=None, aie=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, disableButtons=None, db=None, disableClearButton=None, dcb=None, disableHistoryButton=None, dhb=None, docTag=None, dtg=None, dragCallback=None, dgc=None, drawInactiveFrame=None, dif=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, enterCommand=None, ec=None, exists=None, ex=None, fileName=None, fi=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, insertText=None, it=None, insertionPosition=None, ip=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, placeholderText=None, pht=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, receiveFocusCommand=None, rfc=None, searchField=None, sf=None, text=None, tx=None, textChangedCommand=None, tcc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a text field control.
    """
    pass


def polyMoveFacetUV(axisLen=None, l=None, axisLenX=None, lx=None, axisLenY=None, ly=None, pivot=None, pvt=None, pivotU=None, pvu=None, pivotV=None, pvv=None, random=None, ran=None, rotationAngle=None, ra=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, translate=None, t=None, translateU=None, tu=None, translateV=None, tv=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Modifies the map by moving all UV values associated with the selected face(s). 
    """
    pass


def FBXImportForcedFileAxis(*args, **kwargs):
    """
    
    """
    pass


def PanePop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsSpline(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def thumbnailCaptureComponent(capture=None, c=None, capturedFrameCount=None, cfc=None, closeCurrentSession=None, ccs=None, delete=None, d=None, endFrame=None, ef=None, fileDialogCallback=None, fdc=None, isSessionOpened=None, iso=None, launchedFromOptionsBox=None, lfo=None, previewPath=None, pp=None, removeProjectThumbnail=None, rpt=None, save=None, s=None, startFrame=None, sf=None, *args, **kwargs):
    """
    This command is used to generate a thumbnail/playblast sequence from the scene. 
    """
    pass


def xgmExportToP3D(*args, **kwargs):
    """
    
    """
    pass


def OffsetEdgeLoopTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRemoveTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PruneSculpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BendCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonSphere(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def agFormatOut(*args, **kwargs):
    """
    
    """
    pass


def SubdivProxy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def transformLimits(enableRotationX=None, erx=None, enableRotationY=None, ery=None, enableRotationZ=None, erz=None, enableScaleX=None, esx=None, enableScaleY=None, esy=None, enableScaleZ=None, esz=None, enableTranslationX=None, etx=None, enableTranslationY=None, ety=None, enableTranslationZ=None, etz=None, remove=None, rm=None, rotationX=None, rx=None, rotationY=None, ry=None, rotationZ=None, rz=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translationX=None, tx=None, translationY=None, ty=None, translationZ=None, tz=None, *args, **kwargs):
    """
    The transformLimits command allows us to set, edit, or query the limits of the transformation that can be applied to objects. 
    """
    pass


def SetMeshWaxTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyEditEdgeFlowOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewFit(allObjects=None, all=None, animate=None, an=None, center=None, c=None, fitFactor=None, f=None, namespace=None, ns=None, *args, **kwargs):
    """
    The viewFit command positions the specified camera so its point-of-view contains all selected objects other than itself. If no objects are selected, everything is fit to the view (excepting cameras, lights, and sketching plannes). The fit-factor, if specified, determines how much of the view should be filled. If a camera is not specified, the camera in the active view will be used. After the camera is moved, its center of interest is set to the center of the bounding box of the objects. 
    """
    pass


def AddInBetweenTargetShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MirrorCutPolygonGeometryOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowAllComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pasteKey(animLayer=None, al=None, animation=None, an=None, attribute=None, at=None, clipboard=None, cb=None, connect=None, c=None, copies=None, cp=None, float=None, f=None, floatOffset=None, fo=None, includeUpperBound=None, iub=None, index=None, index=None, matchByName=None, mn=None, option=None, o=None, time=None, t=None, timeOffset=None, to=None, valueOffset=None, vo=None, *args, **kwargs):
    """
    The pasteKey command pastes curve segment hierarchies from the clipboard onto other objects or curves. If the object hierarchy from which the curve segments were copied or cut does not match the object hierarchy being pasted to, pasteKey will paste as much as it can match in the hierarchy.If animation from only one object is on the clipboard, it will be pasted to each of the target objects. If animation from more than one object is on the clipboard, selection list order determines what animation is pasted to which object. 
    """
    pass


def TrackTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClusterCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportShowUI(*args, **kwargs):
    """
    
    """
    pass


def RenderPassSetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectTextures(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PointConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def removeJoint(*args, **kwargs):
    """
    This command will remove the selected joint or the joint given at the command line from the skeleton. 
    """
    pass


def IncreaseManipulatorSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectVertexMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideFollicles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintAttrToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishAttributesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshRelaxTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveFillet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExport(*args, **kwargs):
    """
    
    """
    pass


def DeactivateGlobalScreenSliderModeMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderGlobalsNode(renderQuality=None, rq=None, renderResolution=None, rr=None, *args, **kwargs):
    """
    The renderGlobalsNode creates a render globals node and registers it with the model. The createNode command will not register nodes of this type correctly. 
    """
    pass


def multiProfileBirailSurface(tangentContinuityProfile1=None, tp1=None, tangentContinuityProfile2=None, tp2=None, transformMode=None, tm=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The cmd creates a railed surface by sweeping the profiles using two rail curves. The two rails are the last two arguments. For examples, if 5 curves are specified, they will correspond to "curve1" "curve2" "curve3" "rail1" "rail2". 
    """
    pass


def objectTypeUI(isType=None, i=None, listAll=None, la=None, superClasses=None, sc=None, *args, **kwargs):
    """
    This command returns the type of UI element such as button, sliders, etc. 
    """
    pass


def gridLayout(allowEmptyCells=None, aec=None, annotation=None, ann=None, autoGrow=None, ag=None, backgroundColor=None, bgc=None, cellHeight=None, ch=None, cellWidth=None, cw=None, cellWidthHeight=None, cwh=None, childArray=None, ca=None, columnsResizable=None, cr=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, gridOrder=None, go=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfColumns=None, nc=None, numberOfPopupMenus=None, npm=None, numberOfRows=None, nr=None, numberOfRowsColumns=None, nrc=None, parent=None, p=None, popupMenuArray=None, pma=None, position=None, pos=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This layout arranges children in a grid fashion where every cell in the grid is the same size.You may specify the number of rows and columns as well as the width and height of the grid cells. 
    """
    pass


def ExtractFaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolyNonPlanarFaceDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyUpperRadiusPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerPointEmissionRates(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetEnumCount(*args, **kwargs):
    """
    
    """
    pass


def parent(absolute=None, a=None, addObject=None, add=None, noConnections=None, nc=None, noInvScale=None, nis=None, relative=None, r=None, removeObject=None, rm=None, shape=None, s=None, world=None, w=None, *args, **kwargs):
    """
    This command parents (moves) objects under a new group, removes objects from an existing group, or adds/removes parents. 
    """
    pass


def showManipCtx(currentNodeName=None, cnn=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, incSnap=None, incSnap=None, incSnapRelative=None, isr=None, incSnapUI=None, isu=None, incSnapValue=None, isv=None, lockSelection=None, ls=None, name=None, n=None, toggleIncSnap=None, tis=None, toolFinish=None, tf=None, toolStart=None, ts=None, *args, **kwargs):
    """
    This command can be used to create a show manip context.The show manip context will display manips for all selected objects that have valid manips defined for them. 
    """
    pass


def dgfilter(attribute=None, atr=None, list=None, l=None, logicalAnd=None, logicalAnd=None, logicalNot=None, logicalNot=None, logicalOr=None, logicalOr=None, name=None, n=None, node=None, nd=None, nodeType=None, nt=None, plug=None, p=None, *args, **kwargs):
    """
    The 
    """
    pass


def BoundaryOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptSurfacesToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyTorus(axis=None, ax=None, createUVs=None, cuv=None, radius=None, r=None, sectionRadius=None, sr=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, texture=None, tx=None, twist=None, tw=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The torus command creates a new polygonal torus.
    """
    pass


def paramDimContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Command used to register the paramDimCtx tool.
    """
    pass


def connectControl(fileName=None, fi=None, index=None, index=None, preventContextualMenu=None, pcm=None, preventOverride=None, po=None, *args, **kwargs):
    """
    This command attaches a UI widget, specified as the first argument, to one or more dependency node attributes. The attributes/nodes don't have to exist yet, they will get looked up as needed. With no flag specified, this command works on these kinds of controls: floatField, floatScrollBar, floatSlider, intField, intScrollBar, intSlider, floatFieldGrp, intFieldGrp, checkBox, radioCollection, and optionMenu. With the 
    """
    pass


def xgmSculptLayerInit(*args, **kwargs):
    """
    
    """
    pass


def SelectPolygonToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateAnnotateNode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HidePlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SlideEdgeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleAssignedMaterials(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attachCurve(blendBias=None, bb=None, blendKnotInsertion=None, bki=None, keepMultipleKnots=None, kmk=None, method=None, m=None, parameter=None, p=None, reverse1=None, rv1=None, reverse2=None, rv2=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This attach command is used to attach curves. Once the curves are attached, there will be multiple knots at the joined point(s). These can be kept or removed if the user wishes. 
    """
    pass


def keyTangent(absolute=None, a=None, animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, float=None, f=None, g=None, g=None, hierarchy=None, hi=None, inAngle=None, ia=None, inTangentType=None, itt=None, inWeight=None, iw=None, includeUpperBound=None, iub=None, index=None, index=None, ix=None, ix=None, iy=None, iy=None, lock=None, l=None, outAngle=None, oa=None, outTangentType=None, ott=None, outWeight=None, ow=None, ox=None, ox=None, oy=None, oy=None, pluginTangentTypes=None, ptt=None, relative=None, r=None, shape=None, s=None, stepAttributes=None, sa=None, time=None, t=None, unify=None, uni=None, weightLock=None, wl=None, weightedTangents=None, wt=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def fluidAppendOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def VolumeAxisOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryExportCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def displayRGBColor(create=None, c=None, hueSaturationValue=None, hsv=None, list=None, l=None, resetToFactory=None, rf=None, resetToSaved=None, rs=None, *args, **kwargs):
    """
    This command changes or queries the display color for anything in the application that allows the user to set its color. These colors are part of the UI and not part of the saved data for a model.This command is not undoable. 
    """
    pass


def keyframe(absolute=None, a=None, adjustBreakdown=None, abd=None, animation=None, an=None, attribute=None, at=None, breakdown=None, bd=None, clipTime=None, ct=None, controlPoints=None, cp=None, eval=None, ev=None, float=None, f=None, floatChange=None, fc=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, indexValue=None, iv=None, keyframeCount=None, kc=None, lastSelected=None, lsl=None, name=None, n=None, option=None, o=None, relative=None, r=None, selected=None, sl=None, shape=None, s=None, tickDrawSpecial=None, tds=None, time=None, t=None, timeChange=None, tc=None, valueChange=None, vc=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def toolPropertyWindow(field=None, fld=None, helpButton=None, hb=None, icon=None, icn=None, inMainWindow=None, imw=None, location=None, loc=None, noviceMode=None, nm=None, resetButton=None, rb=None, selectCommand=None, sel=None, showCommand=None, shw=None, *args, **kwargs):
    """
    End users should only call this command as 1. a query (in the custom tool property sheet code) or 2. with no arguments to create the default tool property sheet.The more complex uses of it are internal. 
    """
    pass


def PFXUVSetLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def delete(all=None, all=None, attribute=None, at=None, channels=None, c=None, constraints=None, cn=None, constructionHistory=None, ch=None, controlPoints=None, cp=None, expressions=None, e=None, hierarchy=None, hi=None, inputConnectionsAndNodes=None, icn=None, shape=None, s=None, staticChannels=None, sc=None, timeAnimationCurves=None, tac=None, unitlessAnimationCurves=None, uac=None, *args, **kwargs):
    """
    This command is used to delete selected objects, or all objects, or objects specified along with the command. Flags are available to filter the type of objects that the command acts on. 
    """
    pass


def expression(alwaysEvaluate=None, ae=None, name=None, n=None, object=None, o=None, safe=None, sf=None, shortNames=None, sn=None, string=None, s=None, timeDependent=None, td=None, unitConversion=None, uc=None, *args, **kwargs):
    """
    This command describes an expression that belongs to the current scene. The expression is a block of code of unlimited length with a C-like syntax that can perform conversions, mathematical operations, and logical decision making on any numeric attribute(s) in the scene.One expression can read and alter any number of numeric attributes.Theoretically, every expression in a scene can be combined into one long expression, but it is recommended that they are separated for ease of use and editing, as well as efficiency.
    """
    pass


def DeleteAllNParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreloadReferenceEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IKSplineHandleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveSmoothnessMedium(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProportionalModificationTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def connectionInfo(destinationFromSource=None, dfs=None, getExactDestination=None, ged=None, getExactSource=None, ges=None, getLockedAncestor=None, gla=None, isDestination=None, id=None, isExactDestination=None, ied=None, isExactSource=None, ies=None, isLocked=None, il=None, isSource=None, isSource=None, sourceFromDestination=None, sfd=None, *args, **kwargs):
    """
    The 
    """
    pass


def PaintEffectsPanel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def color(rgbColor=None, rgb=None, userDefined=None, ud=None, *args, **kwargs):
    """
    This command sets the dormant wireframe color of the specified objects to be their class color or if the -ud/userDefined flag is specified, one of the user defined colors. The -rgb/rgbColor flags can be specified if the user requires floating point RGB colors. 
    """
    pass


def dR_hypergraphTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyHelix(axis=None, ax=None, coils=None, c=None, createUVs=None, cuv=None, direction=None, d=None, height=None, h=None, radius=None, r=None, subdivisionsAxis=None, sa=None, subdivisionsCaps=None, sc=None, subdivisionsCoil=None, sco=None, texture=None, tx=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The polyHelix command creates a new polygonal helix. 
    """
    pass


def bakeClip(blend=None, b=None, clipIndex=None, ci=None, keepOriginals=None, k=None, name=None, n=None, *args, **kwargs):
    """
    This command is used to bake clips and blends into a single clip.
    """
    pass


def HIKToggleReleasePinning(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dgtimer(combineType=None, ct=None, hide=None, hi=None, hierarchy=None, h=None, maxDisplay=None, m=None, name=None, n=None, noHeader=None, nh=None, outputFile=None, o=None, overhead=None, oh=None, rangeLower=None, rgl=None, rangeUpper=None, rgu=None, reset=None, r=None, returnCode=None, rc=None, returnType=None, rt=None, show=None, sh=None, sortMetric=None, sm=None, sortType=None, st=None, threshold=None, th=None, timerOff=None, off=None, timerOn=None, on=None, trace=None, tr=None, type=None, t=None, uniqueName=None, un=None, updateHeatMap=None, uhm=None, *args, **kwargs):
    """
    This command measures dependency graph node performance by managing timers on a per-node basis. Logically, each DG node has a timer associated with it which records the amount of real time spent in various operations on its plugs. The time measurement includes the cost of copying data to the node on behalf of the operation, MEL commands executed by an expression contained in an expression invoked by the node, and includes any wait time such as when a fileTexture node loads an image file from disk. Most DG operations are reported including compute, draw, and dirty propagation. 
    """
    pass


def hwRender(acceleratedMultiSampleSupport=None, ams=None, activeTextureCount=None, atc=None, camera=None, cam=None, currentFrame=None, cf=None, currentView=None, cv=None, edgeAntiAliasing=None, eaa=None, fixFileNameNumberPattern=None, fnp=None, frame=None, f=None, fullRenderSupport=None, frs=None, height=None, h=None, imageFileName=None, ifn=None, layer=None, l=None, limitedRenderSupport=None, lrs=None, lowQualityLighting=None, lql=None, noRenderView=None, nrv=None, notWriteToFile=None, nwf=None, printGeometry=None, pg=None, renderHardwareName=None, rhw=None, renderRegion=None, reg=None, renderSelected=None, rs=None, textureResolution=None, res=None, width=None, w=None, writeAlpha=None, a=None, writeDepth=None, d=None, *args, **kwargs):
    """
    Renders an image or a sequence using the hardware rendering engine
    """
    pass


def HypershadeGraphDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshSmoothTargetToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GpuCacheRefreshAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectSimilar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mtkQuadDrawPoint(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorKeepTransitionsToggleRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sysFile(copy=None, cp=None, delete=None, delete=None, makeDir=None, md=None, move=None, mov=None, removeEmptyDir=None, red=None, rename=None, ren=None, *args, **kwargs):
    """
    This command provides a system independent way to create a directory or to rename or delete a file. 
    """
    pass


def UnpinSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FreeformFillet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateActiveRigidBodyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BevelPlusOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportSmoothingGroups(*args, **kwargs):
    """
    
    """
    pass


def NURBSSmoothnessRough(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptMeshDeactivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def vnnCompound(addNode=None, an=None, addStatePortUI=None, spu=None, canResetToFactory=None, crf=None, connected=None, cn=None, connectedTo=None, ct=None, connectedToInput=None, cti=None, connectedToOutput=None, cto=None, create=None, c=None, createInputPort=None, cip=None, createOutputPort=None, cop=None, deletePort=None, dp=None, explode=None, ec=None, inputPort=None, ip=None, listNodes=None, ln=None, listPortChildren=None, lpc=None, listPorts=None, lp=None, moveNodeIn=None, mi=None, movePort=None, mp=None, nodeType=None, nt=None, outputPort=None, op=None, portDefaultValue=None, pdv=None, publish=None, pub=None, queryIsImported=None, qii=None, queryIsReferenced=None, qir=None, queryMetaData=None, qmd=None, queryPortDataType=None, qpt=None, queryPortDefaultValue=None, qpv=None, queryPortMetaDataValue=None, qpm=None, removeNode=None, rmn=None, renameNode=None, rn=None, renamePort=None, rp=None, resetToFactory=None, rtf=None, saveAs=None, sa=None, setIsReferenced=None, sir=None, setMetaData=None, smd=None, setPortDataType=None, spt=None, setPortMetaDataValue=None, spm=None, specializedTypeName=None, stn=None, *args, **kwargs):
    """
    The 
    """
    pass


def emitter(alongAxis=None, alx=None, aroundAxis=None, arx=None, awayFromAxis=None, afx=None, awayFromCenter=None, afc=None, cycleEmission=None, cye=None, cycleInterval=None, cyi=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, directionalSpeed=None, drs=None, maxDistance=None, mxd=None, minDistance=None, mnd=None, needParentUV=None, nuv=None, normalSpeed=None, nsp=None, position=None, pos=None, randomDirection=None, rnd=None, rate=None, r=None, scaleRateByObjectSize=None, sro=None, scaleSpeedBySize=None, ssz=None, speed=None, spd=None, speedRandom=None, srn=None, spread=None, sp=None, tangentSpeed=None, tsp=None, torusSectionRadius=None, tsr=None, type=None, typ=None, volumeOffset=None, vof=None, volumeShape=None, vsh=None, volumeSweep=None, vsw=None, *args, **kwargs):
    """
    Creates an emitter object. If object names are provided or if objects are selected, applies the emitter to the named/selected object(s)in the scene.Particles will then be emitted from each. If no objects are named or selected, or if the -pos option is specified, creates a positional emitter. 
    """
    pass


def EnterEditModePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRefreshFileListing(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def render(abortMissingTexture=None, amt=None, batch=None, b=None, keepPreImage=None, kpi=None, layer=None, l=None, nglowpass=None, ngl=None, nshadows=None, nsh=None, replace=None, rep=None, xresolution=None, x=None, yresolution=None, y=None, *args, **kwargs):
    """
    The render command is used to start off a MayaSoftware rendering session of the currently active camera. If a rendering is already in progress, then this command stops the rendering. This command is not undoable. 
    """
    pass


def fileInfo(remove=None, rm=None, *args, **kwargs):
    """
    fileInfo provides a mechanism for keeping information related to a Maya scene file. Each invocation of the command consists of a keyword/value pair, where both the keyword and the associated value are strings. The command may be invoked multiple times with different keywords. Maya emits this command several times into each file it creates, primarily to provide details such as which productization or packaging of the program was used (e.g "Complete", "Unlimited"), the specific version and build identification that was run, and the operating system on which it was run. Maya may make use of this information when present in files it reads. All keyword/value pairs defined by use of the fileInfo command are preserved when Maya saves the scene, whether to an ASCII or binary file.
    """
    pass


def Create2DContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSelectDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintReduceWeightsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkIn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_bevelPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshGrabUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeFluidCollide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewGridTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorManagementConvert(toDisplaySpace=None, tds=None, *args, **kwargs):
    """
    This command can be used to convert rendering (a.k.a. working) space color values to display space color values. This is useful if you create custom UI with colors painted to screen, where you need to handle color management yourself. The current view transform set in the Color Management user preferences will be used.
    """
    pass


def SelectAllGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def floatSliderButtonGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, buttonCommand=None, bc=None, buttonLabel=None, bl=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, field=None, f=None, fieldMaxValue=None, fmx=None, fieldMinValue=None, fmn=None, fieldStep=None, fs=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, sliderStep=None, ss=None, step=None, s=None, symbolButtonCommand=None, sbc=None, symbolButtonDisplay=None, sbd=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def GetToonExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def jointDisplayScale(absolute=None, a=None, ikfk=None, ik=None, *args, **kwargs):
    """
    This action modifies and queries the current display size of skelton joints. The joint display size is controlled by a scale factor; scale factor 1 puts the display size to its default, which is 1 in diameter. With the plain format, the float argument is the factor with respect to the default size. When -a/absolute is used, the float argument refers to the actual diameter of the joint display size. 
    """
    pass


def OptimizeSceneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selConstraintAngle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def componentBox(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, execute=None, exe=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, labelWidth=None, lw=None, manage=None, m=None, maxHeight=None, mh=None, maxWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowHeight=None, rh=None, selectedAttr=None, sla=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a component box, which is sensitive to the active list.It displays certain components of the last node on the active list, and provides a two-way connection to keep the widget up to date. 
    """
    pass


def sound(endTime=None, et=None, file=None, f=None, length=None, l=None, mute=None, m=None, name=None, n=None, offset=None, o=None, sourceEnd=None, se=None, sourceStart=None, ss=None, *args, **kwargs):
    """
    Creates an audio node which can be used with UI commands such as soundControl or timeControl which support sound scrubbing and sound during playback. 
    """
    pass


def DetachSkinOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorToggleSoloSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_movePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmFindAttachment(*args, **kwargs):
    """
    
    """
    pass


def insertJointCtx(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    The command will create an insert joint context. The insert joint tool inserts joints into an existing chain of joints. 
    """
    pass


def xgmParticleRender(*args, **kwargs):
    """
    
    """
    pass


def CreateCreaseSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicReplace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SquashOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dataStructure(asFile=None, af=None, asString=None, asString=None, dataType=None, dt=None, format=None, fmt=None, listMemberNames=None, lmn=None, name=None, n=None, remove=None, rem=None, removeAll=None, ral=None, *args, **kwargs):
    """
    
    """
    pass


def DeleteAllCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def profiler(addCategory=None, a=None, allCategories=None, ac=None, bufferSize=None, b=None, categoryIndex=None, ci=None, categoryIndexToName=None, cin=None, categoryName=None, cn=None, categoryNameToIndex=None, cni=None, categoryRecording=None, cr=None, clearAllMelInstrumentation=None, cam=None, colorIndex=None, coi=None, eventCPUId=None, eci=None, eventCategory=None, eca=None, eventColor=None, eco=None, eventCount=None, ec=None, eventDescription=None, ed=None, eventDuration=None, edu=None, eventIndex=None, ei=None, eventName=None, en=None, eventStartTime=None, et=None, eventThreadId=None, eti=None, instrumentMel=None, instrumentMel=None, load=None, l=None, output=None, o=None, procedureDescription=None, pd=None, procedureName=None, pn=None, removeCategory=None, rc=None, reset=None, r=None, sampling=None, s=None, signalEvent=None, sig=None, signalMelEvent=None, sim=None, *args, **kwargs):
    """
    The profiler is used to record timing information from key events within Maya, as an aid in tuning the performance of scenes, scripts and plug-ins. User written plug-ins and Python scripts can also generate profiling information for their own code through the MProfilingScope and MProfiler classes in the API. 
    """
    pass


def columnLayout(adjustableColumn=None, adj=None, annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, columnAlign=None, cal=None, columnAttach=None, cat=None, columnOffset=None, co=None, columnWidth=None, cw=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowSpacing=None, rs=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a layout that arranges its children in a single column. 
    """
    pass


def dR_selectModeHybrid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypergraphWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LightningOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def u3dAutoSeam(*args, **kwargs):
    """
    
    """
    pass


def HideManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReducePolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texLatticeDeformContext(envelope=None, ev=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, latticeColumns=None, lc=None, latticeRows=None, lr=None, name=None, n=None, snapPixelMode=None, spm=None, useBoundingRect=None, ubr=None, *args, **kwargs):
    """
    This command creates a context which may be used to deform UV maps with lattice manipulator.This context only works in the texture UV editor. 
    """
    pass


def RepeatLast(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmUISelectionSync(*args, **kwargs):
    """
    
    """
    pass


def CreateBifrostAero(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGuideSculptContext(*args, **kwargs):
    """
    
    """
    pass


def skinBindCtx(about=None, a=None, axis=None, ax=None, colorRamp=None, cr=None, currentInfluence=None, ci=None, displayInactiveMode=None, di=None, displayNormalized=None, dn=None, exists=None, ex=None, falloffCurve=None, fc=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, symmetry=None, s=None, tolerance=None, t=None, *args, **kwargs):
    """
    This command creates a tool that can be used to edit volumes from an interactive bind. 
    """
    pass


def assignCommand(addDivider=None, ad=None, altModifier=None, alt=None, annotation=None, ann=None, command=None, c=None, commandModifier=None, cmd=None, ctrlModifier=None, ctl=None, data1=None, da1=None, data2=None, da2=None, data3=None, da3=None, delete=None, d=None, dividerString=None, ds=None, factorySettings=None, fs=None, index=None, i=None, keyString=None, k=None, keyUp=None, kup=None, name=None, n=None, numDividersPreceding=None, ndp=None, numElements=None, num=None, optionModifier=None, opt=None, sortByKey=None, sbk=None, sourceUserCommands=None, suc=None, *args, **kwargs):
    """
    This command allows the user to assign hotkeys and manipulate the internal array of named command objects. Each object in the array has an 1-based index which is used for referencing. Under expected usage you should not need to use this command directly as the Hotkey Editor may be used to assign hotkeys. 
    """
    pass


def keyframeRegionSetKeyCtx(breakdown=None, bd=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to set keys within the keyframe region of the dope sheet editor 
    """
    pass


def FillHole(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToShellBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LayoutUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cluster(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, bindState=None, bs=None, deformerTools=None, dt=None, envelope=None, en=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, relative=None, rel=None, remove=None, rm=None, resetGeometry=None, rg=None, split=None, sp=None, weightedNode=None, wn=None, *args, **kwargs):
    """
    The cluster command creates a cluster or edits the membership of an existing cluster. The command returns the name of the cluster node upon creation of a new cluster. 
    """
    pass


def RemoveMaterialSoloing(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def displayStats(*args, **kwargs):
    """
    
    """
    pass


def evalNoSelectNotify(*args, **kwargs):
    """
    
    """
    pass


def FBXImportShapes(*args, **kwargs):
    """
    
    """
    pass


def texSculptCacheContext(adjustSize=None, asz=None, adjustStrength=None, ast=None, direction=None, d=None, falloffType=None, ft=None, floodPin=None, fp=None, grabTwist=None, gtw=None, inverted=None, inv=None, mode=None, m=None, sculptFalloffCurve=None, sfc=None, showBrushRingDuringStroke=None, sbr=None, size=None, sz=None, strength=None, st=None, *args, **kwargs):
    """
    This is a tool context command for uv cache sculpting tool.
    """
    pass


def NextManipulatorHandle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyLowerRadiusRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RandomizeShells(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteFBIKBodyPartKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmWidthBrushContext(*args, **kwargs):
    """
    
    """
    pass


def subdivCrease(sharpness=None, sh=None, *args, **kwargs):
    """
    Set the creasing on subdivision mesh edges or mesh points that are on the selection list.
    """
    pass


def TimeEditorCreateGroupFromSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostAccelerator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShowConnectedAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listConnections(connections=None, c=None, destination=None, d=None, exactType=None, et=None, plugs=None, p=None, shapes=None, sh=None, skipConversionNodes=None, scn=None, source=None, s=None, type=None, t=None, *args, **kwargs):
    """
    This command returns a list of all attributes/objects of a specified type that are connected to the given object(s). If no objects are specified then the command lists the connections on selected nodes.
    """
    pass


def u3dLayout(*args, **kwargs):
    """
    
    """
    pass


def ThreeTopSplitViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidReplaceCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def debug(*args, **kwargs):
    """
    
    """
    pass


def LoopBrushAnimationOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def posePanel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, poseEditor=None, pe=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a panel that derives from the base panel class that houses a poseEditor. 
    """
    pass


def ShowRenderingUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ActivateGlobalScreenSlider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGraphAllShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HidePolygonSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateEmptyUVSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCreatePSDFile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menuSet(addMenu=None, am=None, allMenuSets=None, ams=None, currentMenuSet=None, cms=None, exists=None, ex=None, hotBoxVisible=None, hbv=None, insertMenu=None, im=None, label=None, l=None, menuArray=None, ma=None, moveMenu=None, mm=None, moveMenuSet=None, mms=None, numberOfMenuSets=None, nms=None, numberOfMenus=None, nm=None, permanent=None, p=None, removeMenu=None, rm=None, removeMenuSet=None, rms=None, *args, **kwargs):
    """
    Create a menu set which is used to logically order menus for display in the main menu bar.Such menu sets can be edited and reordered dynamically. 
    """
    pass


def workspace(active=None, act=None, baseWorkspace=None, bw=None, create=None, cr=None, directory=None, dir=None, expandName=None, en=None, fileRule=None, fr=None, fileRuleEntry=None, fre=None, fileRuleList=None, frl=None, filter=None, f=None, fullName=None, fn=None, list=None, l=None, listFullWorkspaces=None, lfw=None, listWorkspaces=None, lw=None, newWorkspace=None, n=None, objectType=None, ot=None, objectTypeEntry=None, ote=None, objectTypeList=None, otl=None, openWorkspace=None, o=None, projectPath=None, pp=None, removeFileRuleEntry=None, rfr=None, removeVariableEntry=None, rve=None, renderType=None, rt=None, renderTypeEntry=None, rte=None, renderTypeList=None, rtl=None, rootDirectory=None, rd=None, saveWorkspace=None, s=None, shortName=None, sn=None, update=None, u=None, updateAll=None, ua=None, variable=None, v=None, variableEntry=None, ve=None, variableList=None, vl=None, *args, **kwargs):
    """
    Create, open, or edit a workspace associated with a given workspace file. 
    """
    pass


def AddKeyToolDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachSkeletonJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSplineApplyRenderOverride(*args, **kwargs):
    """
    
    """
    pass


def texSmoothContext(*args, **kwargs):
    """
    
    """
    pass


def dR_objectXrayTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolyDisplayEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def disconnectJoint(attachHandleMode=None, ahm=None, deleteHandleMode=None, dhm=None, *args, **kwargs):
    """
    This command will break a skeleton at the selected joint and delete any associated handles. 
    """
    pass


def DeleteExpressionsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyClipboard(clear=None, cl=None, color=None, clr=None, copy=None, cp=None, paste=None, ps=None, shader=None, sh=None, uvCoordinates=None, uv=None, *args, **kwargs):
    """
    The command allows the user to copy and paste certain polygonal attributes to a clipboard. These attributes are:1) Shader (shading engine) assignment.2) Texture coordinate (UV) assignment.3) Color value assignment. Any combination of attributes can be chosen for the copy or paste operation. If the attribute has not been copied to the clipboard, then naturally it cannot be pasted from the clipboard. The copy option will copy the attribute assignments from a single source polygonal dag object or polygon component. If the source does not have the either UV or color attributes, then nothing will be copied to the clipboard. The paste option will paste the attribute assignments to one or more polygon components or polygonal dag objects. If the destination does not have either UV or color attributes, then new values will be assigned as needed. Additionally, there is the option to clear the clipboard contents
    """
    pass


def moduleDetectionLogic(*args, **kwargs):
    """
    
    """
    pass


def PolyExtrudeEdgesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderLayerEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapToPoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OffsetCurveOnSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideStrokeControlCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HoldCurrentKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StitchSurfacePoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TwoStackedViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeNonDefHistoryOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CustomPolygonDisplayOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateWakeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditMembershipTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Snap2PointsTo2Points(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynamicLoad(*args, **kwargs):
    """
    Dynamically load the DLL passed as argument.
    """
    pass


def DeleteAllJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TranslateToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDisplayAsMediumSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCameraAimUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyAssignSubdivHoleOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def drawExtrudeFacetCtx(*args, **kwargs):
    """
    
    """
    pass


def directConnectPath(*args, **kwargs):
    """
    
    """
    pass


def shotRipple(deleted=None, d=None, endDelta=None, ed=None, endTime=None, et=None, startDelta=None, sd=None, startTime=None, st=None, *args, **kwargs):
    """
    When Ripple Edit Mode is enabled, neighboring shots to the shot that gets manipulated are moved in sequence time to either make way or close up gaps corresponding to that node's editing. Given some parameters about the shot edit that just took place, this command will choose which other shots to move, and move them the appropriate amounts If no shot name is provided, the command will attempt to use the first selected shot.
    """
    pass


def ShowBoundingBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def frameLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, backgroundShade=None, bgs=None, borderStyle=None, bs=None, borderVisible=None, bv=None, childArray=None, ca=None, collapsable=None, cll=None, collapse=None, cl=None, collapseCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, expandCommand=None, ec=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, labelIndent=None, li=None, labelVisible=None, lv=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preCollapseCommand=None, pcc=None, preExpandCommand=None, pec=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates frame layout control. A frame layout may draw a border around its child controls as well as a display a title. Frame layouts may also be collapsable. Collapsing a frame layout will make the child of the frame layout invisible and shrink the frame layout size. The frame layout may then be expanded to make its child visible. Note that the frame layout may have only one child control.If you wish to have more than one child inside a frame layout then you must use some other control layout as the immediate child of the frame layout. 
    """
    pass


def UpdateCurrentSceneMudbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def runTimeCommand(*args, **kwargs):
    """
    
    """
    pass


def upAxis(axis=None, ax=None, rotateView=None, rv=None, *args, **kwargs):
    """
    The upAxis command changes the world up direction. Current implementation provides only two choices of axis (the Y-axis or the Z-axis) as the world up direction.
    """
    pass


def HypershadeFrameAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddCombinationTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Birail3Options(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKCharacterControlsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewPlace(animate=None, an=None, eyePoint=None, eye=None, fieldOfView=None, fov=None, lookAt=None, la=None, ortho=None, o=None, perspective=None, p=None, upDirection=None, up=None, viewDirection=None, vd=None, *args, **kwargs):
    """
    This command positions the camera as specified. The lookAt and viewDirection flags are mutually exclusive, as are the ortho and perspective flags. If this command switches a camera from ortho to perspective or the other way around without specifying a new field of view, then one is calculated based on a heuristic involving the selected objects. 
    """
    pass


def channelBox(annotation=None, ann=None, attrBgColor=None, bc=None, attrColor=None, ac=None, attrFilter=None, af=None, attrRegex=None, ar=None, attributeEditorMode=None, aem=None, backgroundColor=None, bgc=None, containerAtTop=None, cat=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enableLabelSelection=None, els=None, execute=None, exe=None, exists=None, ex=None, fieldWidth=None, fw=None, fixedAttrList=None, fal=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, historyObjectList=None, hol=None, hyperbolic=None, hyp=None, inputs=None, inputs=None, isObscured=None, io=None, labelWidth=None, lw=None, longNames=None, ln=None, mainListConnection=None, mlc=None, mainObjectList=None, mol=None, manage=None, m=None, maxHeight=None, mh=None, maxWidth=None, mw=None, niceNames=None, nn=None, noBackground=None, nbg=None, nodeRegex=None, nr=None, numberOfPopupMenus=None, npm=None, outputObjectList=None, ool=None, outputs=None, out=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, select=None, s=None, selectedHistoryAttributes=None, sha=None, selectedMainAttributes=None, sma=None, selectedOutputAttributes=None, soa=None, selectedShapeAttributes=None, ssa=None, shapeObjectList=None, sol=None, shapes=None, shp=None, showNamespace=None, sn=None, showTransforms=None, st=None, speed=None, spd=None, takeFocus=None, tf=None, update=None, u=None, useManips=None, mnp=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a channel box, which is sensitive to the active list.It displays certain attributes (channels) of the last node on the active list, and provides a two-way connection to keep the widget up to date. 
    """
    pass


def GoToFBIKStancePose(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ImportSkinWeightMaps(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def layeredTexturePort(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, node=None, n=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, selectedAlphaControl=None, sac=None, selectedBlendModeControl=None, sbc=None, selectedColorControl=None, scc=None, selectedIsVisibleControl=None, svc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a 3dPort that displays an image representing the layered texture node specified. 
    """
    pass


def cutKey(animation=None, an=None, attribute=None, at=None, clear=None, cl=None, controlPoints=None, cp=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, option=None, o=None, selectKey=None, sl=None, shape=None, s=None, time=None, t=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def polyExtrudeEdge(divisions=None, d=None, inputCurve=None, inc=None, keepFacesTogether=None, kft=None, localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localRotate=None, lr=None, localRotateX=None, lrx=None, localRotateY=None, lry=None, localRotateZ=None, lrz=None, localScale=None, ls=None, localScaleX=None, lsx=None, localScaleY=None, lsy=None, localScaleZ=None, lsz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, smoothingAngle=None, sma=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Extrude edges separately or together.
    """
    pass


def HypershadeSelectShadingGroupsAndMaterials(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPoke(localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Introduces a new vertex in the middle of the selected face, and connects it to the rest of the vertices of the face. 
    """
    pass


def CreateNURBSCircle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleIgnoreUseColor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listRelatives(allDescendents=None, ad=None, allParents=None, ap=None, children=None, c=None, fullPath=None, f=None, noIntermediate=None, ni=None, parent=None, p=None, path=None, pa=None, shapes=None, s=None, type=None, typ=None, *args, **kwargs):
    """
    This command lists parents and children of DAG objects. The flags -c/children, -ad/allDescendents, -s/shapes, -p/parent and -ap/allParents are mutually exclusive. Only one can be used in a command. 
    """
    pass


def GeometryToBoundingBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProfilerToolThreadView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPrism(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetWireOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeRegionInsertKeyCtx(breakdown=None, bd=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to insert keys within the keyframe region of the dope sheet editor 
    """
    pass


def dR_coordSpaceObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dgControl(*args, **kwargs):
    """
    
    """
    pass


def HighQualityDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRevertToDefaultTabs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowFur(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubstituteGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorDisableCurveSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetPlaceBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetGrabBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_activeHandleYZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def directionalLight(decayRate=None, d=None, discRadius=None, drs=None, intensity=None, i=None, name=None, n=None, rgb=None, rgb=None, shadowColor=None, sc=None, shadowDither=None, sd=None, shadowSamples=None, sh=None, softShadow=None, ss=None, useRayTraceShadows=None, rs=None, *args, **kwargs):
    """
    The directionalLight command is used to edit the parameters of existing directionalLights, or to create new ones. The default behaviour is to create a new directionallight. 
    """
    pass


def artUserPaintCtx(accopacity=None, aco=None, activeListChangedProc=None, alp=None, afterStrokeCmd=None, asc=None, alphaclamp=None, alc=None, alphaclamplower=None, acl=None, alphaclampupper=None, acu=None, attrSelected=None, asl=None, beforeStrokeCmd=None, bsc=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clamp=None, cl=None, clamplower=None, cll=None, clampupper=None, clu=None, clear=None, clr=None, colorRamp=None, cr=None, colorfeedback=None, cf=None, colorrangelower=None, crl=None, colorrangeupper=None, cru=None, dataTypeIndex=None, dti=None, disablelighting=None, dl=None, dragSlider=None, dsl=None, duringStrokeCmd=None, dsk=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, filterNodes=None, fon=None, finalizeCmd=None, fc=None, fullpaths=None, fp=None, getArrayAttrCommand=None, gac=None, getSurfaceCommand=None, gsc=None, getValueCommand=None, gvc=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, initializeCmd=None, ic=None, interactiveUpdate=None, iu=None, lowerradius=None, lr=None, mappressure=None, mp=None, maxvalue=None, mxv=None, minvalue=None, miv=None, name=None, n=None, objattrArray=None, oaa=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintNodeArray=None, pna=None, paintattrselected=None, pas=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, rampMaxColor=None, rxc=None, rampMinColor=None, rmc=None, reflection=None, rn=None, reflectionaxis=None, ra=None, selectedattroper=None, sao=None, setArrayValueCommand=None, sac=None, setValueCommand=None, svc=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toolCleanupCmd=None, tcc=None, toolOffProc=None, tfp=None, toolOnProc=None, top=None, toolSetupCmd=None, tsc=None, useColorRamp=None, ucr=None, useMaxMinColor=None, umc=None, usepressure=None, up=None, value=None, val=None, whichTool=None, wst=None, *args, **kwargs):
    """
    This is a context command to set the flags on the artAttrContext, which is the base context for attribute painting operations. All commands require the name of the context as the last argument as this provides the name of the context to create, edit or query. 
    """
    pass


def CreateCameraFromView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mirrorJoint(mirrorBehavior=None, mb=None, mirrorXY=None, mxy=None, mirrorXZ=None, mxz=None, mirrorYZ=None, myz=None, searchReplace=None, sr=None, *args, **kwargs):
    """
    This command will duplicate a branch of the skeleton from the selected joint symmetrically about a plane in world space. There are three mirroring modes(xy-, yz-, xz-plane). 
    """
    pass


def ParentConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rgbValue=None, rgb=None, rowAttach=None, rat=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def renderSettings(camera=None, cam=None, customTokenString=None, cts=None, firstImageName=None, fin=None, fullPath=None, fp=None, fullPathTemp=None, fpt=None, genericFrameImageName=None, gin=None, imageGenericName=None, ign=None, lastImageName=None, lin=None, layer=None, lyr=None, leaveUnmatchedTokens=None, lut=None, *args, **kwargs):
    """
    Query interface to the common tab of the render settings
    """
    pass


def DisableFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSCylinder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleScalePivots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def recordAttr(attribute=None, at=None, delete=None, d=None, *args, **kwargs):
    """
    This command sets up an attribute to be recorded.When the record command is executed, any changes to this attribute are recorded.When recording stops these changes are turned into keyframes. 
    """
    pass


def MoveSkinJointsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVOrientShells(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportSplitAnimationIntoTakes(*args, **kwargs):
    """
    
    """
    pass


def CreateBifrostLiquid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UseSelectedEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def addAttr(attributeType=None, at=None, binaryTag=None, bt=None, cachedInternally=None, ci=None, category=None, ct=None, dataType=None, dt=None, defaultValue=None, dv=None, disconnectBehaviour=None, dcb=None, enumName=None, en=None, exists=None, ex=None, fromPlugin=None, fp=None, hasMaxValue=None, hxv=None, hasMinValue=None, hnv=None, hasSoftMaxValue=None, hsx=None, hasSoftMinValue=None, hsn=None, hidden=None, h=None, indexMatters=None, im=None, internalSet=None, internalSet=None, keyable=None, k=None, longName=None, ln=None, maxValue=None, max=None, minValue=None, min=None, multi=None, m=None, niceName=None, nn=None, numberOfChildren=None, nc=None, parent=None, p=None, proxy=None, pxy=None, readable=None, r=None, shortName=None, sn=None, softMaxValue=None, smx=None, softMinValue=None, smn=None, storable=None, s=None, usedAsColor=None, uac=None, usedAsFilename=None, uaf=None, usedAsProxy=None, uap=None, writable=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def CurlCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetFullBodyIKKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dbtrace(filter=None, f=None, info=None, i=None, keyword=None, k=None, mark=None, m=None, output=None, o=None, timed=None, tm=None, title=None, t=None, verbose=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def expressionEditorListen(listenFile=None, lf=None, listenForAttr=None, la=None, listenForExpression=None, le=None, listenForName=None, ln=None, stopListenForAttr=None, sla=None, stopListenForExpression=None, sle=None, stopListenForName=None, sln=None, *args, **kwargs):
    """
    Listens for messages for the Expression Editor, at its request, and communicates them to it.This action is for internal use only and should not be called by users.This action should be called only by the Expression Editor. 
    """
    pass


def xgmPointRender(*args, **kwargs):
    """
    
    """
    pass


def ProfilerToolCategoryView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artBuildPaintMenu(*args, **kwargs):
    """
    ??
    """
    pass


def sbs_GetChannelsNamesFromSubstanceNode(*args, **kwargs):
    """
    
    """
    pass


def particle(attribute=None, at=None, cache=None, ch=None, conserve=None, c=None, count=None, ct=None, deleteCache=None, dc=None, dynamicAttrList=None, dal=None, floatValue=None, fv=None, gridSpacing=None, grs=None, inherit=None, i=None, jitterBasePoint=None, jbp=None, jitterRadius=None, jr=None, lowerLeft=None, ll=None, name=None, n=None, numJitters=None, nj=None, order=None, order=None, particleId=None, id=None, perParticleDouble=None, ppd=None, perParticleVector=None, ppv=None, position=None, p=None, shapeName=None, sn=None, upperRight=None, ur=None, vectorValue=None, vv=None, *args, **kwargs):
    """
    The particle command creates a new particle object from a list of world space points. If a particle object is created, the command returns the names of the new particle shape and its associated particle object dependency node. If an object was queried, the results of the query are returned. Per particle attributes can be queried using the particleId or the order of the particle in the particle array. If an object was edited, nothing is returned. 
    """
    pass


def CreateLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateBindingSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlowPathObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def plane(length=None, l=None, name=None, n=None, position=None, p=None, rotation=None, r=None, size=None, s=None, width=None, w=None, *args, **kwargs):
    """
    The command creates a sketch plane (also known as a "construction plane") in space.To create an object (such as a NURBS curve, joint chain or polygon) on a construction plane, you need to first make the plane live. See also the makeLive command. 
    """
    pass


def meshRemapContext(*args, **kwargs):
    """
    
    """
    pass


def DeleteAllLattices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ogsdebug(*args, **kwargs):
    """
    
    """
    pass


def IncreaseExposureFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorEnableCurveSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nexQuadDrawCtx(*args, **kwargs):
    """
    
    """
    pass


def PoleVectorConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetActiveKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyConstraintAxis(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ComponentEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnpublishChildAnchor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapToMeshCenter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GeometryToBoundingBoxOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorShowAllAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BreakRigidBodyConnection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def picture(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, tile=None, tl=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a static image.
    """
    pass


def SelectAllNRigids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def windowPref(enableAll=None, ea=None, exists=None, ex=None, height=None, h=None, leftEdge=None, le=None, loadAll=None, la=None, maximized=None, max=None, parentMain=None, pm=None, remove=None, r=None, removeAll=None, ra=None, restoreMainWindowState=None, rms=None, saveAll=None, sa=None, saveMainWindowState=None, sms=None, topEdge=None, te=None, topLeftCorner=None, tlc=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    Create or modify preferred window attributes.The size and position of a window is retained during and between application sessions.A default window preference is created when a window is closed.Window preferences must be named and, consequently, only affect the window with a matching name. 
    """
    pass


def dR_selConstraintEdgeRing(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editRenderLayerAdjustment(attributeLog=None, alg=None, layer=None, lyr=None, nodeLog=None, nlg=None, remove=None, r=None, *args, **kwargs):
    """
    This command is used to create, edit, and query adjustments to render layers. An adjustment allows different attribute values or connections to be used depending on the active render layer.
    """
    pass


def RemoveFromContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmRebuildSplineDescription(*args, **kwargs):
    """
    
    """
    pass


def refresh(currentView=None, cv=None, force=None, f=None, suspend=None, su=None, *args, **kwargs):
    """
    This command is used to force a redraw during script execution. Normally, redraw is suspended while scripts are executing but sometimes it is useful to show intermediate results for purposes such as capturing images from the screen. 
    """
    pass


def DisplayLayerEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonCollapseEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def optionMenuGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, itemListLong=None, ill=None, itemListShort=None, ils=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfItems=None, ni=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, select=None, sl=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def polyUnite(mergeUVSets=None, muv=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a new poly as an union of a list of polys If no objects are specified in the command line, then the objects from the active list are used. 
    """
    pass


def SubdivSmoothnessRough(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def animCurveEditor(areCurvesSelected=None, acs=None, autoFit=None, af=None, classicMode=None, cm=None, clipTime=None, ct=None, constrainDrag=None, cd=None, control=None, ctl=None, curvesShown=None, cs=None, curvesShownForceUpdate=None, csf=None, defineTemplate=None, dt=None, denormalizeCurvesCommand=None, dcc=None, displayActiveKeyTangents=None, dat=None, displayActiveKeys=None, dak=None, displayInfinities=None, di=None, displayKeys=None, dk=None, displayNormalized=None, dn=None, displayTangents=None, dtn=None, displayValues=None, dv=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, keyingTime=None, kt=None, lockMainConnection=None, lck=None, lookAt=None, la=None, mainListConnection=None, mlc=None, menu=None, m=None, normalizeCurvesCommand=None, ncc=None, outliner=None, o=None, panel=None, pnl=None, parent=None, p=None, preSelectionHighlight=None, psh=None, renormalizeCurves=None, rnc=None, resultSamples=None, rs=None, resultScreenSamples=None, rss=None, resultUpdate=None, ru=None, selectionConnection=None, slc=None, showActiveCurveNames=None, acn=None, showBufferCurves=None, sb=None, showCurveNames=None, scn=None, showResults=None, sr=None, showUpstreamCurves=None, suc=None, smoothness=None, s=None, snapTime=None, st=None, snapValue=None, sv=None, stackedCurves=None, sc=None, stackedCurvesMax=None, scx=None, stackedCurvesMin=None, scm=None, stackedCurvesSpace=None, scs=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, valueLinesToggle=None, vlt=None, *args, **kwargs):
    """
    Edit a characteristic of a graph editor
    """
    pass


def NodeEditorGraphUpDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetCombBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReverseSurfaceDirectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def contentBrowser(addContentPath=None, acp=None, context=None, ctx=None, control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, location=None, loc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, preview=None, pv=None, refreshTreeView=None, rtv=None, removeContentPath=None, rcp=None, saveCurrentContext=None, scc=None, selectionConnection=None, slc=None, stateString=None, sts=None, thumbnailView=None, th=None, treeView=None, tr=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command is used to edit and query a Content Browser. The Content Browser is a unique panel, so only one instance of it can exist at a given time. The optional argument is the name of the control.
    """
    pass


def Birail2(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Birail3(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Birail1(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportInstances(*args, **kwargs):
    """
    
    """
    pass


def frameBufferName(autoTruncate=None, a=None, camera=None, c=None, renderLayer=None, l=None, renderPass=None, p=None, *args, **kwargs):
    """
    Returns the frame buffer name for a given renderPass renderLayer and camera combination. Optionally, this command can apply a name truncation algorithm so that the frameBuffer name will respect the maximum length imposed by the destination file format, if applicable.
    """
    pass


def SequenceEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKPinRotate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothDeleteHistoryOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_gridSnapRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVStraightenOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectVertexFaceMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def notifyPostUndo(*args, **kwargs):
    """
    
    """
    pass


def PaintReduceWeightsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMoveFacet(attraction=None, att=None, gravity=None, g=None, gravityX=None, gx=None, gravityY=None, gy=None, gravityZ=None, gz=None, localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localRotate=None, lr=None, localRotateX=None, lrx=None, localRotateY=None, lry=None, localRotateZ=None, lrz=None, localScale=None, ls=None, localScaleX=None, lsx=None, localScaleY=None, lsy=None, localScaleZ=None, lsz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, magnX=None, mx=None, magnY=None, my=None, magnZ=None, mz=None, magnet=None, m=None, offset=None, off=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, weight=None, w=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Modifies facet of a polygonal object. Translate, move, rotate or scale facets. 
    """
    pass


def getModulePath(moduleName=None, mn=None, *args, **kwargs):
    """
    Returns the module path for a given module name.
    """
    pass


def SplitUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_customPivotToolRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DuplicateNURBSPatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeFrameSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def panelHistory(back=None, b=None, clear=None, cl=None, defineTemplate=None, dt=None, exists=None, ex=None, forward=None, f=None, historyDepth=None, hd=None, isEmpty=None, ie=None, suspend=None, s=None, targetPane=None, tp=None, useTemplate=None, ut=None, wrap=None, w=None, *args, **kwargs):
    """
    This command creates a panel history object.The object is targeted on a particular paneLayout and thereafter notes changes in panel configurations within that paneLayout, building up a history list.The list can be stepped through backwards or forwards. 
    """
    pass


def HypershadeShapeMenuStateAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def boxDollyCtx(alternateContext=None, ac=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, toolName=None, tn=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a dolly context. 
    """
    pass


def NodeEditorTransforms(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetCurrentColorSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeConvertToFileTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintCacheToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCreateNewTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyPlatonicSolidCtx(*args, **kwargs):
    """
    
    """
    pass


def polySplitVertex(worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Use this command to split one or more vertices.
    """
    pass


def dR_visorTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVCreateSnapshot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AutoProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetKeyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PrefixHierarchyNames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MirrorJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmCombBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def SetKeyScale(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportHardEdges(*args, **kwargs):
    """
    
    """
    pass


def EvaluationToolkit(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNodeWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateWake(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGuideContext(*args, **kwargs):
    """
    
    """
    pass


def NonWeightedTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shadingNetworkCompare(byName=None, nam=None, byValue=None, val=None, delete=None, delete=None, equivalent=None, eq=None, network1=None, n1=None, network2=None, n2=None, upstreamOnly=None, up=None, *args, **kwargs):
    """
    This command allows you to compare two shading networks.
    """
    pass


def FBXResetExport(*args, **kwargs):
    """
    
    """
    pass


def dR_setExtendLoop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderQualityNode(*args, **kwargs):
    """
    The renderQualityNode creates a render quality node and registers it with the model.The createNode command will not register nodes of this type correctly. 
    """
    pass


def ShowSurfaceCVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_symmetryFlip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def lightlink(b=None, b=None, hierarchy=None, h=None, light=None, l=None, make=None, m=None, object=None, o=None, sets=None, set=None, shapes=None, shp=None, transforms=None, t=None, *args, **kwargs):
    """
    This command is used to make, break and query light linking relationships between lights/sets of lights and objects/sets of objects. 
    """
    pass


def ProjectCurveOnSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableTimeChangeUndoConsolidation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SymmetrizeUVUpdateCommand(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorPickWalkRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MirrorSkinWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selConstraintEdgeLoop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeIncreaseTraversalDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def eval(*args, **kwargs):
    """
    This function takes a string which contains MEL code and evaluates it using the MEL interpreter. The result is converted into a Python data type and is returned. If an error occurs during the execution of the MEL script, a Python exception is raised with the appropriate error message.
    """
    pass


def syncSculptCache(*args, **kwargs):
    """
    
    """
    pass


def exactWorldBoundingBox(ignoreInvisible=None, ii=None, *args, **kwargs):
    """
    This command figures out an exact-fit bounding box for the specified objects (or selected objects if none are specified) This bounding box is always in world space. 
    """
    pass


def Shatter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorShowCustomAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selConstraintBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteStaticChannels(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParticleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TruncateHairCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Duplicate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyContourProjection(createNewMap=None, cm=None, flipRails=None, fr=None, insertBeforeDeformers=None, ibd=None, method=None, m=None, offset0=None, o0=None, offset1=None, o1=None, offset2=None, o2=None, offset3=None, o3=None, reduceShear=None, rs=None, smoothness0=None, s0=None, smoothness1=None, s1=None, smoothness2=None, s2=None, smoothness3=None, s3=None, userDefinedCorners=None, udc=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Performs a contour stretch UV projection onto an object.
    """
    pass


def NodeEditorCreateNodePopup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportSkeletonDefinitions(*args, **kwargs):
    """
    
    """
    pass


def SetKeyRotate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fcheck(*args, **kwargs):
    """
    Invokes the fcheck program to display images in a separate window.
    """
    pass


def ActivateViewport20(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def tabLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, borderStyle=None, bs=None, changeCommand=None, cc=None, childArray=None, ca=None, childResizable=None, cr=None, defineTemplate=None, dt=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontalScrollBarThickness=None, hst=None, image=None, i=None, imageVisible=None, iv=None, innerMarginHeight=None, imh=None, innerMarginWidth=None, imw=None, isObscured=None, io=None, manage=None, m=None, minChildWidth=None, mcw=None, moveTab=None, mt=None, newTabCommand=None, ntc=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preSelectCommand=None, psc=None, preventOverride=None, po=None, scrollable=None, scr=None, scrollableTabs=None, stb=None, selectCommand=None, sc=None, selectTab=None, st=None, selectTabIndex=None, sti=None, showNewTab=None, snt=None, tabLabel=None, tl=None, tabLabelIndex=None, tli=None, tabsClosable=None, tc=None, tabsVisible=None, tv=None, useTemplate=None, ut=None, verticalScrollBarThickness=None, vst=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a tab group. Tab groups are a specialized form of control layouts that contain only control layouts. Whenever a control layout is added to a tab group it will have a tab provided for it that allows selection of that group from amongst other tabbed control groups. Only one child of a tab layout is visible at a time. 
    """
    pass


def AttachSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCreaseVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_multiCutRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChangeFullBodyPivotPlacement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertToFrozen(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerspGraphLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Creates a context to perform selection.
    """
    pass


def DeleteSurfaceFlowOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMergeEdgeCtx(activeNodes=None, anq=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, immediate=None, im=None, mergeMode=None, mm=None, name=None, n=None, previous=None, pv=None, reset=None, rs=None, toolNode=None, tnq=None, *args, **kwargs):
    """
    Create a new context to merge edges on polygonal objects
    """
    pass


def NodeEditorGraphAllShapesExceptShading(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listInputDeviceButtons(*args, **kwargs):
    """
    This command lists all of the buttons of the specified input device specified as an argument. 
    """
    pass


def SubdividePolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConnectJointOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshPinchToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableNCloths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportCacheFile(*args, **kwargs):
    """
    
    """
    pass


def sceneUIReplacement(clear=None, cl=None, deleteRemaining=None, dr=None, getNextFilter=None, gf=None, getNextPanel=None, gp=None, getNextScriptedPanel=None, gsp=None, update=None, u=None, *args, **kwargs):
    """
    This command returns existing scene based UI that can be utilized by the scene that is being loaded. It can also delete any such UI that is not used by the loading scene. 
    """
    pass


def singleProfileBirailSurface(tangentContinuityProfile1=None, tp1=None, transformMode=None, tm=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This cmd creates a railed surface by sweeping the profile curve along the two rail curves. One of the requirements for surface creation is the profile curve must intersect the two rail curves. If the profile is a surface curve i.e. isoparm, curve on surface or trimmed edge then tangent continuity across the surface underlying the profile may be enabled using the flag -tp1 true. 
    """
    pass


def ViewAlongAxisNegativeY(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorRenderSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveSmoothnessCoarse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to select keyframes within the graph editor 
    """
    pass


def EnableSnapshots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowManipulatorTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveNearestPickedKeyToolDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def objectCenter(gl=None, gl=None, local=None, l=None, x=None, x=None, y=None, y=None, z=None, z=None, *args, **kwargs):
    """
    This command returns the coordinates of the center of the bounding box of the specified object. If one coordinate only is specified, it will be returned as a float. If no coordinates are specified, an array of floats is returned, containing x, y, and z. If you specify multiple coordinates, only one will be returned. 
    """
    pass


def NodeEditorAutoSizeNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorCloseActiveTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorDeleteClips(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakePondBoatsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleUseDefaultMaterial(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportInputConnections(*args, **kwargs):
    """
    
    """
    pass


def cacheFileMerge(endTime=None, et=None, geometry=None, g=None, startTime=None, st=None, *args, **kwargs):
    """
    If selected/specified caches can be successfully merged, will return the start/end frames of the new cache followed by the start/end frames of any gaps in the merged cache for which no data should be written to file. In query mode, will return the names of geometry associated with the specified cache file nodes.
    """
    pass


def closeCurve(blendBias=None, bb=None, blendKnotInsertion=None, bki=None, parameter=None, p=None, preserveShape=None, ps=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The closeCurve command closes a curve, making it periodic. The pathname to the newly closed curve and the name of the resulting dependency node are returned.If a curve is not specified in the command, then the first active curve will be used. 
    """
    pass


def setDynamic(allOnWhenRun=None, awr=None, disableAllOnWhenRun=None, dwr=None, setAll=None, all=None, setOff=None, off=None, setOn=None, on=None, *args, **kwargs):
    """
    setDynamic sets the isDynamic attribute of particle objects on or off.If no objects are specified, it sets the attribute for any selected objects.If -all is thrown, it sets the attribute for all particle objects in the scene. By default it sets the attribute true (on); if the -off flag is thrown, it sets the attribute false (off). 
    """
    pass


def LayoutUVRectangle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateOceanOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EmitFluidFromObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ViewSequence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def volumeBind(influence=None, inf=None, name=None, n=None, *args, **kwargs):
    """
    Command for creating and editing volume binding nodes. The node is use for storing volume data to define skin weighting data.
    """
    pass


def animLayer(addRelatedKG=None, akg=None, addSelectedObjects=None, aso=None, affectedLayers=None, afl=None, animCurves=None, anc=None, attribute=None, at=None, baseAnimCurves=None, bac=None, bestAnimLayer=None, blr=None, bestLayer=None, bl=None, blendNodes=None, bld=None, children=None, c=None, collapse=None, col=None, copy=None, cp=None, copyAnimation=None, ca=None, copyNoAnimation=None, cna=None, excludeBoolean=None, ebl=None, excludeDynamic=None, edn=None, excludeEnum=None, een=None, excludeRotate=None, ert=None, excludeScale=None, esc=None, excludeTranslate=None, etr=None, excludeVisibility=None, evs=None, exists=None, ex=None, extractAnimation=None, ea=None, findCurveForPlug=None, fcv=None, forceUIRebuild=None, fur=None, forceUIRefresh=None, uir=None, layeredPlug=None, lp=None, lock=None, l=None, maxLayers=None, ml=None, moveLayerAfter=None, mva=None, moveLayerBefore=None, mvb=None, mute=None, m=None, override=None, o=None, parent=None, p=None, passthrough=None, pth=None, preferred=None, prf=None, removeAllAttributes=None, raa=None, removeAttribute=None, ra=None, root=None, r=None, selected=None, sel=None, solo=None, s=None, weight=None, w=None, writeBlendnodeDestinations=None, wbd=None, *args, **kwargs):
    """
    This command creates and edits animation layers.
    """
    pass


def HypershadeSelectBakeSets(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleUIElements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportCacheFile(*args, **kwargs):
    """
    
    """
    pass


def projectionManip(fitBBox=None, fb=None, projType=None, pt=None, switchType=None, st=None, *args, **kwargs):
    """
    Various commands to set the manipulator to interesting positions.
    """
    pass


def texScaleContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, position=None, p=None, snap=None, s=None, snapRelative=None, sr=None, snapValue=None, sv=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a scale context for the UV Editor. Note that the above flag controls the global behaviour of all texture editor scale contexts.Changing one context independently is not allowed.Changing a context's behaviour using the above flag, will change all existing texture editor scale contexts. 
    """
    pass


def evalContinue(*args, **kwargs):
    """
    
    """
    pass


def volumeAxis(alongAxis=None, alx=None, aroundAxis=None, arx=None, attenuation=None, att=None, awayFromAxis=None, afx=None, awayFromCenter=None, afc=None, detailTurbulence=None, dtr=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, directionalSpeed=None, drs=None, invertAttenuation=None, ia=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, turbulence=None, trb=None, turbulenceFrequencyX=None, tfx=None, turbulenceFrequencyY=None, tfy=None, turbulenceFrequencyZ=None, tfz=None, turbulenceOffsetX=None, tox=None, turbulenceOffsetY=None, toy=None, turbulenceOffsetZ=None, toz=None, turbulenceSpeed=None, trs=None, *args, **kwargs):
    """
    A volume axis field can push particles in four directions, defined with respect to a volume: along the axis, away from the axis or center, around the axis, and in a user-specified direction.These are analogous to the emission speed controls of volume emitters. The volume axis field also contains a wind turbulence model (different from the turbulence field) that simulates an evolving flow of liquid or gas. The turbulence has a build in animation that is driven by a connection to a time node. 
    """
    pass


def IncrementAndSave(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveShrinkWrapTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def character(addElement=None, add=None, addOffsetObject=None, aoo=None, characterPlug=None, cp=None, clear=None, cl=None, empty=None, em=None, excludeDynamic=None, ed=None, excludeRotate=None, er=None, excludeScale=None, es=None, excludeTranslate=None, et=None, excludeVisibility=None, ev=None, flatten=None, fl=None, forceElement=None, fe=None, include=None, include=None, intersection=None, int=None, isIntersecting=None, ii=None, isMember=None, im=None, library=None, lib=None, memberIndex=None, mi=None, name=None, n=None, noWarnings=None, nw=None, nodesOnly=None, no=None, offsetNode=None, ofs=None, remove=None, rm=None, removeOffsetObject=None, roo=None, root=None, rt=None, scheduler=None, sc=None, split=None, sp=None, subtract=None, sub=None, text=None, t=None, union=None, un=None, userAlias=None, ua=None, *args, **kwargs):
    """
    This command is used to manage the membership of a character.Characters are a type of set that gathers together the attributes of a node or nodes that a user wishes to animate as a single entity. 
    """
    pass


def SelectAllStrokes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeWarp(deleteFrame=None, df=None, frame=None, f=None, g=None, g=None, interpType=None, it=None, moveFrame=None, mf=None, *args, **kwargs):
    """
    This command is used to create a time warp input to a set of animation curves.
    """
    pass


def containerTemplate(addBindingSet=None, abs=None, addNames=None, an=None, addView=None, av=None, allKeyable=None, ak=None, attribute=None, at=None, attributeList=None, al=None, baseName=None, bn=None, bindingSetList=None, bsl=None, childAnchor=None, can=None, delete=None, d=None, expandCompounds=None, ec=None, fromContainer=None, fc=None, fromSelection=None, fs=None, layoutMode=None, lm=None, matchName=None, mn=None, parentAnchor=None, pan=None, publishedNodeList=None, pnl=None, removeBindingSet=None, rbs=None, removeView=None, rv=None, rootTransform=None, rtn=None, save=None, s=None, searchPath=None, sp=None, templateList=None, tl=None, updateBindingSet=None, ubs=None, useHierarchy=None, uh=None, exists=None, ex=None, fileName=None, fn=None, force=None, f=None, load=None, l=None, matchFile=None, mf=None, silent=None, si=None, unload=None, u=None, viewList=None, vl=None, *args, **kwargs):
    """
    A container template is a description of a container's published interface. This command provides the ability to create and save a template file for a container or load an existing template file.Once a template exists, the user can query the template information.
    """
    pass


def FBXImportSetLockedAttribute(*args, **kwargs):
    """
    
    """
    pass


def CutSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGraphUpstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportScaleFactor(*args, **kwargs):
    """
    
    """
    pass


def ToggleTangentDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dbcount(enabled=None, e=None, file=None, f=None, keyword=None, k=None, list=None, l=None, maxdepth=None, md=None, quick=None, q=None, reset=None, r=None, spreadsheet=None, s=None, *args, **kwargs):
    """
    The 
    """
    pass


def PolyExtrudeEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RandomizeFollicles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bakePartialHistory(allShapes=None, all=None, postSmooth=None, nps=None, preCache=None, pc=None, preDeformers=None, pre=None, prePostDeformers=None, ppt=None, *args, **kwargs):
    """
    This command is used to bake sections of the construction history of a shape node when possible. A typical usage would be on a shape that has both modelling operations and deformers in its history. Using this command with the -prePostDeformers flag will bake the modeling portions of the graph, so that only the deformers remain. 
    """
    pass


def hotkeyEditor(*args, **kwargs):
    """
    
    """
    pass


def file(activate=None, a=None, activeProxy=None, ap=None, add=None, add=None, anyModified=None, amf=None, applyTo=None, at=None, buildLoadSettings=None, bls=None, channels=None, chn=None, cleanReference=None, cr=None, command=None, c=None, compress=None, cmp=None, constraints=None, con=None, constructionHistory=None, ch=None, copyNumberList=None, cnl=None, defaultExtensions=None, de=None, defaultNamespace=None, dns=None, deferReference=None, dr=None, editCommand=None, ec=None, errorStatus=None, err=None, executeScriptNodes=None, esn=None, exists=None, ex=None, expandName=None, exn=None, exportAll=None, ea=None, exportAnim=None, ean=None, exportAnimFromReference=None, ear=None, exportAsReference=None, er=None, exportAsSegment=None, exs=None, exportSelected=None, es=None, exportSelectedAnim=None, eas=None, exportSelectedAnimFromReference=None, esa=None, exportSelectedNoReference=None, esr=None, exportUnloadedReferences=None, eur=None, expressions=None, exp=None, flushReference=None, fr=None, force=None, f=None, groupLocator=None, gl=None, groupName=None, gn=None, groupReference=None, gr=None, ignoreVersion=None, iv=None, i=None, i=None, importReference=None, ir=None, lastFileOption=None, lfo=None, lastTempFile=None, ltf=None, list=None, l=None, loadAllDeferred=None, lad=None, loadAllReferences=None, lar=None, loadNoReferences=None, lnr=None, loadReference=None, lr=None, loadReferenceDepth=None, lrd=None, loadReferencePreview=None, lrp=None, loadSettings=None, ls=None, location=None, loc=None, lockContainerUnpublished=None, lcu=None, lockFile=None, lf=None, lockReference=None, lck=None, mapPlaceHolderNamespace=None, mns=None, mergeNamespaceWithParent=None, mnp=None, mergeNamespaceWithRoot=None, mnr=None, mergeNamespacesOnClash=None, mnc=None, modified=None, mf=None, moveSelected=None, ms=None, namespace=None, ns=None, newFile=None, new=None, open=None, o=None, options=None, op=None, parentNamespace=None, pns=None, postSaveScript=None, pos=None, preSaveScript=None, prs=None, preserveName=None, pn=None, preserveReferences=None, pr=None, preview=None, pv=None, prompt=None, pmt=None, proxyManager=None, pm=None, proxyTag=None, pt=None, reference=None, r=None, referenceDepthInfo=None, rdi=None, referenceNode=None, rfn=None, relativeNamespace=None, rns=None, removeDuplicateNetworks=None, rdn=None, removeReference=None, rr=None, rename=None, rn=None, renameAll=None, ra=None, renameToSave=None, rts=None, renamingPrefix=None, rpr=None, renamingPrefixList=None, rpl=None, replaceName=None, rep=None, resetError=None, rer=None, returnNewNodes=None, rnn=None, save=None, s=None, saveDiskCache=None, sdc=None, saveReference=None, sr=None, saveReferencesUnloaded=None, sru=None, saveTextures=None, stx=None, sceneName=None, sn=None, segment=None, seg=None, selectAll=None, sa=None, shader=None, sh=None, sharedNodes=None, shd=None, sharedReferenceFile=None, srf=None, shortName=None, shn=None, strict=None, str=None, swapNamespace=None, sns=None, type=None, typ=None, uiConfiguration=None, uc=None, unloadReference=None, ur=None, unresolvedName=None, un=None, usingNamespaces=None, uns=None, withoutCopyNumber=None, wcn=None, writable=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def polyRemesh(caching=None, cch=None, constructionHistory=None, ch=None, interpolationType=None, ipt=None, name=None, n=None, nodeState=None, nds=None, reduceThreshold=None, rdt=None, refineThreshold=None, rft=None, smoothStrength=None, smt=None, tessellateBorders=None, tsb=None, *args, **kwargs):
    """
    Triangulates, then remeshes the given mesh through edge splitting and collapsing. Edges longer than the specified refinement threshold are split, and edges shorter than the reduction threshold are collapsed. 
    """
    pass


def BevelOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AffectSelectedObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def QuadrangulateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def inViewEditor(visible=None, v=None, *args, **kwargs):
    """
    Mel access to the In-View Editor. In-View Editors display a customizable subset of a node's attributes, letting you adjust attributes directly in a scene instead of opening the Channel Box or Attribute Editor. 
    """
    pass


def poseInterpolator(*args, **kwargs):
    """
    
    """
    pass


def lockNode(ignoreComponents=None, ic=None, lock=None, l=None, lockName=None, ln=None, lockUnpublished=None, lu=None, *args, **kwargs):
    """
    
    """
    pass


def dgInfo(allNodes=None, all=None, connections=None, c=None, dirty=None, d=None, nodes=None, n=None, nonDeletable=None, nd=None, outputFile=None, of=None, propagation=None, p=None, short=None, s=None, size=None, sz=None, subgraph=None, sub=None, type=None, nt=None, *args, **kwargs):
    """
    This command prints information about the DG in plain text. The scope of the information printed is the entire graph if the 
    """
    pass


def UnpublishParentAnchor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenSceneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_slideEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleQuery(*args, **kwargs):
    """
    
    """
    pass


def headsUpMessage(horizontalOffset=None, ho=None, object=None, o=None, selection=None, s=None, time=None, t=None, verticalOffset=None, vo=None, *args, **kwargs):
    """
    This command draws a message in the 3d view.The message is automatically erased at the next screen refresh. 
    """
    pass


def MakeBrushSpring(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MatchScaling(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Art3dPaintToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InTangentLinear(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeRegionCurrentTimeCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to change current time within the keyframe region of the dope sheet editor. 
    """
    pass


def FBXExportTriangulate(*args, **kwargs):
    """
    
    """
    pass


def keyframeRegionMoveKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, option=None, o=None, *args, **kwargs):
    """
    This command creates a context which may be used to move keyframes within the keyframe region of the dope sheet editor 
    """
    pass


def RadialOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicHelp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UpdateCurrentSceneMotionBuilder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsMeshQuality(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyToCurve(*args, **kwargs):
    """
    
    """
    pass


def ptexBake(*args, **kwargs):
    """
    
    """
    pass


def xgmInterpSetup(*args, **kwargs):
    """
    
    """
    pass


def showSelectionInTitle(*args, **kwargs):
    """
    This command causes the title of the window specified as an argument to be linked to the current file and selection. When selection changes, the window title will change to show the current file name and the name of the last selected object. 
    """
    pass


def DeleteAllNRigids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKGetRemoteCharacterList(*args, **kwargs):
    """
    
    """
    pass


def BatchRender(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectContiguousEdgesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPointsContext(*args, **kwargs):
    """
    
    """
    pass


def TransferAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubCharacterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_vertSelectLocked(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def currentCtx(*args, **kwargs):
    """
    This command returns the currently selected tool context.
    """
    pass


def polySelectConstraintMonitor(changeCommand=None, cc=None, create=None, c=None, delete=None, d=None, *args, **kwargs):
    """
    Manage the window to display/edit the polygonal selection constraint parameters 
    """
    pass


def texSmudgeUVContext(dragSlider=None, ds=None, effectType=None, et=None, exists=None, ex=None, functionType=None, ft=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, pressure=None, prs=None, radius=None, r=None, smudgeIsMiddle=None, sim=None, *args, **kwargs):
    """
    This command creates a context for smudge UV tool.This context only works in the texture UV editor. 
    """
    pass


def PoseInterpolatorNewGroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_disableTexturesTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldBakeGeo(*args, **kwargs):
    """
    
    """
    pass


def curve(append=None, a=None, bezier=None, bez=None, degree=None, d=None, editPoint=None, ep=None, knot=None, k=None, objectSpace=None, os=None, periodic=None, per=None, point=None, p=None, pointWeight=None, pw=None, replace=None, r=None, worldSpace=None, ws=None, *args, **kwargs):
    """
    The curve command creates a new curve from a list of control vertices (CVs).A string is returned containing the pathname to the newly created curve.You can create a curve from points either in world space or object (local) space, either with weights or without. You can replace an existing curve by using the "-r/replace" flag.You can append a point to an existing curve by using the "-a/append" flag. 
    """
    pass


def HypershadeDisplayAsIcons(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SplitEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LayoutUVAlongOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CleanupPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dollyCtx(alternateContext=None, ac=None, boxDollyType=None, bdt=None, centerOfInterestDolly=None, cd=None, dollyTowardsCenter=None, dtc=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, localDolly=None, ld=None, name=None, n=None, orthoZoom=None, oz=None, scale=None, s=None, toolName=None, tn=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a dolly context. 
    """
    pass


def DisplayShaded(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheImportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def buildKeyframeMenu(*args, **kwargs):
    """
    This command handles building the "dynamic" Keyframe menu, to show attributes of currently selected objects, filtered by the current manipulator. 
    """
    pass


def OrientConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderSetupSwitchVisibleRenderLayer(*args, **kwargs):
    """
    
    """
    pass


def dR_viewTop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HairUVSetLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveAllShelves(*args, **kwargs):
    """
    This command writes all shelves that are immediate children of the specified control layout to the prefs directory. 
    """
    pass


def TexSculptDeactivateBrushStrength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DistributeShells(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllNonLinearDeformers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SavePreferences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonHelixOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveWrapInfluence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeCurvesDynamic(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dbPeek(*args, **kwargs):
    """
    
    """
    pass


def SelectAllSculptObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateParticleDiskCacheOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectCurveCVsFirst(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChannelControlEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateDagContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddMissingFBIKEffectorsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertToKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteHistoryAheadOfGeomCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pointConstraint(layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, offset=None, o=None, remove=None, rm=None, skip=None, sk=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's position to the position of the target object or to the average position of a number of targets. 
    """
    pass


def dR_quadDrawClearDots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptMeshFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BaseLevelComponentDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateDagContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def testPassContribution(*args, **kwargs):
    """
    
    """
    pass


def SetMeshMaskTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def showShadingGroupAttrEditor(*args, **kwargs):
    """
    The showShadingGroupAttrEditor command opens up the attribute editor for the current object's shading-group information. 
    """
    pass


def createPtexUV(*args, **kwargs):
    """
    
    """
    pass


def selectedNodes(*args, **kwargs):
    """
    
    """
    pass


def HideUIElements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createMeshFromPoints(*args, **kwargs):
    """
    
    """
    pass


def FourViewLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostKillplane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVEditorFrameSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeTransferAttributeValues(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateLatticeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Unfold3DContext(*args, **kwargs):
    """
    
    """
    pass


def PolyConvertToLoopAndDuplicate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetClumpBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphCopy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKChildCount(*args, **kwargs):
    """
    
    """
    pass


def AddBlendShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickGetState(*args, **kwargs):
    """
    
    """
    pass


def dR_mtkPanelTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditCharacterAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SimplifyCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolySpinEdgeBackward(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddDynamicBuoyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeFace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def resolutionNode(*args, **kwargs):
    """
    The resolutionNode creates a render resolution node and registers it with the model.The createNode command will not register nodes of this type correctly. 
    """
    pass


def polyCutCtx(*args, **kwargs):
    """
    Create a new context to cut facets on polygonal objects
    """
    pass


def SelectAllParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFaceIDs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAverageNormal(allowZeroNormal=None, azn=None, distance=None, d=None, postnormalize=None, pon=None, prenormalize=None, prn=None, replaceNormalXYZ=None, xyz=None, *args, **kwargs):
    """
    Set normals of vertices or vertex-faces to an average value when the vertices within a given threshold. First, it sorts out the containing edges, and set them to be soft, if it is possible, so to let the normals appear to be "merged". The remained components then are sorted into lumps where vertices in each lump are within the given threshold. For all vertices and vertex-faces, set their normals to the average normal in the lump. Selected vertices may or may not on the same object. If objects are selected, it is assumed that all vertices are selected. If edges or faces are selected, it is assumed that the related vertex-faces are selected.
    """
    pass


def MirrorSkinWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPromoteRender(*args, **kwargs):
    """
    
    """
    pass


def RemoveBifrostEmissionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMaterialLoadingDetailsVisibility(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AutoPaintMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def overrideModifier(clear=None, cl=None, press=None, p=None, release=None, r=None, *args, **kwargs):
    """
    This command allows you to assign modifier key behaviour to other parts of the system.For example you can use a hotkey or input device instead of a modifer key to perform the same action. 
    """
    pass


def FBXExportBakeResampleAnimation(*args, **kwargs):
    """
    
    """
    pass


def SelectAllFollicles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GpuCacheImportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PositionAlongCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def movOut(comment=None, c=None, file=None, f=None, precision=None, pre=None, time=None, t=None, *args, **kwargs):
    """
    Exports a .mov file from the listed attributes. Valid attribute types are numeric attributes; time attributes; linear attributes; angular attributes; compound attributes made of the types listed previously; and multi attributes composed of the types listed previously. 
    """
    pass


def align(alignToLead=None, atl=None, coordinateSystem=None, cs=None, xAxis=None, x=None, yAxis=None, y=None, zAxis=None, z=None, *args, **kwargs):
    """
    Align or spread objects along X Y and Z axis.
    """
    pass


def blendShape(after=None, af=None, afterReference=None, ar=None, automatic=None, at=None, before=None, bf=None, deformerTools=None, dt=None, envelope=None, en=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, inBetween=None, ib=None, inBetweenIndex=None, ibi=None, inBetweenType=None, ibt=None, includeHiddenSelections=None, ihs=None, name=None, n=None, normalizationGroups=None, ng=None, origin=None, o=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, resetTargetDelta=None, rtd=None, split=None, sp=None, tangentSpace=None, ts=None, target=None, t=None, topologyCheck=None, tc=None, transform=None, tr=None, weight=None, w=None, weightCount=None, wc=None, *args, **kwargs):
    """
    This command creates a blendShape deformer, which blends in specified amounts of each target shape to the initial base shape. Each base shape is deformed by its own set of target shapes. Every target shape has an index that associates it with one of the shape weight values.
    """
    pass


def ToggleHelpLine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDeleteAllTextures(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSToPolygons(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def containerProxy(fromTemplate=None, ft=None, type=None, typ=None, *args, **kwargs):
    """
    Creates a new container with the same published interface, dynamic attributes and attribute values as the specified container but with fewer container members. This proxy container can be used as a reference proxy so that values can be set on container attributes without loading in the full container. The proxy container will contain one or more locator nodes. The first locator has dynamic attributes that serve as stand-ins for the original published attributes. The remaining locators serve as stand-ins for any dag nodes that have been published as parent or as child and will be placed at the world space location of the published parent/child nodes. The expected usage of container proxies is to serve as a reference proxy for a referenced container. For automated creation, export and setup of the proxy see the doExportContainerProxy.mel script which is invoked by the "Export Container Proxy" menu item.
    """
    pass


def ParentConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmLengthBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def timeEditorClipLayer(addAttribute=None, aa=None, addLayer=None, al=None, addObject=None, ao=None, allLayers=None, all=None, attribute=None, a=None, attributeKeyable=None, ak=None, clipId=None, cid=None, index=None, idx=None, keySiblings=None, ks=None, layerId=None, lid=None, layerName=None, ln=None, mode=None, m=None, mute=None, mu=None, name=None, n=None, path=None, pt=None, removeAttribute=None, ra=None, removeLayer=None, rl=None, removeObject=None, ro=None, resetSolo=None, rs=None, setKeyframe=None, k=None, solo=None, sl=None, zeroKeying=None, zk=None, *args, **kwargs):
    """
    Time Editor clip layers commands
    """
    pass


def vnnNode(connected=None, c=None, connectedTo=None, ct=None, listConnectedNodes=None, lcn=None, listPortChildren=None, lpc=None, listPorts=None, lp=None, portDefaultValue=None, pdv=None, queryAcceptablePortDataTypes=None, qat=None, queryIsUnresolved=None, qiu=None, queryPortDataType=None, qpt=None, queryPortDefaultValue=None, qpv=None, queryTypeName=None, qtn=None, setPortDataType=None, spt=None, *args, **kwargs):
    """
    The 
    """
    pass


def OrientConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetTransformationsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cacheAppend(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def latticeDeformKeyCtx(envelope=None, ev=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, latticeColumns=None, lc=None, latticeRows=None, lr=None, name=None, n=None, scaleLatticePts=None, slp=None, *args, **kwargs):
    """
    This command creates a context which may be used to deform key frames with lattice manipulator.This context only works in the graph editor. 
    """
    pass


def ExportOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGridToggleSnap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKEffectorCount(*args, **kwargs):
    """
    
    """
    pass


def UVUnstackShellsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def filterCurve(endTime=None, e=None, filter=None, f=None, kernel=None, ker=None, maxTimeStep=None, mxs=None, minTimeStep=None, mns=None, period=None, per=None, startTime=None, s=None, timeTolerance=None, tto=None, tolerance=None, tol=None, *args, **kwargs):
    """
    The filterCurve command takes a list of anim curve and filtersthem. Currently only a Euler filter is supported. The Euler filterdemangles discontinous rotation anim curves into smooth curves.
    """
    pass


def VisorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nexTRSContext(*args, **kwargs):
    """
    
    """
    pass


def getDefaultBrush(*args, **kwargs):
    """
    The command returns the name of the default Paint Effects brush.
    """
    pass


def shelfButton(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, commandRepeatable=None, rpt=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enableCommandRepeat=None, ecr=None, exists=None, ex=None, flat=None, fla=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, handleNodeDropCallback=None, hnd=None, height=None, h=None, highlightColor=None, hlc=None, highlightImage=None, hi=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelEditingCallback=None, lec=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, menuItem=None, mi=None, menuItemPython=None, mip=None, noBackground=None, nbg=None, noDefaultPopup=None, ndp=None, numberOfPopupMenus=None, npm=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, scaleIcon=None, sic=None, selectionImage=None, si=None, sourceType=None, stp=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def FBXGetTakeCount(*args, **kwargs):
    """
    
    """
    pass


def listNodesWithIncorrectNames(*args, **kwargs):
    """
    List all nodes with incorrect names in the Script Editor. 
    """
    pass


def polySelect(add=None, add=None, addFirst=None, af=None, asSelectString=None, ass=None, deselect=None, d=None, edgeBorder=None, eb=None, edgeBorderPath=None, ebp=None, edgeBorderPattern=None, bpt=None, edgeLoop=None, el=None, edgeLoopOrBorder=None, elb=None, edgeLoopOrBorderPattern=None, lbp=None, edgeLoopPath=None, elp=None, edgeLoopPattern=None, lpt=None, edgeRing=None, er=None, edgeRingPath=None, erp=None, edgeRingPattern=None, rpt=None, edgeUVLoopOrBorder=None, euv=None, extendToShell=None, ets=None, noSelection=None, ns=None, replace=None, r=None, shortestEdgePath=None, sep=None, shortestEdgePathUV=None, spu=None, shortestFacePath=None, sfp=None, toggle=None, tgl=None, *args, **kwargs):
    """
    This command makes different types of poly component selections.The return value is an integer array containing the id's of the components in the selection in order. If a given type of selection loops back on itself then this is indicated by the start id appearing twice, once at the start and once at the end. 
    """
    pass


def setParent(defineTemplate=None, dt=None, menu=None, m=None, topLevel=None, top=None, upLevel=None, u=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command changes the default parent to be the specified parent. Two special parents are "|" which indicates the top level layout of the window hierarchy, or ".." which indicates one level up in the hierarchy. Trying to move above the top level has no effect. 
    """
    pass


def renderSetupFindCollections(*args, **kwargs):
    """
    unknown
    """
    pass


def CutKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClearCurrentCharacterList(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyStampDepthPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleConsistentNodeNameSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOutlinerPerspLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySlideEdgeCtx(*args, **kwargs):
    """
    
    """
    pass


def testPa(*args, **kwargs):
    """
    
    """
    pass


def ImportAnimOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportConvert2Tif(*args, **kwargs):
    """
    
    """
    pass


def OutlinerExpandAllItems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def intersect(firstSurface=None, fs=None, tolerance=None, tol=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The intersect command creates a curve on surface where all surfaces intersect with each other. By default, the curve on surface is created for both surfaces. However, by using the -fs flag, only the first surface will have a curve on surface. Also, the intersection curve can be created as a 3D curve rather than a curve on surface. 
    """
    pass


def DeleteStaticChannelsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyPyramidCtx(*args, **kwargs):
    """
    
    """
    pass


def shapeCompare(*args, **kwargs):
    """
    Compares two shapes. If no shapes are specified in the command line, then the shapes from the active list are used. 
    """
    pass


def ScaleToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def snapshotModifyKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Creates a context for inserting/delete keys on an editable motion trail 
    """
    pass


def HypershadeConnectSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeType(apiType=None, api=None, derived=None, d=None, inherited=None, i=None, isTypeName=None, itn=None, *args, **kwargs):
    """
    This command returns a string which identifies the given node's type. 
    """
    pass


def FBXExportSkins(*args, **kwargs):
    """
    
    """
    pass


def HypershadePickWalkRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def canCreateManip(*args, **kwargs):
    """
    This command returns true if there can be a manipulator made for the specified selection, false otherwise. 
    """
    pass


def UnfoldPackUVs3DInEmptyTile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolySelectToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def multiTouch(gestures=None, g=None, trackpad=None, t=None, *args, **kwargs):
    """
    Used to interact with the Gestura (multi-touch) library.
    """
    pass


def canvas(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, pressCommand=None, pc=None, preventOverride=None, po=None, rgbValue=None, rgb=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Creates a control capable of displaying a color swatch. This control can also accept a command to be called when the colour swatch is pressed by the user. 
    """
    pass


def ShowAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshSmearToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshSculptTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothDeleteCacheFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetNClothStartFromMesh(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostAccelerator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyMergeVertices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeTreeLister(addFavorite=None, af=None, addItem=None, add=None, addVnnItem=None, avi=None, annotation=None, ann=None, backgroundColor=None, bgc=None, clearContents=None, clr=None, collapsePath=None, cp=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, executeItem=None, ei=None, exists=None, ex=None, expandPath=None, ep=None, expandToDepth=None, etd=None, favoritesCallback=None, fcb=None, favoritesList=None, fl=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, itemScript=None, isc=None, manage=None, m=None, noBackground=None, nbg=None, nodeLibrary=None, nl=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, refreshCommand=None, rc=None, removeFavorite=None, rf=None, removeItem=None, rem=None, resultsPathUnderCursor=None, ruc=None, selectPath=None, sp=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, vnnString=None, vnn=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries the node tree lister control. nodeTreeLister is a treeLister, but items are assumed to have commands which return dependency node names.Dragging from the results pane is supported. 
    """
    pass


def ContentBrowserWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectUpStream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGuideRender(*args, **kwargs):
    """
    
    """
    pass


def subdDisplayMode(*args, **kwargs):
    """
    
    """
    pass


def SelectMaskToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def untangleUV(mapBorder=None, mb=None, maxRelaxIterations=None, mri=None, pinBorder=None, pb=None, pinSelected=None, ps=None, pinUnselected=None, pu=None, relax=None, r=None, relaxTolerance=None, rt=None, shapeDetail=None, sd=None, *args, **kwargs):
    """
    This command will aid in the creation of non-overlapping regions (i.e. polygons) in texture space by untangling texture UVs. This is done in two stages:
    """
    pass


def MakeHoleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonHelix(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleToolSettings(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmClumpBrushContext(*args, **kwargs):
    """
    
    """
    pass


def spBirailCtx(*args, **kwargs):
    """
    
    """
    pass


def keyframeRegionScaleKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, scaleSpecifiedKeys=None, ssk=None, type=None, typ=None, *args, **kwargs):
    """
    This command creates a context which may be used to scale keyframes within the keyframe region of the dope sheet editor 
    """
    pass


def nameCommand(annotation=None, ann=None, command=None, c=None, data1=None, da1=None, data2=None, da2=None, data3=None, da3=None, default=None, d=None, sourceType=None, stp=None, *args, **kwargs):
    """
    This command creates a nameCommand object. Each nameCommand object can be connected to a hotkey. Thereafter, the nameCommand's command string will be executed whenever the hotkey is pressed (or released, as specified by the user). 
    """
    pass


def FBXExportReferencedContainersContent(*args, **kwargs):
    """
    
    """
    pass


def sbs_SetEditionModeScale(*args, **kwargs):
    """
    
    """
    pass


def MoveLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rename(ignoreShape=None, ignoreShape=None, uuid=None, uid=None, *args, **kwargs):
    """
    Renames the given object to have the new name. If only one argument is supplied the command will rename the (first) selected object. If the new name conflicts with an existing name, the object will be given a unique name based on the supplied name. It is not legal to rename an object to the empty string. 
    """
    pass


def TogglePolyDisplaySoftEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynCache(*args, **kwargs):
    """
    Cache the current state of all particle shapes at the current time.
    """
    pass


def SelectHierarchy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickMotionBuilderSendToCurrentScene(*args, **kwargs):
    """
    
    """
    pass


def manipPivot(ori=None, o=None, oriValid=None, ov=None, pinPivot=None, pin=None, pos=None, p=None, posValid=None, pv=None, reset=None, r=None, resetOri=None, ro=None, resetPos=None, rp=None, snapOri=None, so=None, snapPos=None, sp=None, valid=None, v=None, *args, **kwargs):
    """
    Changes transform component pivot used by the move/rotate/scale manipulators.
    """
    pass


def renderPassRegistry(channels=None, ch=None, isPassSupported=None, ips=None, passID=None, pi=None, passName=None, pn=None, renderer=None, r=None, supportedChannelCounts=None, scc=None, supportedDataTypes=None, sdt=None, supportedPassSemantics=None, ps=None, supportedRenderPassNames=None, spn=None, supportedRenderPasses=None, srp=None, *args, **kwargs):
    """
    query information related with render passes.
    """
    pass


def MakePressureCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CycleIKHandleStickyState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PruneSmallWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikSplineHandleCtx(autoPriorityH=None, apH=None, createCurve=None, ccv=None, createRootAxis=None, cra=None, exists=None, ex=None, forceSolverH=None, fsH=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, numSpans=None, ns=None, parentCurve=None, pcv=None, poWeightH=None, pwH=None, priorityH=None, pH=None, rootOnCurve=None, roc=None, rootTwistMode=None, rtm=None, simplifyCurve=None, scv=None, snapCurve=None, snc=None, snapHandleH=None, snH=None, solverTypeH=None, stH=None, stickyH=None, sH=None, twistType=None, tws=None, weightH=None, wH=None, *args, **kwargs):
    """
    The ikSplineHandle context command (ikSplineHandleCtx) updates parameters of ikSplineHandle tool.The options for the tool will be set to the flags the user specifies. 
    """
    pass


def xgmAddGuide(*args, **kwargs):
    """
    
    """
    pass


def boxZoomCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, zoomScale=None, zs=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a box zoom context. If this context is used on a perspective camera, the field of view and view direction are changed. If the camera is orthographic, the orthographic width and eye point are changed. The left and middle mouse interactively zoom the view. The control key can be used to enable box zoom. A box starting from left to right will zoom in, and a box starting from right to left will zoom out. 
    """
    pass


def CreatePolygonTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPondDynamicLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveSkinJointsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NewScene(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBindingSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakePressureCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowAnimationUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectMaterialsFromObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyDuplicateAndConnect(removeOriginalFromShaders=None, ros=None, renameChildren=None, rc=None, *args, **kwargs):
    """
    This command duplicates the input polygonal object, connects up the outMesh attribute of the original polygonal shape to the inMesh attribute of the newly created duplicate shape and copies over the shader assignments from the original shape to the new duplicated shape. 
    """
    pass


def ProjectWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowWrapInfluences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rampWidget(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorIncreaseTraversalDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Delete(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def coarsenSubdivSelectionList(*args, **kwargs):
    """
    Coarsens a subdivision surface set of components based on the selection list. The selected components are selected at a coarser level.
    """
    pass


def SetFullBodyIKKeysBodyPart(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SymmetrizeUVBrushSizeOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostMotionField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolygonFaceCenters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParticleInstancer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sortCaseInsensitive(*args, **kwargs):
    """
    This command sorts all the strings of an array in a case insensitive way.
    """
    pass


def ModifyDisplacementPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def itemFilterAttr(byName=None, bn=None, byNameString=None, bns=None, byScript=None, bs=None, classification=None, cls=None, hasCurve=None, hc=None, hasDrivenKey=None, hdk=None, hasExpression=None, he=None, hidden=None, h=None, intersect=None, intersect=None, keyable=None, k=None, listBuiltInFilters=None, lbf=None, listOtherFilters=None, lof=None, listUserFilters=None, luf=None, negate=None, neg=None, parent=None, p=None, published=None, pub=None, readable=None, r=None, scaleRotateTranslate=None, srt=None, secondScript=None, ss=None, text=None, t=None, union=None, un=None, writable=None, w=None, *args, **kwargs):
    """
    This command creates a named itemFilterAttr object.This object can be attached to editors, in order to filter the attributes going through them. Using union and intersection filters, complex composite filters can be created. 
    """
    pass


def OutlinerToggleOrganizeByLayer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def caddyManip(*args, **kwargs):
    """
    
    """
    pass


def InsertEdgeLoopToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryMergeCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyEvaluate(accurateEvaluation=None, ae=None, area=None, a=None, boundingBox=None, b=None, boundingBox2d=None, b2=None, boundingBoxComponent=None, bc=None, boundingBoxComponent2d=None, bc2=None, displayStats=None, ds=None, edge=None, e=None, edgeComponent=None, ec=None, face=None, f=None, faceComponent=None, fc=None, format=None, fmt=None, shell=None, s=None, triangle=None, t=None, triangleComponent=None, tc=None, uvComponent=None, uvc=None, uvSetName=None, uvs=None, uvcoord=None, uv=None, vertex=None, v=None, vertexComponent=None, vc=None, worldArea=None, wa=None, *args, **kwargs):
    """
    Returns the required counts on the specified objects. 
    """
    pass


def polySelectEditCtx(mode=None, m=None, *args, **kwargs):
    """
    Create a new context to select and edit polygonal objects
    """
    pass


def sbs_GetPackageFullPathNameFromSubstanceNode(*args, **kwargs):
    """
    
    """
    pass


def polySetToFaceNormal(setUserNormal=None, su=None, *args, **kwargs):
    """
    This command takes selected polygonal vertices or vertex-faces and changes their normals. If the option 
    """
    pass


def FBXExportSmoothMesh(*args, **kwargs):
    """
    
    """
    pass


def polySeparate(object=None, o=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates new objects from the given poly. A new object will be created for each section of the mesh that is distinct (no edges connect it to the rest of the mesh). 
    """
    pass


def CreateSpringOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostCollider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveInitialState(attribute=None, atr=None, saveall=None, all=None, *args, **kwargs):
    """
    saveInitialState saves the current state of dynamics objects as the initial state.A dynamic object is a particle shape, rigid body, rigid constraint or rigid solver.If no objects are specified, it saves the initial state for any selected objects. It returns the names of the objects for which initial state was saved. 
    """
    pass


def dR_setRelaxAffectsBorders(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetReflectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def launch(directory=None, dir=None, movie=None, mov=None, pdfFile=None, pdf=None, webPage=None, web=None, *args, **kwargs):
    """
    Launch the appropriate application to open the document, web page or directory specified. 
    """
    pass


def xgmDataQueryHelperForTest(*args, **kwargs):
    """
    
    """
    pass


def RotateToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrControlGrp(annotation=None, ann=None, attribute=None, a=None, changeCommand=None, cc=None, enable=None, en=None, handlesAttribute=None, ha=None, hideMapButton=None, hmb=None, label=None, l=None, preventOverride=None, po=None, *args, **kwargs):
    """
    This command creates a control of the type most appropriate for the specified attribute, and associates the control with the attribute. Any change to the control will cause a change in the attribute value, and any change to the attribute value will be reflected in the control. Not all attribute types are supported.
    """
    pass


def ModifyOpacityRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clearDynStartState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def paramDimension(*args, **kwargs):
    """
    This command is used to create a param dimension to display the parameter value of a curve/surface at a specified point on the curve/surface. 
    """
    pass


def applyTake(channel=None, c=None, device=None, d=None, filter=None, f=None, preview=None, p=None, recurseChannel=None, rc=None, reset=None, r=None, specifyChannel=None, sc=None, startTime=None, st=None, *args, **kwargs):
    """
    This command takes data in a device (refered to as a take) and converts it into a form that may be played back and reviewed. The take can either be imported through the readTake action, or recorded by the recordDevice action. The take is either converted into animation curves or if the -preview flag is used, into blendDevice nodes. 
    """
    pass


def MoveRotateScaleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TextureViewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FitBSpline(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXResamplingRate(*args, **kwargs):
    """
    
    """
    pass


def dR_hypershadeTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_gridSnapPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def muMessageQuery(*args, **kwargs):
    """
    
    """
    pass


def FBXExportApplyConstantKeyReducer(*args, **kwargs):
    """
    
    """
    pass


def SelectFacePath(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExportSelectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSaveSwatchesToDisk(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AbortCurrentTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def collision(friction=None, f=None, name=None, n=None, resilience=None, r=None, *args, **kwargs):
    """
    The collision command causes particles to collide with geometry. It also allows you to specify values for the surface properties (friction and resilience) of the collision.These values are stored in the geoConnector node for the geometry object.Unlike earlier versions of Maya, there is no separate "collision node." 
    """
    pass


def TexSewDeactivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def makePaintable(activate=None, ac=None, activateAll=None, aca=None, altAttribute=None, aa=None, attrType=None, at=None, clearAll=None, ca=None, remove=None, rm=None, shapeMode=None, sm=None, uiName=None, ui=None, *args, **kwargs):
    """
    Make attributes of nodes paintable to Attribute Paint Tool. This command is used to register new attributes to the Attribute Paint tool as paintable. Once registered the attributes will be recognized by the Attribute Paint tool and the user will be able to paint them.
    """
    pass


def licenseCheck(*args, **kwargs):
    """
    
    """
    pass


def RemoveLatticeTweaks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMultiLayoutUV(flipReversed=None, fr=None, gridU=None, gu=None, gridV=None, gv=None, layout=None, l=None, layoutMethod=None, lm=None, offsetU=None, ou=None, offsetV=None, ov=None, percentageSpace=None, ps=None, prescale=None, psc=None, rotateForBestFit=None, rbf=None, scale=None, sc=None, sizeU=None, su=None, sizeV=None, sv=None, uvSetName=None, uvs=None, *args, **kwargs):
    """
    place the UVs of the selected polygonal objects so that they do not overlap.
    """
    pass


def HypershadePublishConnections(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def showHelp(absolute=None, a=None, docs=None, d=None, helpTable=None, ht=None, version=None, v=None, *args, **kwargs):
    """
    Invokes a web browser to open the on-line documentation and help files. It will open the help page for a given topic, or open a browser to a specific URL.
    """
    pass


def polySelectSp(*args, **kwargs):
    """
    
    """
    pass


def AssignTemplateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ViewAlongAxisX(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ViewAlongAxisZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def distanceDimContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Command used to register the distanceDimCtx tool.
    """
    pass


def ATOMTemplateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AppendToPolygonToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintCacheTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleBackfaceGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGraphNoShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_mtkToolTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdAutoProjection(constructionHistory=None, ch=None, layout=None, l=None, layoutMethod=None, lm=None, name=None, n=None, optimize=None, o=None, percentageSpace=None, ps=None, planes=None, p=None, scale=None, sc=None, skipIntersect=None, si=None, worldSpace=None, ws=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Projects a texture map onto an object, using several orthogonal projections simultaneously. 
    """
    pass


def AddPfxToHairSystem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynPref(autoCreate=None, ac=None, echoCollision=None, ec=None, runupFrom=None, rf=None, runupToCurrentTime=None, rt=None, saveOnQuit=None, sq=None, saveRuntimeState=None, sr=None, *args, **kwargs):
    """
    This action modifies and queries the current state of "autoCreate rigid bodies", "run up to current time", and"run up from" (previous time or start time). 
    """
    pass


def waitCursor(state=None, st=None, *args, **kwargs):
    """
    This command sets/resets a wait cursor for the entire Maya application. This works as a stack, such that for each 
    """
    pass


def FBXUIShowOptions(*args, **kwargs):
    """
    
    """
    pass


def hwRenderLoad(*args, **kwargs):
    """
    Empty command used to force the dynamic load of HR render
    """
    pass


def RemoveBifrostAdaptiveMesh(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivToNURBSOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnfoldUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostGuide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteCurrentColorSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UpdateCurrentScene3dsMax(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RelaxInitialStateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateTextureDeformer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def choice(attribute=None, at=None, controlPoints=None, cp=None, index=None, index=None, name=None, n=None, selector=None, sl=None, shape=None, s=None, sourceAttribute=None, sa=None, time=None, t=None, *args, **kwargs):
    """
    The choice command provides a mechanism for changing the inputs to an attribute based on some (usually time-based) criteria. For example, an object could be animated from frames 1 to 30 by a motion path, then from frames 30 to 50 it follows keyframe animation, and after frame 50 it returns to the motion path. Or, a revolve surface could change its input curve depending on some transform's rotation value.
    """
    pass


def OutlinerToggleReferenceMembers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SendToUnityAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MovePolygonComponent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def objectType(isAType=None, isa=None, isType=None, i=None, tagFromType=None, tgt=None, typeFromTag=None, tpt=None, typeTag=None, tt=None, *args, **kwargs):
    """
    This command returns the type of elements. Warning: This command is incomplete and may not be supported by all object types. 
    """
    pass


def AbcExport(*args, **kwargs):
    """
    
    """
    pass


def polyFlipUV(createNewMap=None, cm=None, flipType=None, ft=None, insertBeforeDeformers=None, ibd=None, local=None, l=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Flip (mirror) the UVs (in texture space) of input polyFaces, about either the U or V axis.. 
    """
    pass


def ShowFkSkeleton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BatchBakeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyPipeCtx(*args, **kwargs):
    """
    
    """
    pass


def SnapToGrid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddSelectionAsCombinationTargetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scriptEditorInfo(clearHistory=None, ch=None, clearHistoryFile=None, chf=None, historyFilename=None, hfn=None, input=None, i=None, suppressErrors=None, se=None, suppressInfo=None, si=None, suppressResults=None, sr=None, suppressStackWindow=None, ssw=None, suppressWarnings=None, sw=None, writeHistory=None, wh=None, *args, **kwargs):
    """
    Use this command to directly manipulate and query the contents of the Command Window window. 
    """
    pass


def GravityOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderFlagsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Extrude(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def propMove(percent=None, p=None, percentX=None, px=None, percentY=None, py=None, percentZ=None, pz=None, pivot=None, pi=None, rotate=None, r=None, scale=None, s=None, translate=None, t=None, *args, **kwargs):
    """
    Performs a proportional translate, scale or rotate operation on any number of objects. The percentages to rotate, scale or translate by can be specified using either the -p flags or -px, -py, -pz flags. Each selected object must have a corresponding -p or -px, -py, -pz flag. The rotate, scale or translate performed is relative. 
    """
    pass


def SetStrokeControlCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_vertUnlockAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCBoolOp(object=None, o=None, operation=None, op=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a new poly as the result of a boolean operation on input polys : union, intersection, difference. 
    """
    pass


def XgGroomingVis(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def meshReorderContext(*args, **kwargs):
    """
    
    """
    pass


def GraphCut(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def panZoomCtx(alternateContext=None, ac=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, panMode=None, pm=None, toolName=None, tn=None, zoomMode=None, zm=None, zoomScale=None, zs=None, *args, **kwargs):
    """
    This command can be used to create camera 2D pan/zoom context. 
    """
    pass


def displaySurface(flipNormals=None, flp=None, twoSidedLighting=None, two=None, xRay=None, x=None, *args, **kwargs):
    """
    This command toggles display options on the specified or active surfaces. Typically this command applies to NURBS or poly mesh surfaces and ignores other type of objects. 
    """
    pass


def SquareSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveShrinkWrapInnerObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentSpline(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def help(documentation=None, doc=None, language=None, lng=None, list=None, l=None, popupDisplayTime=None, pdt=None, popupMode=None, pm=None, popupPauseTime=None, ppt=None, popupSimpleMode=None, psm=None, rolloverMode=None, rm=None, syntaxOnly=None, so=None, *args, **kwargs):
    """
    With no arguments, help tells how to use help. If a command name is specified, help will return the quick help for that command. Other flags can be used to open the online documentation, or to list available commands based on a pattern. 
    """
    pass


def treeView(addItem=None, ai=None, allowDragAndDrop=None, adr=None, allowHiddenParents=None, ahp=None, allowMultiSelection=None, ams=None, allowReparenting=None, arp=None, annotation=None, ann=None, attachButtonRight=None, abr=None, backgroundColor=None, bgc=None, borderHighlite=None, bh=None, borderHighliteColor=None, bcl=None, buttonErase=None, bef=None, buttonState=None, bst=None, buttonStyle=None, bs=None, buttonTextIcon=None, bti=None, buttonTooltip=None, btp=None, buttonTransparencyColor=None, btc=None, buttonTransparencyOverride=None, bto=None, buttonVisible=None, bvf=None, children=None, ch=None, clearSelection=None, cs=None, contextMenuCommand=None, cmc=None, defineTemplate=None, dt=None, displayLabel=None, dl=None, displayLabelSuffix=None, dls=None, docTag=None, dtg=None, dragAndDropCommand=None, dad=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editLabelCommand=None, elc=None, enable=None, en=None, enableBackground=None, ebg=None, enableButton=None, eb=None, enableKeys=None, enk=None, enableLabel=None, enl=None, exists=None, ex=None, expandCollapseCommand=None, ecc=None, expandItem=None, ei=None, font=None, fn=None, fontFace=None, ff=None, fullPathName=None, fpn=None, height=None, h=None, hideButtons=None, hb=None, highlightColor=None, hlc=None, highlite=None, hl=None, highliteColor=None, hc=None, ignoreButtonClick=None, ibc=None, image=None, i=None, isItemExpanded=None, iie=None, isLeaf=None, il=None, isObscured=None, io=None, item=None, it=None, itemAnnotation=None, ia=None, itemDblClickCommand=None, idc=None, itemDblClickCommand2=None, dc2=None, itemExists=None, iex=None, itemIndex=None, idx=None, itemParent=None, ip=None, itemRenamedCommand=None, irc=None, itemSelected=None, isl=None, itemVisible=None, iv=None, labelBackgroundColor=None, lbc=None, manage=None, m=None, noBackground=None, nbg=None, numberOfButtons=None, nb=None, numberOfPopupMenus=None, npm=None, ornament=None, ornament=None, ornamentColor=None, orc=None, parent=None, p=None, popupMenuArray=None, pma=None, pressCommand=None, pc=None, preventOverride=None, po=None, removeAll=None, ra=None, removeItem=None, ri=None, reverseTreeOrder=None, rto=None, rightPressCommand=None, rpc=None, selectCommand=None, sc=None, selectItem=None, si=None, selectionChangedCommand=None, scc=None, selectionColor=None, scl=None, showItem=None, shi=None, textColor=None, tc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a custom control. 
    """
    pass


def polyToSubdiv(absolutePosition=None, ap=None, applyMatrixToResult=None, amr=None, maxEdgesPerVert=None, me=None, maxPolyCount=None, mpc=None, preserveVertexOrdering=None, pvo=None, quickConvert=None, qc=None, uvPoints=None, uvp=None, uvPointsU=None, uvu=None, uvPointsV=None, uvv=None, uvTreatment=None, uvt=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command converts a polygon and produces a subd surface. The name of the new subdivision surface is returned. If construction history is ON, then the name of the new dependency node is returned as well. 
    """
    pass


def enableDevice(apply=None, a=None, device=None, d=None, enable=None, en=None, monitor=None, m=None, record=None, rec=None, *args, **kwargs):
    """
    Sets (or queries) the device enable state for actions involving the device. 
    """
    pass


def PolygonCollapse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def assignInputDevice(clutch=None, c=None, continuous=None, ct=None, device=None, d=None, immediate=None, im=None, multiple=None, m=None, *args, **kwargs):
    """
    This command associates a command string (i.e. a mel script) with the input device.When the device moves or a button on the device is pressed, the command string is executed as if you typed it into the window.If the command string contains the names of buttons or axes of the device, the current value of these buttons/axes are substituted in.Buttons are reported as booleans and axes as doubles. 
    """
    pass


def ShowSelectedObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editMetadata(memberName=None, mn=None, remove=None, rem=None, stringValue=None, sv=None, value=None, v=None, channelName=None, cn=None, channelType=None, cht=None, endIndex=None, eix=None, index=None, idx=None, indexType=None, idt=None, scene=None, scn=None, startIndex=None, six=None, streamName=None, stn=None, *args, **kwargs):
    """
    
    """
    pass


def EnableFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SaveFluidStateAs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyConstraintAxisOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerRevealSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCollapseFacet(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Turns each selected facet into a point.
    """
    pass


def xgmGuideGeom(*args, **kwargs):
    """
    
    """
    pass


def modelingToolkitSuperCtx(*args, **kwargs):
    """
    
    """
    pass


def ArtPaintBlendShapeWeightsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectContainerContents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClosestPointOnOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikHandleDisplayScale(*args, **kwargs):
    """
    This action modifies and queries the current display size of ikHandle. The default display scale is 1.0. 
    """
    pass


def timeEditorClip(absolute=None, abs=None, addAttribute=None, aa=None, allowShrinking=None, eas=None, animSource=None, asr=None, audio=None, au=None, children=None, chl=None, clipAfter=None, ca=None, clipBefore=None, cb=None, clipDataType=None, cdt=None, clipId=None, id=None, clipIdFromNodeName=None, idn=None, clipIdFromPath=None, idp=None, clipNode=None, cln=None, clipPath=None, clp=None, copyClip=None, ccl=None, crossfadeMode=None, cfm=None, crossfadePlug=None, cfp=None, curveTime=None, cvt=None, defaultGhostRoot=None, dgr=None, drivenAttributes=None, dat=None, drivenClipsBySource=None, dcs=None, drivenObjects=None, dos=None, drivingSources=None, dsc=None, duplicateClip=None, dcl=None, duration=None, d=None, emptySource=None, ems=None, endTime=None, et=None, existingOnly=None, exo=None, exists=None, exs=None, explode=None, epl=None, exportAllClips=None, eac=None, exportFbx=None, ef=None, extend=None, ex=None, extendParent=None, exp=None, extendParents=None, xcp=None, ghost=None, gh=None, ghostRootAdd=None, gra=None, ghostRootRemove=None, grr=None, group=None, grp=None, holdEnd=None, he=None, holdStart=None, hs=None, importTakeDestination=None, itd=None, isContainer=None, ict=None, listUserGhostRoot=None, lug=None, loopEnd=None, le=None, loopStart=None, ls=None, minClipDuration=None, mcd=None, modifyAnimSource=None, mas=None, moveClip=None, mcl=None, mute=None, m=None, name=None, n=None, parent=None, p=None, parentClipId=None, pid=None, parentGroupId=None, pgd=None, pasteClip=None, pcl=None, path=None, pt=None, preserveAnimationTiming=None, pat=None, razorClip=None, rcl=None, remap=None, rmp=None, remapSource=None, rs=None, remappedSourceAttrs=None, rms=None, remappedTargetAttrs=None, rmt=None, removeAttribute=None, ra=None, removeClip=None, rmc=None, removeCrossfade=None, rcf=None, removeWeightCurve=None, rwc=None, resetTiming=None, rt=None, resetTransition=None, rtr=None, ripple=None, rpl=None, rootClipId=None, rti=None, rootPath=None, rpt=None, scaleEnd=None, sce=None, scalePivot=None, scp=None, scaleStart=None, scs=None, setKeyframe=None, k=None, speedRamping=None, src=None, startTime=None, s=None, timeWarp=None, tw=None, timeWarpCurve=None, twc=None, timeWarpType=None, twt=None, track=None, trk=None, tracksNode=None, trn=None, transition=None, tra=None, trimEnd=None, tre=None, trimStart=None, trs=None, truncated=None, trc=None, uniqueAnimSource=None, uas=None, userGhostRoot=None, ugr=None, weightCurve=None, wc=None, zeroKeying=None, zk=None, addObjects=None, ao=None, addRelatedKG=None, akg=None, addSelectedObjects=None, aso=None, attribute=None, at=None, exclusive=None, exc=None, importAllFbxTakes=None, aft=None, importFbx=None, fbx=None, importFbxTakes=None, ft=None, importMayaFile=None, mf=None, importOption=None, io=None, importPopulateOption=None, ipo=None, importedContainerNames=None, icn=None, includeRoot=None, irt=None, populateImportedAnimSources=None, pia=None, poseClip=None, poc=None, recursively=None, rec=None, removeSceneAnimation=None, rsa=None, showAnimSourceRemapping=None, sar=None, takeList=None, tl=None, takesToImport=None, toi=None, type=None, typ=None, *args, **kwargs):
    """
    This command edits/queries Time Editor clips.
    """
    pass


def xgmWrapXGen(*args, **kwargs):
    """
    
    """
    pass


def polyConnectComponents(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Splits polygon edges according to the selected components. The selected components are gathered into connected 'paths' that define continuous splits. Mixed components (vertices, edges and faces) can be used at once. The connection rules are: * Edges can connect to other edges in the same face or to vertices in the same face (that are not in the edge itself) or to faces connected to other edges in the same face. * Vertices can connect to edges (as above) or to vertices in the same face (that are not joined to the first vertex by an edge) or to faces adjacent to a face that uses the vertex (except those that also use the vertex). * Faces can connect to vertices or edges (as above) or to adjacent faces. 
    """
    pass


def MirrorCutPolygonGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlanarProjectionOptions(*args, **kwargs):
    """
    unknown
    """
    pass


def FreezeTransformationsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveViewportSettings(*args, **kwargs):
    """
    This command causes all the 3d views to save their settings as optionVar's. This is called automatically by the system when Maya exits. 
    """
    pass


def HypershadeShowCustomAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleNodeTitleMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePondOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xpmPicker(fileName=None, fn=None, parent=None, p=None, *args, **kwargs):
    """
    Open a dialog and ask you to choose a xpm file
    """
    pass


def manipComponentPivot(*args, **kwargs):
    """
    
    """
    pass


def GraphCopyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReverseCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def batchRender(filename=None, f=None, melCommand=None, mc=None, numProcs=None, n=None, preRenderCommand=None, prc=None, remoteRenderMachine=None, rm=None, renderCommandOptions=None, rco=None, showImage=None, si=None, useRemoteRender=None, um=None, useStandalone=None, us=None, verbosity=None, v=None, *args, **kwargs):
    """
    The batchRender command is used to spawn off a separate rendering session of the current maya file. If no mayaFile is specified, it'll ask you whether you want the current job killed. 
    """
    pass


def CharacterMapper(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Art3dPaintTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParentOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def resetTool(*args, **kwargs):
    """
    This command resets a tool back to its "factory settings"
    """
    pass


def subdCleanTopology(*args, **kwargs):
    """
    Command cleans topology of subdiv surfaces - at all levels. It cleans the geometry of vertices that satisfy the following conditions:- Zero edits- Default uvs (uvs obtained by subdividing parent face).- No creases.
    """
    pass


def convertSolidTx(alpha=None, al=None, antiAlias=None, aa=None, backgroundColor=None, bc=None, backgroundMode=None, bm=None, camera=None, cam=None, componentRange=None, cr=None, doubleSided=None, ds=None, fileFormat=None, fil=None, fileImageName=None, fin=None, fillTextureSeams=None, fts=None, force=None, f=None, fullUvRange=None, fur=None, name=None, n=None, pixelFormat=None, pf=None, resolutionX=None, rx=None, resolutionY=None, ry=None, reuseDepthMap=None, rdm=None, samplePlane=None, sp=None, samplePlaneRange=None, spr=None, shadows=None, sh=None, uvBBoxIntersect=None, ubi=None, uvRange=None, uvr=None, uvSetName=None, uv=None, *args, **kwargs):
    """
    Command to convert a texture on a surface to a file texture. The first argument is a rendering node or attribute. If only the node is specified, the outColor attribute will be sampled. If the node does not have an outColor attribute, the first attribute on the node which is: readable, not writable, not hidden, connectable, and not a multi is used. If lighting is to be baked, a shading group must be specified as the texture. 
    """
    pass


def nClothMakeCollideOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFBIKEffectorsRotatePinState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlipUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkRightSelect(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nameField(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, drawInactiveFrame=None, dif=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, nameChangeCommand=None, ncc=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, object=None, o=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, receiveFocusCommand=None, rfc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates an editable field that can be linked to the name of a Maya object. The field will always show the name of the object. 
    """
    pass


def UnmirrorSmoothProxyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonSoftenHardenOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CVHardnessOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def modelCurrentTimeCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, percent=None, per=None, *args, **kwargs):
    """
    This command creates a context which may be used to change current time within the model views. 
    """
    pass


def UnlockCurveLength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Lightning(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PreInfinityCycle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRenameActiveTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def playblast(activeEditor=None, ae=None, cameraSetup=None, cs=None, clearCache=None, cc=None, codecOptions=None, co=None, combineSound=None, csd=None, completeFilename=None, cf=None, compression=None, c=None, editorPanelName=None, epn=None, endTime=None, et=None, filename=None, f=None, forceOverwrite=None, fo=None, format=None, fmt=None, frame=None, fr=None, framePadding=None, fp=None, height=None, h=None, indexFromZero=None, ifz=None, offScreen=None, os=None, options=None, o=None, percent=None, p=None, quality=None, qlt=None, rawFrameNumbers=None, rfn=None, replaceAudioOnly=None, rao=None, replaceEndTime=None, ret=None, replaceFilename=None, rf=None, replaceStartTime=None, rst=None, sequenceTime=None, sqt=None, showOrnaments=None, orn=None, sound=None, s=None, startTime=None, st=None, viewer=None, v=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    This command playblasts the current playback range. Sound is optional. 
    """
    pass


def NodeEditorPinSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hilite(replace=None, r=None, toggle=None, tgl=None, unHilite=None, u=None, *args, **kwargs):
    """
    Hilites/Unhilites the specified object(s).Hiliting an object makes it possible to select the components of the object.If no objects are specified then the selection list is used. 
    """
    pass


def AddSelectionAsTargetShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmLengthBrushContext(*args, **kwargs):
    """
    
    """
    pass


def containerView(itemInfo=None, ii=None, itemList=None, il=None, viewDescription=None, vd=None, viewLabel=None, vb=None, viewList=None, vl=None, viewName=None, vn=None, *args, **kwargs):
    """
    A container view defines the layout information for the published attributes of a particular container.Container views can be selected from a set of built-in views or may be defined on an associated container template. This command queries the view-related information for a container node. The information returned from this command will be based on the view-related settings in force on the container node at the time of the query (i.e. the container's view mode, template name, view name attributes).
    """
    pass


def listInputDeviceAxes(*args, **kwargs):
    """
    This command lists all of the axes of the specified input device. 
    """
    pass


def SculptReferenceVectorMarkingMenuRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleWeightSave(*args, **kwargs):
    """
    
    """
    pass


def SelectAllLattices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TexSculptActivateBrushStrength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Newton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetCutBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRenderPerspLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMarkers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RetimeKeysToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def radial(attenuation=None, att=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, type=None, typ=None, *args, **kwargs):
    """
    A radial field pushes objects directly towards or directly away from it, like a magnet. 
    """
    pass


def dR_selConstraintElement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def U3DBrushPressureOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def roundConstantRadius(append=None, a=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, radiuss=None, rad=None, side=None, s=None, sidea=None, sa=None, sideb=None, sb=None, *args, **kwargs):
    """
    This command generates constant radius NURBS fillets and NURBS corner surfaces for matching edge pairs on NURBS surfaces.An edge pair is a matching pair of surface isoparms or trim edges. This command can handle more than one edge pair at a time. This command can also handle 
    """
    pass


def RenderViewNextImage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorSetKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IncreaseExposureCoarse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def openMayaPref(errlog=None, el=None, lazyLoad=None, lz=None, oldPluginWarning=None, ow=None, *args, **kwargs):
    """
    Set or query API preferences.
    """
    pass


def renderInfo(castShadows=None, cs=None, chordHeight=None, ch=None, chordHeightRatio=None, chr=None, doubleSided=None, ds=None, edgeSwap=None, es=None, minScreen=None, ms=None, opposite=None, o=None, smoothShading=None, ss=None, unum=None, un=None, useChordHeight=None, uch=None, useChordHeightRatio=None, ucr=None, useDefaultLights=None, udl=None, useMinScreen=None, ums=None, utype=None, ut=None, vnum=None, vn=None, vtype=None, vt=None, *args, **kwargs):
    """
    The renderInfo commands sets geometric properties of surfaces of the selected object. 
    """
    pass


def DeleteAllIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetDensityBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reorderContainer(back=None, b=None, front=None, f=None, relative=None, r=None, *args, **kwargs):
    """
    This command reorders (moves) objects relative to their siblings in a container. 
    """
    pass


def TranslateToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_connectRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentPlateau(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportAnimationOnly(*args, **kwargs):
    """
    
    """
    pass


def NamespaceEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MirrorSubdivSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def checkBoxGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, changeCommand1=None, cc1=None, changeCommand2=None, cc2=None, changeCommand3=None, cc3=None, changeCommand4=None, cc4=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enable1=None, en1=None, enable2=None, en2=None, enable3=None, en3=None, enable4=None, en4=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, label1=None, l1=None, label2=None, l2=None, label3=None, l3=None, label4=None, l4=None, labelArray2=None, la2=None, labelArray3=None, la3=None, labelArray4=None, la4=None, manage=None, m=None, noBackground=None, nbg=None, numberOfCheckBoxes=None, ncb=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, offCommand1=None, of1=None, offCommand2=None, of2=None, offCommand3=None, of3=None, offCommand4=None, of4=None, onCommand=None, onc=None, onCommand1=None, on1=None, onCommand2=None, on2=None, onCommand3=None, on3=None, onCommand4=None, on4=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, useTemplate=None, ut=None, value1=None, v1=None, value2=None, v2=None, value3=None, v3=None, value4=None, v4=None, valueArray2=None, va2=None, valueArray3=None, va3=None, valueArray4=None, va4=None, vertical=None, vr=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def event(count=None, ct=None, delete=None, d=None, dieAtCollision=None, die=None, emit=None, em=None, list=None, ls=None, name=None, n=None, proc=None, pr=None, random=None, r=None, rename=None, re=None, select=None, s=None, split=None, spl=None, spread=None, sp=None, target=None, t=None, *args, **kwargs):
    """
    The event command assigns collision events to a particle object. Collision events are stored in multi-attributes in the particle shape. The event command returns the event name. 
    """
    pass


def UnpublishAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenCloseSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def simplify(animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, float=None, f=None, floatTolerance=None, ft=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, shape=None, s=None, time=None, t=None, timeTolerance=None, tt=None, valueTolerance=None, vt=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def renderWindowEditor(autoResize=None, ar=None, blendMode=None, blm=None, caption=None, cap=None, changeCommand=None, cc=None, clear=None, cl=None, cmEnabled=None, cme=None, colorManage=None, com=None, compDisplay=None, cd=None, compImageFile=None, cif=None, control=None, ctl=None, currentCamera=None, crc=None, currentCameraRig=None, crg=None, defineTemplate=None, dt=None, displayImage=None, di=None, displayImageViewCount=None, dvc=None, displayStyle=None, dst=None, docTag=None, dtg=None, doubleBuffer=None, dbf=None, drawAxis=None, da=None, editorName=None, en=None, exists=None, ex=None, exposure=None, exp=None, filter=None, f=None, forceMainConnection=None, fmc=None, frameImage=None, fi=None, frameRegion=None, fr=None, gamma=None, ga=None, highlightConnection=None, hlc=None, loadImage=None, li=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, marquee=None, mq=None, nbImages=None, nim=None, nextViewImage=None, nvi=None, panel=None, pnl=None, parent=None, p=None, pcaption=None, pca=None, realSize=None, rs=None, refresh=None, ref=None, removeAllImages=None, ra=None, removeImage=None, ri=None, resetRegion=None, rr=None, resetViewImage=None, rvi=None, saveImage=None, si=None, scaleBlue=None, sb=None, scaleGreen=None, sg=None, scaleRed=None, sr=None, selectionConnection=None, slc=None, showRegion=None, srg=None, singleBuffer=None, sbf=None, snapshot=None, snp=None, stateString=None, sts=None, stereo=None, s=None, stereoImageOrientation=None, sio=None, stereoMode=None, sm=None, toggle=None, tgl=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, viewImageCount=None, vic=None, viewTransformName=None, vtn=None, writeImage=None, wi=None, *args, **kwargs):
    """
    Create a editor window that can receive the result of the rendering process 
    """
    pass


def SubdivSurfaceCleanTopology(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_symmetrize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def copyDeformerWeights(destinationDeformer=None, dd=None, destinationShape=None, ds=None, mirrorInverse=None, mi=None, mirrorMode=None, mm=None, noMirror=None, nm=None, smooth=None, sm=None, sourceDeformer=None, sd=None, sourceShape=None, ss=None, surfaceAssociation=None, sa=None, uvSpace=None, uv=None, *args, **kwargs):
    """
    Command to copy or mirror the deformer weights accross oneof the three major axes.The command can be used to mirrorweights either from one surface to another or within thesame surface.
    """
    pass


def rebuildSurface(degreeU=None, du=None, degreeV=None, dv=None, direction=None, dir=None, endKnots=None, end=None, fitRebuild=None, fr=None, keepControlPoints=None, kcp=None, keepCorners=None, kc=None, keepRange=None, kr=None, rebuildType=None, rt=None, spansU=None, su=None, spansV=None, sv=None, tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command rebuilds a surface by modifying its parameterization. In some cases the shape of the surface may also change. The rebuildType (-rt) attribute determines how the surface is rebuilt. 
    """
    pass


def FloodSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentFixed(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectObjectsWithMaterials(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def characterizationToolUICmd(*args, **kwargs):
    """
    
    """
    pass


def listSets(allSets=None, allSets=None, extendToShape=None, ets=None, object=None, o=None, type=None, t=None, *args, **kwargs):
    """
    The listSets command is used to get a list of all the sets an object belongs to. To get sets of a specific type for an object use the type flag as well. 
    """
    pass


def polyColorPerVertex(alpha=None, a=None, clamped=None, cla=None, colorB=None, b=None, colorDisplayOption=None, cdo=None, colorG=None, g=None, colorR=None, r=None, colorRGB=None, rgb=None, notUndoable=None, nun=None, relative=None, rel=None, remove=None, rem=None, representation=None, rpt=None, *args, **kwargs):
    """
    Command associates color(rgb and alpha) with vertices on polygonal objects. When used with the query flag, it returns the color associated with the specified components.
    """
    pass


def TimeEditorMuteSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Revolve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeChannel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttributeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_setRelaxAffectsAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def showHidden(above=None, a=None, allObjects=None, all=None, below=None, b=None, lastHidden=None, lh=None, *args, **kwargs):
    """
    The 
    """
    pass


def displaySmoothness(all=None, all=None, boundary=None, bn=None, defaultCreation=None, dc=None, divisionsU=None, du=None, divisionsV=None, dv=None, full=None, f=None, hull=None, hl=None, pointsShaded=None, ps=None, pointsWire=None, pw=None, polygonObject=None, po=None, renderTessellation=None, rt=None, simplifyU=None, su=None, simplifyV=None, sv=None, *args, **kwargs):
    """
    This command is responsible for setting the display smoothness of NURBS curves and surfaces to either predefined or custom values. It also sets display modes for smoothness such as hulls and the hull simplification factors. At present, this command is NOT un-doable. 
    """
    pass


def dagCommandWrapper(*args, **kwargs):
    """
    
    """
    pass


def polyReduce(cachingReduce=None, cr=None, colorWeights=None, cwt=None, compactness=None, com=None, geomWeights=None, gwt=None, invertVertexWeights=None, iwt=None, keepBorder=None, kb=None, keepBorderWeight=None, kbw=None, keepColorBorder=None, kcb=None, keepColorBorderWeight=None, kcw=None, keepCreaseEdge=None, kce=None, keepCreaseEdgeWeight=None, cew=None, keepFaceGroupBorder=None, kfb=None, keepFaceGroupBorderWeight=None, kfw=None, keepHardEdge=None, khe=None, keepHardEdgeWeight=None, khw=None, keepMapBorder=None, kmb=None, keepMapBorderWeight=None, kmw=None, keepOriginalVertices=None, kev=None, keepQuadsWeight=None, kqw=None, percentage=None, p=None, preserveLocation=None, pl=None, preserveTopology=None, top=None, replaceOriginal=None, rpo=None, sharpness=None, shp=None, symmetryPlaneW=None, sw=None, symmetryPlaneX=None, sx=None, symmetryPlaneY=None, sy=None, symmetryPlaneZ=None, sz=None, symmetryTolerance=None, stl=None, termination=None, trm=None, triangleCount=None, tct=None, triangulate=None, t=None, useVirtualSymmetry=None, uvs=None, uvWeights=None, uwt=None, version=None, ver=None, vertexCount=None, vct=None, vertexMapName=None, vmp=None, vertexWeightCoefficient=None, vwc=None, weightCoefficient=None, wc=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Simplify a polygonal object by reducing geometry while preserving the overall shape of the mesh. 
    """
    pass


def tumbleCtx(alternateContext=None, ac=None, autoOrthoConstrain=None, aoc=None, autoSetPivot=None, asp=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, localTumble=None, lt=None, name=None, n=None, objectTumble=None, ot=None, orthoLock=None, ol=None, orthoStep=None, os=None, toolName=None, tn=None, tumbleScale=None, ts=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a tumble context. 
    """
    pass


def RenderViewWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EmptyAnimLayer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def uvLink(b=None, b=None, isValid=None, iv=None, make=None, m=None, queryObject=None, qo=None, texture=None, t=None, uvSet=None, uvs=None, *args, **kwargs):
    """
    This command is used to make, break and query UV linking relationships between UV sets on objects and textures that use those UV sets. 
    """
    pass


def PoleVectorConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renameUI(*args, **kwargs):
    """
    This command renames the UI object passed as first arument to the new name specified as second argument. If the new name is a duplicate, or not valid, then re-naming fails and the old name is returned. 
    """
    pass


def AnimationSnapshot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSplineSetCurrentDescription(*args, **kwargs):
    """
    
    """
    pass


def ToggleUVIsolateViewSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def jointCluster(aboveBound=None, ab=None, aboveCluster=None, ac=None, aboveDropoffType=None, adt=None, aboveValue=None, av=None, belowBound=None, bb=None, belowCluster=None, bc=None, belowDropoffType=None, bdt=None, belowValue=None, bv=None, deformerTools=None, dt=None, joint=None, j=None, name=None, n=None, *args, **kwargs):
    """
    The joint cluster command adds high-level controls to manage the cluster percentage values on a bound skin around a joint. JointClusters are one way to create smooth bending behaviour on skin when joints rotate. 
    """
    pass


def DuplicateWithTransform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachSelectedAsSourceField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdCollapse(level=None, l=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command converts a takes a subdivision surface, passed as the argument, and produces a subdivision surface with a number of hierarchy levels "removed". Returns the name of the subdivision surface created and optionally the DG node that does the conversion. 
    """
    pass


def HideJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleChannelsLayers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddHolderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NEmitFromObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetLengthBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshScrapeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StraightenCurvesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportUseTmpFilePeripheral(*args, **kwargs):
    """
    
    """
    pass


def PolyMerge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rigidBody(active=None, act=None, angularVelocity=None, av=None, applyForceAt=None, afa=None, bounciness=None, b=None, cache=None, c=None, centerOfMass=None, com=None, collisions=None, cl=None, contactCount=None, cc=None, contactName=None, cn=None, contactPosition=None, cp=None, damping=None, dp=None, deleteCache=None, dc=None, dynamicFriction=None, df=None, force=None, f=None, ignore=None, ig=None, impulse=None, i=None, impulsePosition=None, imp=None, initialAngularVelocity=None, iav=None, initialVelocity=None, iv=None, layer=None, l=None, lockCenterOfMass=None, lcm=None, mass=None, m=None, name=None, n=None, orientation=None, o=None, particleCollision=None, pc=None, passive=None, pas=None, position=None, p=None, solver=None, slv=None, spinImpulse=None, si=None, standInObject=None, sio=None, staticFriction=None, sf=None, tesselationFactor=None, tf=None, velocity=None, vel=None, *args, **kwargs):
    """
    This command creates a rigid body from a polygonal or nurbs surface.
    """
    pass


def canCreateCaddyManip(*args, **kwargs):
    """
    This command returns true if there can be a manipulator made for the specified selection, false otherwise. 
    """
    pass


def timePort(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, globalTime=None, gt=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, snap=None, sn=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a simple time control widget. See also the "timeControl" command. 
    """
    pass


def MakeBrushSpringOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectKeyframeRegionCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to select keyframes within the keyframe region of the dope sheet editor 
    """
    pass


def ShowLightManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteExtension(attribute=None, at=None, forceDelete=None, fd=None, nodeType=None, nt=None, *args, **kwargs):
    """
    This command is used to delete an extension attribute from a node type. The attribute can be specified by using either the long or short name. Only one extension attribute can be deleted at a time. Children of a compound attribute cannot be deleted, you must delete the complete compound attribute. This command has no undo, edit, or query capabilities.
    """
    pass


def AnimationSnapshotOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setRenderPassType(defaultDataType=None, d=None, numChannels=None, n=None, type=None, t=None, *args, **kwargs):
    """
    This command will set the passID of a renderPass node and create the custom attributes specified by the corresponding render pass definition.If the render pass node already has a passID assigned to it, attributes that are no longer required become hidden, and new attributes are unhidden and/or created as needed.This allows passIDs to be changed back and forth without losing attribute data.It also allows common attributes to be transported from one render pass type to another.
    """
    pass


def renameAttr(*args, **kwargs):
    """
    Renames the given user-defined attribute to the name given in the string argument. If the new name conflicts with an existing name then this command will fail. Note that it is not legal to rename an attribute to the empty string.
    """
    pass


def geometryConstraint(layer=None, l=None, name=None, n=None, remove=None, rm=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's position based on the shape of the target surface(s) at the closest point(s) to the object. 
    """
    pass


def toolCollection(collectionItemArray=None, cia=None, defineTemplate=None, dt=None, exists=None, ex=None, gl=None, gl=None, numberOfCollectionItems=None, nci=None, parent=None, p=None, select=None, sl=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a tool button collection. Collections are parented to the current default layout if no parent is specified with the -p/parent flag.As children of the layout they will be deleted when the layout is deleted. Collections may also span more than one window if the -gl/global flag is used. In this case the collection has no parent and must be explicitly deleted with the 'deleteUI' command when it is no longer wanted. 
    """
    pass


def RigidBindSkin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeGrapher(*args, **kwargs):
    """
    
    """
    pass


def AppendToHairCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteSurfaceFlow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshFillTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fileBrowserDialog(actionName=None, an=None, dialogStyle=None, ds=None, fileCommand=None, fc=None, fileType=None, ft=None, filterList=None, fl=None, includeName=None, includeName=None, mode=None, m=None, operationMode=None, om=None, tipMessage=None, tm=None, windowTitle=None, wt=None, *args, **kwargs):
    """
    The fileBrowserDialog and fileDialog commands have now been deprecated. Both commands are still callable, but it is recommended that the fileDialog2 command be used instead.To maintain some backwards compatibility, both fileBrowserDialog and fileDialog will convert the flags/values passed to them into the appropriate flags/values that the fileDialog2 command uses and will call that command internally.It is not guaranteed that this compatibility will be able to be maintained in future versions so any new scripts that are written should use fileDialog2. 
    """
    pass


def PolyEditEdgeFlow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsToPoly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def instancer(addObject=None, a=None, cycle=None, c=None, cycleStep=None, cs=None, cycleStepUnits=None, csu=None, index=None, i=None, levelOfDetail=None, lod=None, name=None, n=None, object=None, obj=None, objectPosition=None, op=None, objectRotation=None, objectRotation=None, objectScale=None, os=None, pointDataSource=None, pds=None, removeObject=None, rm=None, rotationOrder=None, ro=None, rotationUnits=None, ru=None, valueName=None, vn=None, *args, **kwargs):
    """
    This command is used to create a instancer node and set the proper attributes in the node.
    """
    pass


def HideNURBSCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def openGLExtension(extension=None, ext=None, renderer=None, rnd=None, vendor=None, vnd=None, version=None, ver=None, *args, **kwargs):
    """
    Command returns the extension name depending on whether a given OpenGL extension is supported or not. The input is the extension string to the -extension flag. If the -extension flag is not used, or if the string argument to this flag is an empty string than all extension names are returned in a single string. If the extension exists it is not necessary true that the extension is supported. This command can only be used when a modeling view has been created. Otherwise no extensions will have been initialized and the resulting string will always be the empty string.
    """
    pass


def SubdivSmoothnessMediumOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldCopyAsAdmin(*args, **kwargs):
    """
    
    """
    pass


def LoftOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def u3dUnfold(*args, **kwargs):
    """
    
    """
    pass


def TurbulenceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReferenceEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportSetMayaFrameRate(*args, **kwargs):
    """
    
    """
    pass


def texManipContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    Command used to register the texSelectCtx tool. Command used to register the texManipCtx tool.
    """
    pass


def xgmDensityComp(*args, **kwargs):
    """
    
    """
    pass


def createNurbsPlaneCtx(*args, **kwargs):
    """
    
    """
    pass


def CreateNURBSSquare(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def truncateHairCache(*args, **kwargs):
    """
    This command sets the end time of a hair cache to the current time. If the current time is less than the end time of the cache, the cache is truncated so that only the portion of the cache up to and including the current time is preserved.
    """
    pass


def arcLenDimContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Command used to register the arcLenDimCtx tool.
    """
    pass


def RemoveWireOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def promptDialog(backgroundColor=None, bgc=None, button=None, b=None, cancelButton=None, cb=None, defaultButton=None, db=None, dismissString=None, ds=None, message=None, m=None, messageAlign=None, ma=None, parent=None, p=None, scrollableField=None, sf=None, style=None, st=None, text=None, tx=None, title=None, t=None, *args, **kwargs):
    """
    The promptDialog command creates a modal dialog with a message to the user, a text field in which the user may enter a response, and a variable number of buttons to dismiss the dialog.The dialog is dismissed when the user presses any button or chooses the close item from the window menu.In the case where a button is pressed then the name of the button selected is returned.If the dialog is dismissed via the close item then the string returned is specified by the 
    """
    pass


def TimeEditorFrameSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertIsoparms(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportLights(*args, **kwargs):
    """
    
    """
    pass


def dR_meshAlphaTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeCast(copyDynamicAttrs=None, cda=None, disableAPICallbacks=None, dsa=None, disableScriptJobCallbacks=None, dsj=None, disconnectUnmatchedAttrs=None, dua=None, force=None, f=None, swapNames=None, sn=None, swapValues=None, sv=None, *args, **kwargs):
    """
    Given two nodes, a source node of type A and a target node of type B, where type A is either type B or a sub-type of B, this command will replace the target node with the source node. That is, all node connections, DAG hierarchy and attribute values on the target node will be removed from the target node and placed on the source node. This operation will fail if either object is referenced, locked or if the nodes do not share a common sub-type. This operation is atomic. If the given parameters fail, then the source and target nodes will remain in their initial state prior to execution of the command. IMPORTANT: the command will currently ignore instance connections and instance objects.It will also ignore reference nodes.
    """
    pass


def reorder(back=None, b=None, front=None, f=None, relative=None, r=None, *args, **kwargs):
    """
    This command reorders (moves) objects relative to their siblings. 
    """
    pass


def polyDuplicateEdge(offset=None, of=None, smoothingAngle=None, sma=None, splitType=None, stp=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Duplicates a series of connected edges (edgeLoop)
    """
    pass


def BrushPresetReplaceShadingOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def saveImage(annotation=None, ann=None, backgroundColor=None, bgc=None, currentView=None, cv=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, objectThumbnail=None, ot=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, sceneFile=None, sf=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a static image for non-xpm files. Any image file format supported by the file texture node is supported by this command. 
    """
    pass


def ExportOfflineFileOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadePickWalkUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectCVsMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorSetTraversalDepthZero(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def relationship(b=None, b=None, relationshipData=None, rd=None, *args, **kwargs):
    """
    This is primarily for use with file IO. Rather than write out the specific attributes/connections required to maintain a relationship, a description of the related nodes/plugs is written instead. The relationship must have an owner node, and have a specific type. During file read, maya will make the connections and/or set the data necessary to represent the realtionship in the dependency graph.
    """
    pass


def pfxstrokes(filename=None, fn=None, postCallback=None, pc=None, selected=None, sl=None, *args, **kwargs):
    """
    This command will loop through all the Paint Effects strokes, including pfxHair nodes, and write the current state of all the tubes to a file. For normal stroke nodes tubes must be ON in the brush or there will be no output. For pfxHair nodes there will always be output, but the format is different than for stroke nodes(however one can assign a brush with tubes = ON to a pfxHair node, in which case it will output the same format as strokes). The general file format is ASCII, using commas to separate numerical values and newlines between blocks of data. The format used for pfxHair nodes presents the hair curves points in order from root to tip of the hair. The hairs follow sequentially in the following fashion: NumCvs pointX,pointY,pointZ, normalX,normalY,normalZ, width, colorR,colorG,colorB, paramU pointX,pointY,pointZ, normalX,normalY,normalZ, width, colorR,colorG,colorB, paramU etc... NumCvs pointX,pointY,pointZ, normalX,normalY,normalZ, width, colorR,colorG,colorB, paramU etc.. The format used to output files for brushes with tubes=ON is more complex. The tubes can branch and the order the segments are written is the same order they are drawn in. Slowly drawing a tall grass brush in the paint effects panel can help to illustrate the order the segments will appear in the file. New tubes can start "growing" before others are finished. There is no line for "NumCvs". Instead all data for each segment appears on each line. The data on each line is the same as passed into the paint effects runtime function. See the argument list of paintRuntimeFunc.mel for the order and a description of these parameters. The parameters match up exactly in the order they appear on a line of the output file with the order of arguments to this function. If one wishes to parse the output file and connect the segments together into curves the branchId, parentId and siblingCnt parameters can help when sorting which segment connects to which line. Using the -postCallback option will write out the tubes data after it has been proessed by the runTime callback.
    """
    pass


def launchImageEditor(editImageFile=None, eif=None, viewImageFile=None, vif=None, *args, **kwargs):
    """
    Launch the appropriate application to edit/view the image files specified. This command works only on the Macintosh and Windows platforms. 
    """
    pass


def RedoPreviousIPRRender(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendCurveOnSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllFurs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def detachDeviceAttr(all=None, all=None, attribute=None, at=None, axis=None, ax=None, device=None, d=None, selection=None, sl=None, *args, **kwargs):
    """
    This command detaches connections between device axes and node attributes.The command line arguments are the same as for the corresponding attachDeviceAttr except for the clutch argument which can not be used in this command. 
    """
    pass


def AddShrinkWrapSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypergraphDecreaseDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmMoveDescription(*args, **kwargs):
    """
    
    """
    pass


def PruneLattice(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetPartBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SendToUnrealSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKChildId(*args, **kwargs):
    """
    
    """
    pass


def XgmSetLengthBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideNonlinears(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonNormalEditTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AutoPaintMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdivDisplaySmoothness(smoothness=None, s=None, *args, **kwargs):
    """
    Sets or querys the display smoothness of subdivision surfaces on the selection list or of all subdivision surfaces if the -all option is set.Smoothness options are; rough, medium, or fine.Rough is the default.
    """
    pass


def TexSculptUnpinAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectContiguousEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InTangentClamped(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def curveCVCtx(degree=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, multEndKnots=None, me=None, name=None, n=None, uniform=None, un=None, *args, **kwargs):
    """
    The curveCVCtx command creates a new context for creating curves by placing control vertices (CVs). 
    """
    pass


def NodeEditorSelectUpStream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setEditCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a tool that can be used to modify set membership. 
    """
    pass


def AddBlendShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCutClips(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectPriority(allComponents=None, alc=None, allObjects=None, alo=None, animBreakdown=None, abd=None, animCurve=None, ac=None, animInTangent=None, ait=None, animKeyframe=None, ak=None, animOutTangent=None, aot=None, byName=None, bn=None, camera=None, ca=None, cluster=None, cl=None, collisionModel=None, clm=None, controlVertex=None, cv=None, curve=None, c=None, curveKnot=None, ck=None, curveOnSurface=None, cos=None, curveParameterPoint=None, cpp=None, dimension=None, dim=None, dynamicConstraint=None, dc=None, edge=None, eg=None, editPoint=None, ep=None, emitter=None, em=None, facet=None, fc=None, field=None, fi=None, fluid=None, fl=None, follicle=None, fo=None, hairSystem=None, hs=None, handle=None, ha=None, hull=None, hl=None, ikEndEffector=None, iee=None, ikHandle=None, ikh=None, imagePlane=None, ip=None, implicitGeometry=None, ig=None, isoparm=None, iso=None, joint=None, j=None, jointPivot=None, jp=None, lattice=None, la=None, latticePoint=None, lp=None, light=None, lt=None, localRotationAxis=None, ra=None, locator=None, lc=None, locatorUV=None, luv=None, locatorXYZ=None, xyz=None, meshUVShell=None, msh=None, motionTrailPoint=None, mtp=None, motionTrailTangent=None, mtt=None, nCloth=None, ncl=None, nParticle=None, npr=None, nParticleShape=None, nps=None, nRigid=None, nr=None, nonlinear=None, nl=None, nurbsCurve=None, nc=None, nurbsSurface=None, ns=None, orientationLocator=None, ol=None, particle=None, pr=None, particleShape=None, ps=None, plane=None, pl=None, polymesh=None, p=None, polymeshEdge=None, pe=None, polymeshFace=None, pf=None, polymeshFreeEdge=None, pfe=None, polymeshUV=None, puv=None, polymeshVertex=None, pv=None, polymeshVtxFace=None, pvf=None, queryByName=None, qbn=None, rigidBody=None, rb=None, rigidConstraint=None, rc=None, rotatePivot=None, rp=None, scalePivot=None, sp=None, sculpt=None, sc=None, selectHandle=None, sh=None, spring=None, spr=None, springComponent=None, spc=None, stroke=None, str=None, subdiv=None, sd=None, subdivMeshEdge=None, sme=None, subdivMeshFace=None, smf=None, subdivMeshPoint=None, smp=None, subdivMeshUV=None, smu=None, surfaceEdge=None, se=None, surfaceFace=None, sf=None, surfaceKnot=None, sk=None, surfaceParameterPoint=None, spp=None, surfaceRange=None, sr=None, texture=None, tx=None, vertex=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def ExportProxyContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolyCount(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgCreateDescriptionEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldUpdateTx(*args, **kwargs):
    """
    
    """
    pass


def hudSlider(allowOverlap=None, ao=None, block=None, b=None, blockAlignment=None, ba=None, blockSize=None, bs=None, decimalPrecision=None, dp=None, dragCommand=None, dc=None, internalPadding=None, ip=None, label=None, l=None, labelFontSize=None, lfs=None, labelWidth=None, lw=None, maxValue=None, max=None, minValue=None, min=None, padding=None, p=None, pressCommand=None, pc=None, releaseCommand=None, rc=None, section=None, s=None, sliderIncrement=None, si=None, sliderLength=None, sl=None, type=None, t=None, value=None, v=None, valueAlignment=None, va=None, valueFontSize=None, vfs=None, valueWidth=None, vw=None, visible=None, vis=None, *args, **kwargs):
    """
    This command creates a Heads-up Display (HUD) slider control which is placed in a 2D inactive overlay plane on the 3D viewport. It is to be used to provide hands-on interaction designated by a user script. The HUD slider is derived from a generic HUD object and thus inherits a similar workflow. 
    """
    pass


def SaveHIKCharacterDefinition(*args, **kwargs):
    """
    
    """
    pass


def CustomNURBSSmoothnessOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def STRSTweakModeToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bifrost(*args, **kwargs):
    """
    
    """
    pass


def Bevel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPlaceBrushContext(*args, **kwargs):
    """
    
    """
    pass


def TesselateSubdivSurfaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeEditorComposition(active=None, act=None, allCompositions=None, acp=None, createTrack=None, ct=None, delete=None, delete=None, duplicateFrom=None, df=None, rename=None, ren=None, tracksNode=None, tn=None, *args, **kwargs):
    """
    Commands related to composition management inside Time Editor.
    """
    pass


def PruneSmallWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypergraphHierarchyWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshAmplifyTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def graphEditor(*args, **kwargs):
    """
    unknown
    """
    pass


def dR_convertSelectionToVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCopyClips(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshFreezeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshFlattenToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def savePrefs(colors=None, c=None, general=None, g=None, hotkeys=None, hk=None, menuSets=None, ms=None, plugins=None, pl=None, uiLayout=None, ui=None, *args, **kwargs):
    """
    This command saves preferences to disk. If no flags are specified then all pref types get saved out. 
    """
    pass


def NodeEditorGraphAddSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowUIElements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusDisplayDynamicConstraintNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyStampDepthRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteEntireHairSystem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OffsetEdgeLoopToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableIKSolvers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sculptTarget(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, deformerTools=None, dt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, inbetweenWeight=None, ibw=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, regenerate=None, r=None, remove=None, rm=None, snapshot=None, s=None, split=None, sp=None, target=None, t=None, *args, **kwargs):
    """
    This command is used to specify the blend shape target to be modified by the sculpting tools and transform manipulators. 
    """
    pass


def xgmGroomConvert(*args, **kwargs):
    """
    
    """
    pass


def DisplayWireframe(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PanelPreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MinimizeApplication(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeCode(mayaStartFrame=None, msf=None, productionStartFrame=None, psf=None, productionStartHour=None, psh=None, productionStartMinute=None, psm=None, productionStartSecond=None, pss=None, *args, **kwargs):
    """
    Use this command to query and set the time code information in the file
    """
    pass


def lassoContext(drawClosed=None, dc=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Creates a context to perform selection via a "lasso".Use for irregular selection regions, where the "marquee-style" select of the "selectContext" is inappropriate. 
    """
    pass


def setMenuMode(*args, **kwargs):
    """
    Optionally sets a new Menu Mode for the menu bar in the main Maya window. Returns the current Menu Mode, and if a new one is specified, then the previous Menu Mode is returned. Note that due to recent changes to the menu set architecture (8.0+), this function now takes a menu set as a parameter instead of a label.
    """
    pass


def PolyMergeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def play(forward=None, f=None, playSound=None, ps=None, record=None, rec=None, sound=None, s=None, state=None, st=None, wait=None, w=None, *args, **kwargs):
    """
    This command starts and stops playback. In order to change the frame range of playback, see the playbackOptions command. 
    """
    pass


def SelectToggleMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hotkeyEditorPanel(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    A hotkeyEditor creates a new hotkey editor in the current layout. The hotkey editor lets you assign predefined commands, MEL scripts, or marking menus to keys and key combinations. 
    """
    pass


def getPanel(allConfigs=None, ac=None, allPanels=None, all=None, allScriptedTypes=None, ast=None, allTypes=None, at=None, atPosition=None, ap=None, configWithLabel=None, cwl=None, containing=None, c=None, invisiblePanels=None, inv=None, scriptType=None, sty=None, type=None, typ=None, typeOf=None, to=None, underPointer=None, up=None, visiblePanels=None, vis=None, withFocus=None, wf=None, withLabel=None, wl=None, *args, **kwargs):
    """
    This command returns panel and panel configuration information.
    """
    pass


def polyBridgeEdge(worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Bridges two sets of edges.
    """
    pass


def PolyExtrudeVerticesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVGatherShells(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleShowNamespace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothDeleteCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignBrushToHairSystem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_cycleCustomCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def view2dToolCtx(alternateContext=None, ac=None, boxzoom=None, bz=None, dolly=None, do=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, toolName=None, tn=None, track=None, tr=None, *args, **kwargs):
    """
    This class creates a context for the View Tools "track", "dolly", and "box zoom" in the Hypergraph. 
    """
    pass


def hasMetadata(asList=None, al=None, ignoreDefault=None, id=None, memberName=None, mn=None, channelName=None, cn=None, channelType=None, cht=None, endIndex=None, eix=None, index=None, idx=None, indexType=None, idt=None, scene=None, scn=None, startIndex=None, six=None, streamName=None, stn=None, *args, **kwargs):
    """
    
    """
    pass


def scriptJob(allChildren=None, alc=None, attributeAdded=None, aa=None, attributeChange=None, ac=None, attributeDeleted=None, ad=None, compressUndo=None, cu=None, conditionChange=None, cc=None, conditionFalse=None, cf=None, conditionTrue=None, ct=None, connectionChange=None, con=None, disregardIndex=None, dri=None, event=None, e=None, exists=None, ex=None, force=None, f=None, idleEvent=None, ie=None, kill=None, k=None, killAll=None, ka=None, killWithScene=None, kws=None, listConditions=None, lc=None, listEvents=None, le=None, listJobs=None, lj=None, nodeDeleted=None, nd=None, nodeNameChanged=None, nnc=None, parent=None, p=None, permanent=None, per=None, protected=None, pro=None, replacePrevious=None, rp=None, runOnce=None, ro=None, timeChange=None, tc=None, uiDeleted=None, uid=None, *args, **kwargs):
    """
    This command creates a "script job", which is a MEL command or script.This job is attached to the named condition, event, or attribute. Each time the condition switches to the desired state (or the trigger is triggered, etc), the script is run. 
    """
    pass


def XgmSetDirectionBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDeleteAllLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideDeformingGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def checkBox(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, onCommand=None, onc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, recomputeSize=None, rs=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a check box.A check box is a simple control containing a text label and a state of either on or off.Commands can be attached to any or all of the following events:when the check box is turned on, turned off, or simply when it's state is changed. 
    """
    pass


def FBXImportAxisConversionEnable(*args, **kwargs):
    """
    
    """
    pass


def blindDataType(dataType=None, dt=None, longDataName=None, ldn=None, longNames=None, ln=None, query=None, q=None, shortDataName=None, sdn=None, shortNames=None, sn=None, typeId=None, id=None, typeNames=None, tn=None, *args, **kwargs):
    """
    This command creates a blind data type, which is represented by a blindDataTemplate node in the DG. A blind data type can have one or more attributes. On the command line, the attributes should be ordered by type for best memory utilization, largest first: string, binary, double, float, int, and finally boolean. Once a blind data type is created, blind data of that type may be assigned using the polyBlindData command. Note that as well as polygon components, blind data may be assigned to objects and to NURBS patches. A blind data type may not be modified after it is created: in order to do so it must be deleted and recreated. Any existing blind data of that type would also need to be deleted and recreated. When used with the query flag, this command will return information about the attributes of the specified blind data type.
    """
    pass


def FilletBlendToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothingDisplayToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFBIKEffectorsTranslatePinState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artBaseCtx(*args, **kwargs):
    """
    
    """
    pass


def Quadrangulate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def psdTextureFile(channelRGB=None, chc=None, channels=None, chs=None, imageFileName=None, ifn=None, psdFileName=None, psf=None, snapShotImageName=None, ssi=None, uvSnapPostionTop=None, uvt=None, xResolution=None, xr=None, yResolution=None, yr=None, *args, **kwargs):
    """
    Creates a Photoshop file with UVSnap shot image and the layer set names as the input. 
    """
    pass


def paintPointsCmd(*args, **kwargs):
    """
    
    """
    pass


def ToggleHoleFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmExportSplineDataInternal(*args, **kwargs):
    """
    
    """
    pass


def DeactivateGlobalScreenSlider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def doBlur(colorFile=None, c=None, length=None, l=None, sharpness=None, s=None, smooth=None, m=None, smoothColor=None, r=None, vectorFile=None, v=None, *args, **kwargs):
    """
    The doBlur commandwill invoke the blur2d, which is a Maya stand-alone application to do 2.5 motion blur given the color image and the motion vector file.For a given input colorFile name, e.g. "xxx.iff", the output blurred image will be "xxx_blur.iff" in the same directory as the input colorFile.There is currently no control over the name of the output blurred image. 
    """
    pass


def PlanarOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def blend(*args, **kwargs):
    """
    
    """
    pass


def GoToBindPose(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_SetEngine(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorClipRazor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def applyMetadata(format=None, fmt=None, scene=None, scn=None, value=None, v=None, *args, **kwargs):
    """
    
    """
    pass


def HypershadePickWalkDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideHairSystems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlayblastWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ViewAlongAxisY(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideKinematics(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshRelaxToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def autoSave(destination=None, dst=None, destinationFolder=None, df=None, enable=None, en=None, folder=None, fol=None, interval=None, int=None, limitBackups=None, lim=None, maxBackups=None, max=None, perform=None, p=None, prompt=None, prm=None, *args, **kwargs):
    """
    Provides an interface to the auto-save mechanism.
    """
    pass


def ToggleToolMessage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToolSettingsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySelectConstraint(angle=None, a=None, anglePropagation=None, ap=None, angleTolerance=None, at=None, anglebound=None, ab=None, border=None, bo=None, borderPropagation=None, bp=None, convexity=None, c=None, crease=None, cr=None, disable=None, dis=None, dist=None, d=None, distaxis=None, da=None, distbound=None, db=None, distpoint=None, dp=None, edgeDistance=None, ed=None, geometricarea=None, ga=None, geometricareabound=None, gab=None, holes=None, h=None, length=None, l=None, lengthbound=None, lb=None, loopPropagation=None, lp=None, max2dAngle=None, m2a=None, max3dAngle=None, m3a=None, mode=None, m=None, nonmanifold=None, nm=None, order=None, order=None, orderbound=None, orb=None, orient=None, o=None, orientaxis=None, oa=None, orientbound=None, ob=None, planarity=None, p=None, propagate=None, pp=None, random=None, r=None, randomratio=None, rr=None, returnSelection=None, rs=None, ringPropagation=None, rp=None, shell=None, sh=None, size=None, sz=None, smoothness=None, sm=None, stateString=None, sts=None, textured=None, tx=None, texturedarea=None, ta=None, texturedareabound=None, tab=None, textureshared=None, ts=None, topology=None, tp=None, type=None, t=None, uvShell=None, uv=None, visibility=None, v=None, visibilityangle=None, va=None, visibilitypoint=None, vp=None, where=None, w=None, wholeSensitive=None, ws=None, *args, **kwargs):
    """
    Changes the global polygonal selection constraints.
    """
    pass


def CreateSubdivCylinder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdCutUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createNurbsSphereCtx(*args, **kwargs):
    """
    
    """
    pass


def RemoveBifrostEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideStrokes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeCustomPivot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TextureCentricUVLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCone(axis=None, ax=None, createUVs=None, cuv=None, height=None, h=None, radius=None, r=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, subdivisionsZ=None, sz=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The cone command creates a new polygonal cone. 
    """
    pass


def HypershadeHideAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShortPolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportGenerateLog(*args, **kwargs):
    """
    
    """
    pass


def CreateDiskCacheOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PasteKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModelingPanelRedoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IKSplineHandleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenameCurrentColorSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFkSkeletonVisibility(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TagAsController(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PruneCluster(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xform(absolute=None, a=None, boundingBox=None, bb=None, boundingBoxInvisible=None, bbi=None, centerPivots=None, cp=None, centerPivotsOnComponents=None, cpc=None, deletePriorHistory=None, dph=None, euler=None, eu=None, matrix=None, m=None, objectSpace=None, os=None, pivots=None, piv=None, preserve=None, p=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAboutBBox=None, rab=None, reflectionAboutOrigin=None, rao=None, reflectionAboutX=None, rax=None, reflectionAboutY=None, ray=None, reflectionAboutZ=None, raz=None, reflectionTolerance=None, rft=None, relative=None, r=None, rotateAxis=None, ra=None, rotateOrder=None, roo=None, rotatePivot=None, rp=None, rotateTranslation=None, rt=None, rotation=None, ro=None, scale=None, s=None, scalePivot=None, sp=None, scaleTranslation=None, st=None, shear=None, sh=None, translation=None, t=None, worldSpace=None, ws=None, worldSpaceDistance=None, wd=None, zeroTransformPivots=None, ztp=None, *args, **kwargs):
    """
    
    """
    pass


def dynParticleCtx(conserve=None, c=None, cursorPlacement=None, cp=None, exists=None, ex=None, grid=None, gr=None, gridSpacing=None, grs=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, jitterRadius=None, jr=None, lowerLeftX=None, llx=None, lowerLeftY=None, lly=None, lowerLeftZ=None, llz=None, name=None, n=None, nucleus=None, nc=None, numJitters=None, nj=None, particleName=None, pn=None, sketch=None, sk=None, sketchInterval=None, ski=None, textPlacement=None, tp=None, upperRightX=None, urx=None, upperRightY=None, ury=None, upperZ=None, urz=None, *args, **kwargs):
    """
    The particle context command creates a particle context. The particle context provides an interactive means to create particle objects. The particle context command also provides an interactive means to set the option values, through the Tool Property Sheet, for the "particle" command that the context will issue. 
    """
    pass


def DeleteAllContainers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMapSew(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Sew border edges in texture space. Selected edges must be map borders.
    """
    pass


def SurfaceEditingTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClearBifrostInitialState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_symmetryTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySpinEdge(*args, **kwargs):
    """
    
    """
    pass


def detachSurface(direction=None, d=None, keep=None, k=None, parameter=None, p=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The detachSurface command detaches a surface into pieces, given a list of parameter values and a direction.You can also specify which pieces to keep and which to discard using the "-k" flag. The names of the newly detached surface(s) are returned.If history is on, the name of the resulting dependency node is also returned. 
    """
    pass


def filletCurve(bias=None, b=None, blendControl=None, bc=None, circular=None, cir=None, curveParameter1=None, cp1=None, curveParameter2=None, cp2=None, depth=None, d=None, freeformBlend=None, fb=None, radius=None, r=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The curve fillet command creates a fillet curve between two curves. If no objects are specified in the command line, then the first two active curves are used. The fillet created can be circular (with a radius) or freeform (with a type of tangent or blend). 
    """
    pass


def referenceQuery(child=None, ch=None, isExportEdits=None, iee=None, isLoaded=None, il=None, liveEdits=None, le=None, dagPath=None, dp=None, editAttrs=None, ea=None, editNodes=None, en=None, editStrings=None, es=None, failedEdits=None, fld=None, filename=None, f=None, isNodeReferenced=None, inr=None, isPreviewOnly=None, ipo=None, namespace=None, ns=None, nodes=None, n=None, parent=None, p=None, parentNamespace=None, pns=None, referenceNode=None, rfn=None, shortName=None, shn=None, showDagPath=None, sdp=None, showNamespace=None, sns=None, successfulEdits=None, scs=None, topReference=None, tr=None, unresolvedName=None, un=None, withoutCopyNumber=None, wcn=None, editCommand=None, ec=None, onReferenceNode=None, orn=None, *args, **kwargs):
    """
    Use this command to find out information about references and referenced nodes. A valid target is either a reference node, a reference file, or a referenced node. Some flags don't require a target, see flag descriptions for more information on what effect this has. When a scene contains multiple levels of file references, those edits which affect a nested reference may be stored on several different reference nodes. For example: A.ma has a reference to B.ma which has a reference to C.ma which contains a poly sphere (pSphere1). If you were to open B.ma and translate the sphere, an edit would be stored on CRN which refers to a node named "C:pSphere1". If you were then to open A.ma and parent the sphere, an edit would be stored on BRN which refers to a node named "B:C:pSphere1". It is important to note that when querying edits which affect a nested reference, the edits will be returned in the same format that they were applied. In the above example, opening A.ma and querying all edits which affect C.ma, would return two edits a parent edit affecting "B:C:pSphere1", and a setAttr edit affecting "C:pSphere1". Since there is currently no node named C:pSphere1 (only B:C:pSphere1) care will have to be taken when interpreting the returned information. The same care should be taken when referenced DAG nodes have been parented or instanced. Continuing with the previous example, let's say that you were to open A.ma and, instead of simply parenting pSphere1, you were to instance it. While A.ma is open, "B:C:pSphere1" may now be an amibiguous name, replaced by "|B:C:pSphere1" and "group1|B:C:pSphere1". However querying the edits which affect C.ma would still return a setAttr edit affecting "C:pSphere1" since it was applied prior to B:C:pSphere1 being instanced. Some tips: 1. Use the '-topReference' flag to query only those edits which were appliedfrom the currently open file. 2. Use the '-onReferenceNode' flag to limit the results to those edits whereare stored on a given reference node. You can then use various stringmanipulation techniques to extrapolate the current name of any affectednodes.
    """
    pass


def autoPlace(useMouse=None, um=None, *args, **kwargs):
    """
    This command takes a point in the centre of the current modeling pane and projects it onto the live surface. This produces a point in 3 space which is returned. If the 
    """
    pass


def Triangulate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteHairCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def truncateFluidCache(*args, **kwargs):
    """
    This command sets the end time of a fluid cache to the current time. If the current time is less than the end time of the cache, the cache is truncated so that only the portion of the cache up to and including the current time is preserved.
    """
    pass


def adskAssetList(*args, **kwargs):
    """
    
    """
    pass


def UpdateBindingSetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothMergeCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVBorderComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleNodeTitleMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideSmoothSkinInfluences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetEngine(*args, **kwargs):
    """
    
    """
    pass


def Help(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listAnimatable(active=None, act=None, manip=None, m=None, manipHandle=None, mh=None, shape=None, s=None, type=None, typ=None, *args, **kwargs):
    """
    This command list the animatable attributes of a node.Command flags allow filtering by the current manipulator, or node type. 
    """
    pass


def ConnectComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def blendTwoAttr(attribute=None, at=None, attribute0=None, at0=None, attribute1=None, at1=None, blender=None, bl=None, controlPoints=None, cp=None, driver=None, d=None, name=None, n=None, shape=None, s=None, time=None, t=None, *args, **kwargs):
    """
    A blendTwoAttr nodes takes two inputs, and blends the values of the inputs from one to the other, into an output value. The blending of the two inputs uses a blending function, and the following formula: 
    """
    pass


def gpuCache(*args, **kwargs):
    """
    
    """
    pass


def CreateHairCacheOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCreateFacetCtx(append=None, ap=None, maximumNumberOfPoints=None, mp=None, planarConstraint=None, pc=None, subdivision=None, s=None, *args, **kwargs):
    """
    Create a new context to create polygonal objects
    """
    pass


def getAttr(asString=None, asString=None, caching=None, ca=None, channelBox=None, cb=None, expandEnvironmentVariables=None, x=None, keyable=None, k=None, lock=None, l=None, multiIndices=None, mi=None, settable=None, se=None, silent=None, sl=None, size=None, s=None, time=None, t=None, type=None, typ=None, *args, **kwargs):
    """
    This command returns the value of the named object's attribute. UI units are used where applicable. Currently, the types of attributes that can be displayed are: 
    """
    pass


def PolySpinEdgeForward(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LevelOfDetailUngroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleLatticeShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeSimulation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GlobalDiskCacheControl(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IKHandleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def unknownPlugin(dataTypes=None, dt=None, list=None, l=None, nodeTypes=None, nt=None, remove=None, r=None, version=None, v=None, *args, **kwargs):
    """
    Allows querying of the unknown plug-ins used by the scene, and provides a means to remove them.
    """
    pass


def ShowGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertKeysToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldAIR(*args, **kwargs):
    """
    
    """
    pass


def MoveUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def optionMenu(annotation=None, ann=None, backgroundColor=None, bgc=None, beforeShowPopup=None, bsp=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, itemListLong=None, ill=None, itemListShort=None, ils=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfItems=None, ni=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, select=None, sl=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a popup menu control.The command creates the control and provides its menu.Subsequent calls to the menuItem command will place them in the popup.Note that commands attached to menu items will not get called.Attach any commands via the -cc/changedCommand flag. 
    """
    pass


def ConformPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyOptions(activeObjects=None, ao=None, allEdges=None, ae=None, backCullVertex=None, bcv=None, backCulling=None, bc=None, colorMaterialChannel=None, cm=None, colorShadedDisplay=None, cs=None, displayAlphaAsGreyScale=None, dal=None, displayBorder=None, db=None, displayCenter=None, dc=None, displayCreaseEdge=None, dce=None, displayCreaseVertex=None, dcv=None, displayGeometry=None, dg=None, displayInvisibleFaces=None, dif=None, displayItemNumbers=None, din=None, displayMapBorder=None, dmb=None, displayMetadata=None, dmt=None, displayNormal=None, dn=None, displaySubdComps=None, dsc=None, displayTriangle=None, dt=None, displayUVTopology=None, uvt=None, displayUVs=None, duv=None, displayVertex=None, dv=None, displayWarp=None, dw=None, facet=None, f=None, fullBack=None, fb=None, gl=None, gl=None, hardBack=None, hb=None, hardEdge=None, he=None, hardEdgeColor=None, hec=None, materialBlend=None, mb=None, newPolymesh=None, np=None, point=None, pt=None, pointFacet=None, pf=None, relative=None, r=None, reuseTriangles=None, rt=None, sizeBorder=None, sb=None, sizeNormal=None, sn=None, sizeUV=None, suv=None, sizeVertex=None, sv=None, smoothDrawType=None, sdt=None, softEdge=None, se=None, vertexNormalMethod=None, vnm=None, wireBackCulling=None, wbc=None, *args, **kwargs):
    """
    Changes the global display polygonal attributes.
    """
    pass


def CreateCharacter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransformNoSelectOnTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeVertexToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Create2DContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlaceFullBodyPivot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKLiveConnectionTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def draggerContext(anchorPoint=None, ap=None, button=None, bu=None, currentStep=None, cs=None, cursor=None, cur=None, dragCommand=None, dc=None, dragPoint=None, dp=None, drawString=None, ds=None, exists=None, ex=None, finalize=None, fnz=None, history=None, ch=None, holdCommand=None, hc=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, initialize=None, inz=None, modifier=None, mo=None, name=None, n=None, plane=None, pl=None, prePressCommand=None, ppc=None, pressCommand=None, pc=None, projection=None, pr=None, releaseCommand=None, rc=None, snapping=None, snp=None, space=None, sp=None, stepsCount=None, sc=None, undoMode=None, um=None, *args, **kwargs):
    """
    The draggerContext allows the user to program the behavior of the mouse or an equivalent dragging device in MEL. 
    """
    pass


def polyChipOff(attraction=None, att=None, duplicate=None, dup=None, gravity=None, g=None, gravityX=None, gx=None, gravityY=None, gy=None, gravityZ=None, gz=None, keepFacesTogether=None, kft=None, localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localRotate=None, lr=None, localRotateX=None, lrx=None, localRotateY=None, lry=None, localRotateZ=None, lrz=None, localScale=None, ls=None, localScaleX=None, lsx=None, localScaleY=None, lsy=None, localScaleZ=None, lsz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, magnX=None, mx=None, magnY=None, my=None, magnZ=None, mz=None, magnet=None, m=None, offset=None, off=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, weight=None, w=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Extract facets. Faces can be extracted separately or together, and manipulations can be performed either in world or object space. 
    """
    pass


def DisplayShadedAndTextured(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeRegionDirectKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, option=None, o=None, *args, **kwargs):
    """
    This command creates a context which may be used to directly manipulate keyframes within the dope sheet editor 
    """
    pass


def ConvertSelectionToVertexPerimeter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySubdivideEdge(divisions=None, dv=None, size=None, s=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Subdivides an edge into two or more subedges. 
    """
    pass


def InTangentFixed(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mouldMesh(*args, **kwargs):
    """
    
    """
    pass


def createLayeredPsdFile(imageFileName=None, ifn=None, psdFileName=None, psf=None, xResolution=None, xr=None, yResolution=None, yr=None, *args, **kwargs):
    """
    Creates alayered PSD file with image names as input to individual layers
    """
    pass


def xgmNoiseBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def hitTest(*args, **kwargs):
    """
    The 
    """
    pass


def intScrollBar(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontal=None, hr=None, isObscured=None, io=None, largeStep=None, ls=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a scroll bar control that accepts only integer values and is bound by a minimum and maximum value.The scroll bar displays a marker indicating the current value of the scroll bar relative to it's minimum and maximum values.Click and drag the marker or on the scroll bar itself to change the current value. 
    """
    pass


def setDynStartState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def workspacePanel(defineTemplate=None, dt=None, exists=None, ex=None, mainWindow=None, mw=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This is not a real description - just to get docs to build. 
    """
    pass


def GraphEditorDisplayValues(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorBackToParent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideNURBSSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HyperGraphPanelUndoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVEditorUnpinAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdiv(currentLevel=None, cl=None, currentSubdLevel=None, csl=None, deepestLevel=None, dl=None, displayLoad=None, dsl=None, edgeStats=None, est=None, faceStats=None, fst=None, maxPossibleLevel=None, mpl=None, proxyMode=None, pm=None, smallOffsets=None, so=None, *args, **kwargs):
    """
    Provides useful information about the selected subdiv or components, such as the deepest subdivided level, the children or parents of the currently selected components, etc.
    """
    pass


def exportEdits(excludeHierarchy=None, ehr=None, excludeNode=None, en=None, exportSelected=None, exs=None, force=None, f=None, includeAnimation=None, ian=None, includeConstraints=None, ic=None, includeDeformers=None, idf=None, includeNetwork=None, inw=None, includeNode=None, includeNode=None, includeSetAttrs=None, isa=None, includeSetDrivenKeys=None, sdk=None, includeShaders=None, ish=None, selected=None, sel=None, type=None, typ=None, editCommand=None, ec=None, onReferenceNode=None, orn=None, *args, **kwargs):
    """
    Use this command to export edits made in the scene to a file. The exported file can be subsequently imported to another scene. Edits may include: nodes, connections and reference edits such as value changes. The nodes that are included in the exported file will be based on the options used. At least one option flag that describes the set of target nodes to include in the exported file must be specified (e.g. 'selected', 'onReferenceNode'). Use the inclusion flags ('includeAnimation', 'includeShaders', 'includeNetwork') to specify which additional related nodes will be added to the export list. In export mode, when the command completes successfully, the name of the exported file will be returned. In query mode, this command will return information about the contents of the exported file. The query mode will return the list of nodes that will be considered for inclusion in the exported file based on the specified flags.
    """
    pass


def GraphEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddMissingFBIKEffectors(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def addPP(attribute=None, atr=None, *args, **kwargs):
    """
    Adds per-point (per-cv, per-vertex, or per-particle) attribute capability for an attribute of an emitter or field.The -atr flag identifies the attribute.If no attribute is named, addPP returns a warning and does nothing. 
    """
    pass


def SelectTextureReferenceObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowKinematics(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportInAscii(*args, **kwargs):
    """
    
    """
    pass


def HypershadeDeleteAllBakeSets(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def copyNode(*args, **kwargs):
    """
    
    """
    pass


def dR_bevelRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDisplayInterestingShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scriptedPanelType(addCallback=None, acb=None, copyStateCallback=None, ocb=None, createCallback=None, ccb=None, customView=None, cv=None, defineTemplate=None, dt=None, deleteCallback=None, dcb=None, exists=None, ex=None, initCallback=None, icb=None, label=None, l=None, obsolete=None, o=None, removeCallback=None, rcb=None, retainOnFileOpen=None, rfo=None, saveStateCallback=None, scb=None, unique=None, u=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command defines the callbacks for a type of scripted panel.The panel type created by this command is then used when creating a scripted panel.See also the 'scriptedPanel' command. 
    """
    pass


def GraphCutOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetVertexNormalOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DistributeUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMainMenubar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FullCreaseSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyDisplacementRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXLoadMBExportPresetFile(*args, **kwargs):
    """
    
    """
    pass


def grabColor(hsvValue=None, hsv=None, rgbValue=None, rgb=None, *args, **kwargs):
    """
    This command changes the cursor and enters a modal state which will be exited by pressing a mouse button.The color component values of the pixel below the cursor at the time of the button press are returned. 
    """
    pass


def FBXExportColladaSingleMatrix(*args, **kwargs):
    """
    
    """
    pass


def hotkey(altModifier=None, alt=None, autoSave=None, autoSave=None, commandModifier=None, cmd=None, ctrlModifier=None, ctl=None, ctxClient=None, cc=None, dragPress=None, dp=None, factorySettings=None, fs=None, isModifier=None, mod=None, keyShortcut=None, k=None, name=None, n=None, pressCommandRepeat=None, pcr=None, releaseCommandRepeat=None, rcr=None, releaseName=None, rn=None, shiftModifier=None, sht=None, sourceUserHotkeys=None, suh=None, *args, **kwargs):
    """
    This command sets the single-key hotkeys for the entire application.
    """
    pass


def paintEffectsDisplay(meshDrawEnable=None, me=None, *args, **kwargs):
    """
    Command to set the global display methods for paint effects items
    """
    pass


def MovePolygonComponentOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptSubdivsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_meshOffsetTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnlockNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_objectTemplateTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleShowResults(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LayoutUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditFluidResolution(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshMaskToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def makeIdentity(apply=None, a=None, jointOrient=None, jo=None, normal=None, n=None, preserveNormals=None, pn=None, rotate=None, r=None, scale=None, s=None, translate=None, t=None, *args, **kwargs):
    """
    The makeIdentity command is a quick way to reset the selected transform and all of its children down to the shape level by the identity transformation.You can also specify which of transform, rotate or scale is applied down from the selected transform. The identity transformation means: 
    """
    pass


def HypershadeDeleteUnusedNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetSmoothBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditPolygonType(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewPersp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleSimulate(*args, **kwargs):
    """
    
    """
    pass


def separator(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontal=None, hr=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, style=None, st=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a separator widget in a variety of drawing styles.
    """
    pass


def DisplaySmoothShaded(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynPaintEditor(activeOnly=None, ao=None, autoSave=None, autoSave=None, camera=None, cam=None, canvasMode=None, cm=None, canvasUndo=None, cu=None, changeCommand=None, cc=None, clear=None, cl=None, control=None, ctl=None, currentCanvasSize=None, ccs=None, defineTemplate=None, dt=None, displayAppearance=None, dsa=None, displayFog=None, dfg=None, displayImage=None, di=None, displayLights=None, dsl=None, displayStyle=None, dst=None, displayTextures=None, dtx=None, docTag=None, dtg=None, doubleBuffer=None, dbf=None, drawAxis=None, da=None, drawContext=None, drc=None, exists=None, ex=None, fileName=None, fil=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, iconGrab=None, ig=None, loadImage=None, li=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, menu=None, mn=None, nbImages=None, nim=None, newImage=None, ni=None, paintAll=None, pa=None, panel=None, pnl=None, parent=None, p=None, redrawLast=None, rl=None, refresh=None, ref=None, refreshMode=None, rmd=None, removeAllImages=None, ra=None, removeImage=None, ri=None, rollImage=None, rig=None, saveAlpha=None, sa=None, saveBumpmap=None, sbm=None, saveImage=None, si=None, scaleBlue=None, sb=None, scaleGreen=None, sg=None, scaleRed=None, sr=None, selectionConnection=None, slc=None, singleBuffer=None, sbf=None, snapShot=None, snp=None, stateString=None, sts=None, tileSize=None, ts=None, unParent=None, up=None, undoCache=None, uc=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, wrap=None, wr=None, writeImage=None, wi=None, zoom=None, zm=None, *args, **kwargs):
    """
    Create a editor window that can be painted into
    """
    pass


def CreateSubdivTorus(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MapUVBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostKillField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def currentUnit(angle=None, a=None, fullName=None, f=None, linear=None, l=None, time=None, t=None, updateAnimation=None, ua=None, *args, **kwargs):
    """
    This command allows you to change the units in which you will work in Maya. There are three types of units: linear, angular and time. 
    """
    pass


def FBXExportShapes(*args, **kwargs):
    """
    
    """
    pass


def HypershadeSortByName(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def layoutDialog(backgroundColor=None, bgc=None, dismiss=None, dis=None, parent=None, p=None, title=None, t=None, uiScript=None, ui=None, *args, **kwargs):
    """
    The layoutDialog command creates a modal dialog containing a formLayout with 100 divisions. The formLayout can be populated with arbitrary UI elements through use of the '-ui/-uiScript' flag. 
    """
    pass


def DeleteAllShadingGroupsAndMaterials(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_coordSpaceWorld(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateAmbientLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_objectBackfaceTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RelaxUVShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CollapseSubdivSurfaceHierarchy(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OptimzeUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickDispatch(*args, **kwargs):
    """
    
    """
    pass


def rowColumnLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, columnAlign=None, cal=None, columnAttach=None, cat=None, columnOffset=None, co=None, columnSpacing=None, cs=None, columnWidth=None, cw=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfColumns=None, nc=None, numberOfPopupMenus=None, npm=None, numberOfRows=None, nr=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAlign=None, ral=None, rowAttach=None, rat=None, rowHeight=None, rh=None, rowOffset=None, ro=None, rowSpacing=None, rs=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a rowColumn layout. A rowColumn layout positions children in either a row or column format. A column layout, specified with the 
    """
    pass


def SelectAllSubdivGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleReflection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DistributeUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyingGroup(activator=None, act=None, addElement=None, add=None, afterFilters=None, af=None, category=None, cat=None, clear=None, cl=None, color=None, co=None, copy=None, cp=None, edges=None, eg=None, editPoints=None, ep=None, empty=None, em=None, excludeDynamic=None, ed=None, excludeRotate=None, er=None, excludeScale=None, es=None, excludeTranslate=None, et=None, excludeVisibility=None, ev=None, facets=None, fc=None, flatten=None, fl=None, forceElement=None, fe=None, include=None, include=None, intersection=None, int=None, isIntersecting=None, ii=None, isMember=None, im=None, layer=None, l=None, minimizeRotation=None, mr=None, name=None, n=None, noSurfaceShader=None, nss=None, noWarnings=None, nw=None, nodesOnly=None, no=None, remove=None, rm=None, removeActivator=None, rac=None, renderable=None, r=None, setActiveFilter=None, fil=None, size=None, s=None, split=None, sp=None, subtract=None, sub=None, text=None, t=None, union=None, un=None, vertices=None, v=None, *args, **kwargs):
    """
    This command is used to manage the membership of a keying group.Keying groups allow users to effectively manage related keyframe data, allowing keys on attributes in the keying group to be set and edited as a single entity. 
    """
    pass


def MoveDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmDirectionBrushContext(*args, **kwargs):
    """
    
    """
    pass


def HypershadeRemoveAsset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPolyToGuide(*args, **kwargs):
    """
    
    """
    pass


def ShowRiggingUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteAttrPattern(allPatterns=None, all=None, patternName=None, pn=None, patternType=None, pt=None, *args, **kwargs):
    """
    After a while the list of attribute patterns could become cluttered. This command provides a way to remove patterns from memory so that only the ones of interest will show.
    """
    pass


def ScaleConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SaveBrushPreset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXClose(*args, **kwargs):
    """
    
    """
    pass


def NextFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKCycleMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonBooleanUnion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttrPaintVertexCtx(accopacity=None, aco=None, activeListChangedProc=None, alp=None, afterStrokeCmd=None, asc=None, alphaclamp=None, alc=None, alphaclamplower=None, acl=None, alphaclampupper=None, acu=None, attrSelected=None, asl=None, beforeStrokeCmd=None, bsc=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clamp=None, cl=None, clamplower=None, cll=None, clampupper=None, clu=None, clear=None, clr=None, colorRamp=None, cr=None, colorfeedback=None, cf=None, colorrangelower=None, crl=None, colorrangeupper=None, cru=None, dataTypeIndex=None, dti=None, disablelighting=None, dl=None, dragSlider=None, dsl=None, duringStrokeCmd=None, dsk=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, filterNodes=None, fon=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, interactiveUpdate=None, iu=None, lowerradius=None, lr=None, mappressure=None, mp=None, maxvalue=None, mxv=None, minvalue=None, miv=None, name=None, n=None, objattrArray=None, oaa=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintComponent=None, pc=None, paintNodeArray=None, pna=None, paintRGBA=None, pc4=None, paintVertexFace=None, pvf=None, paintattrselected=None, pas=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, rampMaxColor=None, rxc=None, rampMinColor=None, rmc=None, reflection=None, rn=None, reflectionaxis=None, ra=None, selectedattroper=None, sao=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toolOffProc=None, tfp=None, toolOnProc=None, top=None, useColorRamp=None, ucr=None, useMaxMinColor=None, umc=None, usepressure=None, up=None, value=None, val=None, vertexColorRange=None, vcr=None, vertexColorRangeLower=None, vcl=None, vertexColorRangeUpper=None, vcu=None, whichTool=None, wst=None, *args, **kwargs):
    """
    This is a context command to set the flags on the artAttrContext, which is the base context for attribute painting operations. All commands require the name of the context as the last argument as this provides the name of the context to create, edit or query. 
    """
    pass


def GoToMaxFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def requires(dataType=None, dt=None, nodeType=None, nt=None, *args, **kwargs):
    """
    This command is used during file I/O to specify the requirements needed to load the given file.It defines what file format version was used to write the file, or what plug-ins are required to load the scene. 
    """
    pass


def SmoothBindSkinOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToContainedEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMoveVertex(localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Modifies vertices of a polygonal object. Translate, rotate or scale vertices in local or world space. 
    """
    pass


def HypershadeDeleteDuplicateShadingNetworks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSmoothnessRoughOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutTangentClamped(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def srtContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command can be used to create a combined transform (translate/scale/rotate) context. 
    """
    pass


def orientConstraint(createCache=None, cc=None, deleteCache=None, dc=None, layer=None, l=None, maintainOffset=None, mo=None, name=None, n=None, offset=None, o=None, remove=None, rm=None, skip=None, sk=None, targetList=None, tl=None, weight=None, w=None, weightAliasList=None, wal=None, *args, **kwargs):
    """
    Constrain an object's orientation to match the orientation of the target or the average of a number of targets. 
    """
    pass


def SetTimecode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetFreezeBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geoUtils(*args, **kwargs):
    """
    
    """
    pass


def PolyConvertToRingAndCollapse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ImportDeformerWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FlowPathObjectOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewHeadOn(*args, **kwargs):
    """
    The viewHeadOn command positions the specified camera so it is looking "down" the normal of the live object, and fitted to the live object. If the live object is a surface, an arbitrary normal is chosen. 
    """
    pass


def ikHandle(autoPriority=None, ap=None, connectEffector=None, ce=None, createCurve=None, ccv=None, createRootAxis=None, cra=None, curve=None, c=None, disableHandles=None, dh=None, enableHandles=None, eh=None, endEffector=None, ee=None, exists=None, ex=None, forceSolver=None, fs=None, freezeJoints=None, fj=None, jointList=None, jl=None, name=None, n=None, numSpans=None, ns=None, parentCurve=None, pcv=None, positionWeight=None, pw=None, priority=None, p=None, rootOnCurve=None, roc=None, rootTwistMode=None, rtm=None, setupForRPsolver=None, srp=None, simplifyCurve=None, scv=None, snapCurve=None, snc=None, snapHandleFlagToggle=None, shf=None, snapHandleToEffector=None, see=None, solver=None, sol=None, startJoint=None, sj=None, sticky=None, s=None, twistType=None, tws=None, weight=None, w=None, *args, **kwargs):
    """
    The handle command is used to create, edit, and query a handle within Maya.The standard edit (-e) and query (-q) flags are used for edit and query functions. 
    """
    pass


def mrMapVisualizer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GoToMarketPlace(*args, **kwargs):
    """
    
    """
    pass


def VertexNormalEditTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def typeManipContextCommand(*args, **kwargs):
    """
    
    """
    pass


def SelectHullsMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderWindowSelectContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    Set the selection context for the render view panel.
    """
    pass


def dR_showAbout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def addDynamicAttribute(*args, **kwargs):
    """
    
    """
    pass


def error(noContext=None, n=None, showLineNumber=None, sl=None, *args, **kwargs):
    """
    
    """
    pass


def MirrorPolygonGeometryOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowHotbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def defineVirtualDevice(axis=None, ax=None, channel=None, c=None, clear=None, cl=None, create=None, cr=None, device=None, d=None, parent=None, p=None, undefine=None, u=None, usage=None, use=None, *args, **kwargs):
    """
    This command defines a virtual device. Virtual devices act like real devices and are useful to manipulate/playback data when an command device is not connected to the computer. 
    """
    pass


def LayerRelationshipEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSplinePreset(*args, **kwargs):
    """
    
    """
    pass


def CurveFlowOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def savePrefObjects(*args, **kwargs):
    """
    This command saves preference dependency nodes to "userPrefObjects.ma" in the user preference directory. 
    """
    pass


def xgmSmoothBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def DopeSheetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleOppositeFlagOfSelectedShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGroomTransfer(*args, **kwargs):
    """
    
    """
    pass


def xgmMakeGuideDynamic(*args, **kwargs):
    """
    
    """
    pass


def CVHardness(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonTorusOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmCreateSplineDescription(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorCreateOverrideLayer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderLayerRelationshipEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_modePoly(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyForceUV(cameraProjection=None, cp=None, createNewMap=None, cm=None, flipHorizontal=None, fh=None, flipVertical=None, fv=None, g=None, g=None, local=None, l=None, normalize=None, nor=None, numItems=None, ni=None, preserveAspectRatio=None, par=None, unitize=None, uni=None, unshare=None, u=None, uvSetName=None, uvs=None, *args, **kwargs):
    """
    A set of functionalities can be called through this command.The input for this command is a set of faces.Based on the arguments passed, the UVs for these selected faces can be created. 
    """
    pass


def SelectEdgeLoop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PlaybackBackward(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hardwareRenderPanel(camera=None, cam=None, control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, glRenderEditor=None, gre=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates, edit and queries hardware render panels which contain only a hardware render editor. 
    """
    pass


def cMuscleRayIntersect(*args, **kwargs):
    """
    
    """
    pass


def ToggleBackfaceCulling(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPyramid(axis=None, ax=None, createUVs=None, cuv=None, numberOfSides=None, ns=None, sideLength=None, w=None, subdivisionsCaps=None, sc=None, subdivisionsHeight=None, sh=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The pyramid command creates a new polygonal pyramid. 
    """
    pass


def PixelMoveRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def alignCtx(align=None, a=None, anchorFirstObject=None, afo=None, distribute=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, showAlignTouch=None, sat=None, *args, **kwargs):
    """
    The alignCtx command creates a tool for aligning and distributing objects. 
    """
    pass


def paint3d(*args, **kwargs):
    """
    
    """
    pass


def FBXImportCameras(*args, **kwargs):
    """
    
    """
    pass


def geometryDeleteCacheFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetProperty2StateAttrNameFromHIKEffectorId(*args, **kwargs):
    """
    
    """
    pass


def RemoveSubdivProxyMirrorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFocalLength(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menuSetPref(exists=None, e=None, force=None, f=None, loadAll=None, la=None, removeAll=None, ra=None, saveAll=None, sa=None, saveBackup=None, sb=None, version=None, v=None, *args, **kwargs):
    """
    Provides the functionality to save and load menuSets between sessions of Maya. For Internal Use Only! 
    """
    pass


def greaseRenderPlane(*args, **kwargs):
    """
    
    """
    pass


def polyCutUVCtx(*args, **kwargs):
    """
    
    """
    pass


def HideLattices(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def extrude(degreeAlongLength=None, dl=None, direction=None, d=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, extrudeType=None, et=None, fixedPath=None, fpt=None, length=None, l=None, pivot=None, p=None, reverseSurfaceIfPathReversed=None, rsp=None, rotation=None, ro=None, scale=None, sc=None, subCurveSubSurface=None, scs=None, useComponentPivot=None, ucp=None, useProfileNormal=None, upn=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, rebuild=None, rb=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command computes a surface given a profile curve and possibly a path curve. There are three ways to extrude a profile curve. The most basic method is called a "distance" extrude where direction and length are specified. No path curve is necessary in this case. The second method is called "flat" extrude. This method sweeps the profile curve down the path curve without changing the orientation of the profile curve. Finally, the third method is called "tube" extrude. This method sweeps a profile curve down a path curve while the profile curve rotates so that it maintains a relationship with the path curve. 
    """
    pass


def CreateMotionTrail(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusGetnParticleExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonSoccerBall(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def convertUnit(fromUnit=None, f=None, toUnit=None, t=None, *args, **kwargs):
    """
    This command converts values between different units of measure.The command takes a string, because a string can incorporate unit names as well as values (see examples). 
    """
    pass


def PaintOnPaintableObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def camera(aspectRatio=None, ar=None, cameraScale=None, cs=None, centerOfInterest=None, coi=None, clippingPlanes=None, cp=None, depthOfField=None, dof=None, displayFieldChart=None, dfc=None, displayFilmGate=None, dfg=None, displayFilmOrigin=None, dfo=None, displayFilmPivot=None, dfp=None, displayGateMask=None, dgm=None, displayResolution=None, dr=None, displaySafeAction=None, dsa=None, displaySafeTitle=None, dst=None, fStop=None, fs=None, farClipPlane=None, fcp=None, farFocusDistance=None, ffd=None, filmFit=None, ff=None, filmFitOffset=None, ffo=None, filmRollOrder=None, fro=None, filmRollValue=None, frv=None, filmTranslateH=None, fth=None, filmTranslateV=None, ftv=None, focalLength=None, fl=None, focusDistance=None, fd=None, homeCommand=None, hc=None, horizontalFieldOfView=None, hfv=None, horizontalFilmAperture=None, hfa=None, horizontalFilmOffset=None, hfo=None, horizontalPan=None, hpn=None, horizontalRollPivot=None, hrp=None, horizontalShake=None, hs=None, journalCommand=None, jc=None, lensSqueezeRatio=None, lsr=None, lockTransform=None, lt=None, motionBlur=None, mb=None, nearClipPlane=None, ncp=None, nearFocusDistance=None, nfd=None, orthographic=None, o=None, orthographicWidth=None, ow=None, overscan=None, ovr=None, panZoomEnabled=None, pze=None, position=None, p=None, postScale=None, pts=None, preScale=None, prs=None, renderPanZoom=None, rpz=None, rotation=None, rot=None, shakeEnabled=None, se=None, shakeOverscan=None, so=None, shakeOverscanEnabled=None, soe=None, shutterAngle=None, sa=None, startupCamera=None, sc=None, stereoHorizontalImageTranslate=None, hit=None, stereoHorizontalImageTranslateEnabled=None, she=None, verticalFieldOfView=None, vfv=None, verticalFilmAperture=None, vfa=None, verticalFilmOffset=None, vfo=None, verticalLock=None, vl=None, verticalPan=None, vpn=None, verticalRollPivot=None, vrp=None, verticalShake=None, vs=None, worldCenterOfInterest=None, wci=None, worldUp=None, wup=None, zoom=None, zom=None, *args, **kwargs):
    """
    Create, edit, or query a camera with the specified properties. 
    """
    pass


def ThreeRightSplitViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_DoCmd(*args, **kwargs):
    """
    
    """
    pass


def BrushAnimationMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapToPixel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TexSculptInvertPin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def IncreaseGammaFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFkIk(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickColorDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sampleImage(fastSample=None, f=None, resolution=None, r=None, *args, **kwargs):
    """
    The sampleImage command is used to control parameters of sample images, such as swatches in the multilister. The fast option turns on or off some rendering cheats which speed up the render but may cause edges to look ragged. The resolution option specifies the width in pixels of the image which will be rendered for the specified node. Note that the width of the image is also the height of the image since sample images are square. 
    """
    pass


def ctxCompletion(*args, **kwargs):
    """
    This command tells the current context to finish what it is doing and create any objects that is is working on. 
    """
    pass


def intSlider(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontal=None, hr=None, isObscured=None, io=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a slider control that accepts only integer values and is bound by a minimum and maximum value.The slider displays a marker indicating the current value of the slider relative to it's minimum and maximum values.Click and drag the marker or on the slider itself to change the current value. 
    """
    pass


def dR_increaseManipSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iconTextRadioButton(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, collection=None, cl=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, flat=None, fla=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, highlightImage=None, hi=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, onCommand=None, onc=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, select=None, sl=None, selectionHighlightImage=None, shi=None, selectionImage=None, si=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def OutlinerCollapseAllItems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TensionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def layerButton(annotation=None, ann=None, backgroundColor=None, bgc=None, color=None, cl=None, command=None, c=None, current=None, cr=None, defineTemplate=None, dt=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, hideOnPlaybackCommand=None, hpc=None, highlightColor=None, hlc=None, identification=None, id=None, isObscured=None, io=None, label=None, l=None, labelWidth=None, lw=None, layerHideOnPlayback=None, hp=None, layerState=None, ls=None, layerVisible=None, lv=None, manage=None, m=None, name=None, n=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, renameCommand=None, rc=None, select=None, s=None, transparent=None, t=None, typeCommand=None, tc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, visibleCommand=None, vc=None, width=None, w=None, *args, **kwargs):
    """
    Creates a layer bar button widget.This widget contains both the name of the layer to which it refers and a color swatch indicating it's color assignment.It is used primarily in the construction of the layerBar and layer Editor window, being the widget used for each layer in the respective lists. 
    """
    pass


def SmoothingDisplayShowBoth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def layeredShaderPort(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, node=None, n=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, selectedColorControl=None, scc=None, selectedTransparencyControl=None, stc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a 3dPort that displays an image representing the layered shader node specified. 
    """
    pass


def createNurbsCircleCtx(*args, **kwargs):
    """
    
    """
    pass


def CreateSpring(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UniversalManip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def visor(addFolder=None, add=None, addNodes=None, adn=None, allowPanningInX=None, apx=None, allowPanningInY=None, apy=None, allowZooming=None, az=None, command=None, cmd=None, deleteFolder=None, deleteFolder=None, editFolder=None, edf=None, folderList=None, fl=None, menu=None, mn=None, name=None, n=None, nodeType=None, ntp=None, openDirectories=None, opd=None, openFolder=None, opf=None, parent=None, p=None, path=None, pth=None, popupMenuScript=None, pms=None, rebuild=None, re=None, refreshAllSwatches=None, ras=None, refreshSelectedSwatches=None, rss=None, refreshSwatch=None, rs=None, reset=None, rst=None, restrictPanAndZoom=None, rpz=None, saveSwatches=None, ss=None, scrollBar=None, sb=None, scrollPercent=None, sp=None, selectedGadgets=None, sg=None, showDividers=None, sd=None, showFiles=None, sfi=None, showFolders=None, sfo=None, showNodes=None, sn=None, stateString=None, sts=None, style=None, stl=None, transform=None, trn=None, type=None, typ=None, *args, **kwargs):
    """
    Command for the creation and manipulation of a Visor UI element. The Visor is used to display the contents of a scene (rendering related nodes in particular), as well as files on disk which the user may wish to bring into the scene (shader and texture libraries for example).
    """
    pass


def mateCtx(*args, **kwargs):
    """
    
    """
    pass


def soloMaterial(attr=None, a=None, last=None, l=None, node=None, n=None, unsolo=None, us=None, *args, **kwargs):
    """
    Shows a preview of a specified material node output attribute.
    """
    pass


def CollapseSubdivSurfaceHierarchyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCompIDs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusDisplayTextureNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setKeyframeBlendshapeTargetWts(*args, **kwargs):
    """
    This command can be used to keyframe per-point blendshape target weights. It operates on the currently selected objects as follows. When the base object is selected, then the target weights are keyed for all targets. When only target shapes are selected, then the weights for thoses targets are keyframed.
    """
    pass


def TanimLayer(*args, **kwargs):
    """
    
    """
    pass


def SubdivSmoothnessFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def softSelect(compressUndo=None, cu=None, enableFalseColor=None, efc=None, softSelectColorCurve=None, scc=None, softSelectCurve=None, ssc=None, softSelectDistance=None, ssd=None, softSelectEnabled=None, sse=None, softSelectFalloff=None, ssf=None, softSelectReset=None, ssr=None, softSelectUVDistance=None, sud=None, *args, **kwargs):
    """
    This command allows you to change the soft modelling options. 
    """
    pass


def UnlockContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicExportSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreatePoseClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def offsetCurveOnSurface(checkPoints=None, cp=None, connectBreaks=None, cb=None, cutLoop=None, cl=None, distance=None, d=None, stitch=None, st=None, subdivisionDensity=None, sd=None, tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The offsetCurveOnSurface command offsets a curve on surface resulting in another curve on surface. The connecting type for breaks in offsets is off (no connection), circular (connect with an arc) or linear (connect linearly resulting in a sharp corner). If loop cutting is on then any loops in the offset curves are trimmed away and a sharp corner is created at each intersection. The subdivisionDensity flag is the maximum number of times the offset object can be subdivided (i.e. calculate the offset until the offset comes within tolerance or the iteration reaches this maximum.) The checkPoints flag sets the number of points per span at which the distance of the offset curve from the original curve is determined. The tolerance flag determines how accurately the offset curve should satisfy the required offset distance. A satisfactory offset curve is one for which all of the checkpoints are within the given tolerance of the required offset. 
    """
    pass


def AlembicExportSelectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshKnifeToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def minimizeApp(*args, **kwargs):
    """
    This command minimizes (iconifies) all of the application's windows into a single desktop icon.To restore the application click on the desktop icon. 
    """
    pass


def WaveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def effector(hide=None, hi=None, name=None, n=None, *args, **kwargs):
    """
    The effector command is used to set the name or hidden flag for the effector.The standard edit (-e) and query (-q) flags are used for edit and query functions. 
    """
    pass


def devicePanel(*args, **kwargs):
    """
    This command is now obsolete. It is included only for the purpose of file compatibility. It creates a blank panel. 
    """
    pass


def SelectAllBrushes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StitchTogetherOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MediumQualityDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportQuaternion(*args, **kwargs):
    """
    
    """
    pass


def PaintOnViewPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheReplaceOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusGetEffectsAsset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeControl(animCurveNames=None, acn=None, animLayerFilterOptions=None, alf=None, animLayerShowWeight=None, asw=None, annotation=None, ann=None, backgroundColor=None, bgc=None, beginScrub=None, bs=None, currentFrameColor=None, cfc=None, defineTemplate=None, dt=None, displaySound=None, ds=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, endScrub=None, es=None, exists=None, ex=None, forceRedraw=None, fd=None, forceRefresh=None, fr=None, foregroundColor=None, fgc=None, fullPathName=None, fpn=None, globalTime=None, gt=None, greasePencilSequenceNames=None, gn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, mainListConnection=None, mlc=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, pressCommand=None, pc=None, preventOverride=None, po=None, range=None, rng=None, rangeArray=None, ra=None, rangeVisible=None, rv=None, releaseCommand=None, rc=None, repeatChunkSize=None, rcs=None, repeatOnHold=None, roh=None, resample=None, r=None, showGreaseFrames=None, sg=None, showKeys=None, sk=None, showKeysCombined=None, skc=None, snap=None, sn=None, sound=None, s=None, tickSize=None, ts=None, tickSpan=None, tsp=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, waveform=None, wf=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control that can be used for changing current time, displaying/editing keys, and displaying/scrubbing sound.
    """
    pass


def polySelectCtx(mode=None, m=None, *args, **kwargs):
    """
    Create a new context to select polygon components
    """
    pass


def dR_activeHandleZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_activeHandleY(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddEdgeDivisionsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BendCurvesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignCameraToPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LatticeDeformKeysTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def timeEditorAnimSource(addSource=None, asc=None, apply=None, ap=None, bakeToAnimSource=None, bas=None, calculateTiming=None, ct=None, copyAnimation=None, cp=None, drivenClips=None, dc=None, export=None, ex=None, isUnique=None, iu=None, removeSource=None, rs=None, targetIndex=None, ti=None, targets=None, trg=None, addObjects=None, ao=None, addRelatedKG=None, akg=None, addSelectedObjects=None, aso=None, attribute=None, at=None, exclusive=None, exc=None, importAllFbxTakes=None, aft=None, importFbx=None, fbx=None, importFbxTakes=None, ft=None, importMayaFile=None, mf=None, importOption=None, io=None, importPopulateOption=None, ipo=None, importedContainerNames=None, icn=None, includeRoot=None, irt=None, populateImportedAnimSources=None, pia=None, poseClip=None, poc=None, recursively=None, rec=None, removeSceneAnimation=None, rsa=None, showAnimSourceRemapping=None, sar=None, takeList=None, tl=None, takesToImport=None, toi=None, type=None, typ=None, *args, **kwargs):
    """
    Commands for managing animation sources.
    """
    pass


def HypershadeToggleAttrFilter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportTangents(*args, **kwargs):
    """
    
    """
    pass


def CurveFilletOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def particleRenderInfo(attrList=None, al=None, attrListAll=None, ala=None, name=None, n=None, renderTypeCount=None, rtc=None, *args, **kwargs):
    """
    This action provides information access to the particle render subclasses. These are derived from TdynRenderBase. This action is used primarily by the Attribute Editor to gather information about attributes used for rendering. 
    """
    pass


def cMuscleAbout(*args, **kwargs):
    """
    
    """
    pass


def sbs_GetGlobalTextureHeight(*args, **kwargs):
    """
    
    """
    pass


def MoveNormalToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PostInfinityCycle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChangeNormalSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyOutput(allValues=None, a=None, color=None, c=None, colorDesc=None, cd=None, edge=None, e=None, edgeFace=None, ef=None, face=None, f=None, faceNorm=None, fn=None, force=None, fo=None, group=None, g=None, noOutput=None, no=None, normDesc=None, nd=None, triangle=None, t=None, uvDesc=None, uvd=None, uvValue=None, uv=None, vert=None, v=None, vertEdge=None, ve=None, vertNorm=None, vn=None, *args, **kwargs):
    """
    Dumps a description of internal memory representation of poly objects. If no objects are specified in the command line, then the objects from the active list are used. If information on the geometry in the history of a poly shape is desired, then the plug of interest needs to be specified in the command line. Default behaviour is to print only a summary. Use the flags above to get more details on a specific part of the object. 
    """
    pass


def sbs_GetEnumValue(*args, **kwargs):
    """
    
    """
    pass


def FireOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorGhostTrackToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def format(stringArg=None, s=None, *args, **kwargs):
    """
    This command takes a format string, where the format string contains format specifiers.The format specifiers have a number associated with them relating to which parameter they represent to allow for alternate ordering of the passed-in values for other languages by merely changing the format string
    """
    pass


def swatchRefresh(*args, **kwargs):
    """
    The 
    """
    pass


def PickWalkUp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivCone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorManagementFileRules(addRule=None, add=None, colorSpace=None, cs=None, down=None, dwn=None, evaluate=None, ev=None, extension=None, ext=None, listRules=None, lsr=None, load=None, ld=None, moveUp=None, up=None, pattern=None, pat=None, remove=None, rm=None, save=None, sav=None, *args, **kwargs):
    """
    This non-undoable action manages the list of rules that Maya uses to assign an initial input color space to dependency graph nodes that read in color information from a file.Rules are structured in a chain of responsibility, from highest priority rule to lowest priority rule, each rule matching a file path pattern and extension.If a rule matches a given file path, its color space is returned as the result of rules evaluation, and no further rule is considered.The lowest priority rule will always return a match. Rules can be added, removed, and changed in priority in the list.Each rule can have its file path pattern, extension, and color space changed. The rule list can be saved to user preferences, and loaded from user preferences.
    """
    pass


def attributeName(leaf=None, lf=None, long=None, l=None, nice=None, n=None, short=None, s=None, *args, **kwargs):
    """
    This command takes one "node.attribute"-style specifier on the command line and returns either the attribute's long, short, or nice name.(The "nice" name, or UI name, is the name used to display the attribute in Maya's interface, and may be localized when running Maya in a language other than English.) If more than one "node.attribute" specifier is given on the command line, only the first valid specifier is processed.
    """
    pass


def OptimzeUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Air(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleKeepWireCulling(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateBezierCurveToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableExpressions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateExpressionClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBoatLocatorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def groupParts(*args, **kwargs):
    """
    
    """
    pass


def xgmBrushManip(*args, **kwargs):
    """
    
    """
    pass


def XgmSplineCacheCreate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeAutoSizeNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_scalePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSTorusOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rotate(absolute=None, a=None, centerPivot=None, cp=None, constrainAlongNormal=None, xn=None, deletePriorHistory=None, dph=None, euler=None, eu=None, forceOrderXYZ=None, fo=None, objectCenterPivot=None, ocp=None, objectSpace=None, os=None, pivot=None, p=None, preserveChildPosition=None, pcp=None, preserveGeometryPosition=None, pgp=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAboutBBox=None, rab=None, reflectionAboutOrigin=None, rao=None, reflectionAboutX=None, rax=None, reflectionAboutY=None, ray=None, reflectionAboutZ=None, raz=None, reflectionTolerance=None, rft=None, relative=None, r=None, rotateX=None, x=None, rotateXY=None, xy=None, rotateXYZ=None, xyz=None, rotateXZ=None, xz=None, rotateY=None, y=None, rotateYZ=None, yz=None, rotateZ=None, z=None, symNegative=None, smn=None, translate=None, t=None, worldSpace=None, ws=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    The rotate command is used to change the rotation of geometric objects. The rotation values are specified as Euler angles (rx, ry, rz). The values are interpreted based on the current working unit for Angular measurements. Most often this is degrees. 
    """
    pass


def xgmCutBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def SetFullBodyIKKeysKeyToPin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteTimeWarp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateBezierCurveTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def buildBookmarkMenu(editor=None, ed=None, type=None, typ=None, *args, **kwargs):
    """
    This command handles building the "dynamic" Bookmark menu, to show all bookmarks ("sets") of a specified type ("sets -text") 
    """
    pass


def MatchUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def flushIdleQueue(*args, **kwargs):
    """
    
    """
    pass


def SymmetrizeUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createCurveWarp(*args, **kwargs):
    """
    
    """
    pass


def SinglePerspectiveViewLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeVertexOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSmoothnessHullOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EmitFromObjectOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHairExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createNurbsTorusCtx(*args, **kwargs):
    """
    
    """
    pass


def dbpeek(allObjects=None, all=None, argument=None, a=None, count=None, c=None, evaluationGraph=None, eg=None, operation=None, op=None, outputFile=None, of=None, *args, **kwargs):
    """
    The 
    """
    pass


def HypershadeOpenOutlinerWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveUVTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableMemoryCaching(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMultiColorFeedback(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyMergeEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def propModCtx(animCurve=None, ac=None, animCurveFalloff=None, acf=None, animCurveParam=None, acp=None, direction=None, d=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, linear=None, l=None, linearParam=None, lp=None, nurbsCurve=None, nc=None, powerCutoff=None, pc=None, powerCutoffParam=None, pcp=None, powerDegree=None, pd=None, powerDegreeParam=None, pdp=None, script=None, s=None, scriptParam=None, sp=None, type=None, t=None, worldspace=None, ws=None, *args, **kwargs):
    """
    Controls the proportional move context.
    """
    pass


def displayAffected(*args, **kwargs):
    """
    Turns on/off the special coloring of objects that are affected by the objects that are currently in the selection list. 
    """
    pass


def marker(attach=None, a=None, detach=None, d=None, frontTwist=None, ft=None, orientationMarker=None, om=None, positionMarker=None, pm=None, sideTwist=None, st=None, time=None, t=None, upTwist=None, ut=None, valueU=None, u=None, *args, **kwargs):
    """
    The marker command creates one or two markers, on a motion path curve, at the specified time and location. The optionnal string argument is the parent object name.
    """
    pass


def TogglePanelMenubar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClearInitialState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowNURBSSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InitialFluidStatesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorGraphRemoveUnselected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyEditUV(angle=None, a=None, pivotU=None, pu=None, pivotV=None, pv=None, relative=None, r=None, rotation=None, rot=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, uValue=None, u=None, uvSetName=None, uvs=None, vValue=None, v=None, *args, **kwargs):
    """
    Command edits uvs on polygonal objects. When used with the query flag, it returns the uv values associated with the specified components.
    """
    pass


def PaintRandom(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReversePolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmBakeGuideVertices(*args, **kwargs):
    """
    
    """
    pass


def ToggleCameraNames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scale(absolute=None, a=None, centerPivot=None, cp=None, constrainAlongNormal=None, xn=None, deletePriorHistory=None, dph=None, distanceOnly=None, dso=None, localSpace=None, ls=None, objectCenterPivot=None, ocp=None, objectSpace=None, os=None, orientAxes=None, oa=None, pivot=None, p=None, preserveChildPosition=None, pcp=None, preserveGeometryPosition=None, pgp=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAboutBBox=None, rab=None, reflectionAboutOrigin=None, rao=None, reflectionAboutX=None, rax=None, reflectionAboutY=None, ray=None, reflectionAboutZ=None, raz=None, reflectionTolerance=None, rft=None, relative=None, r=None, scaleX=None, x=None, scaleXY=None, xy=None, scaleXYZ=None, xyz=None, scaleXZ=None, xz=None, scaleY=None, y=None, scaleYZ=None, yz=None, scaleZ=None, z=None, symNegative=None, smn=None, worldSpace=None, ws=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    The scale command is used to change the sizes of geometric objects. 
    """
    pass


def Redo(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostFoam(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Fire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def affects(type=None, t=None, *args, **kwargs):
    """
    This command returns the list of attributes on a node or node type which affect the named attribute.
    """
    pass


def LODGenerateMeshes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def softModContext(*args, **kwargs):
    """
    
    """
    pass


def graphDollyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command can be used to create a dolly context for the graph editor. 
    """
    pass


def CreateVolumeLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_extrudeRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def palettePort(actualTotal=None, at=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, colorEditable=None, ced=None, colorEdited=None, ce=None, defineTemplate=None, dt=None, dimensions=None, dim=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, redraw=None, r=None, rgbValue=None, rgb=None, setCurCell=None, scc=None, topDown=None, td=None, transparent=None, t=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates an array of color cells. It could be used to to store an retrieve some colors you want to manage during your working session. 
    """
    pass


def freeFormFillet(bias=None, b=None, depth=None, d=None, positionTolerance=None, pt=None, tangentTolerance=None, tt=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a free form surface fillet across two surface trim edges or isoparms or curve on surface. The fillet surface creation has blend controls in the form of bias and depth. The bias value scales the tangents at the two ends across the two selected curves. The depth values controls the curvature of the fillet across the two selected curves. The default values of depth, bias are 0.5 and 0.5 respectively. 
    """
    pass


def dropoffLocator(*args, **kwargs):
    """
    This command adds one or more dropoff locators to a wire curve, one for each selected curve point. The dropoff locators can be used to provide localized tuning of the wire deformation about the curve point. 
    """
    pass


def vnn(flushProxies=None, fp=None, libraries=None, lib=None, listPortTypes=None, lpt=None, nodes=None, nd=None, runTimes=None, rt=None, *args, **kwargs):
    """
    This command is used for operations that apply to a whole VNN runtime, for example Bifrost.The Create Node window uses it to build its list of nodes.
    """
    pass


def DeleteAllRigidConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayShadingMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetPreferredAngleOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def evalDeferred(list=None, ls=None, lowPriority=None, low=None, lowestPriority=None, lp=None, *args, **kwargs):
    """
    This command takes the string it is given and evaluates it during the next available idle time.It is useful for attaching commands to controls that can change or delete the control. 
    """
    pass


def messageLine(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a message line where tool feedback is shown. 
    """
    pass


def nurbsSelect(borderSelection=None, bs=None, bottomBorder=None, bb=None, growSelection=None, gs=None, leftBorder=None, lb=None, rightBorder=None, rb=None, shrinkSelection=None, ss=None, topBorder=None, tb=None, *args, **kwargs):
    """
    Performs selection operations on NURBS objects.
    """
    pass


def geometryDeleteCacheFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllNCloths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySelectEditCtxDataCmd(*args, **kwargs):
    """
    
    """
    pass


def copyAttr(attribute=None, at=None, containerParentChild=None, cpc=None, inConnections=None, ic=None, keepSourceConnections=None, ksc=None, outConnections=None, oc=None, renameTargetContainer=None, rtc=None, values=None, v=None, *args, **kwargs):
    """
    Given two nodes, transfer the connections and/or the values from the first node to the second for all attributes whose names and data types match. When values are transferred, they are transferred directly. They are not mapped or modified in any way. The transferAttributes command can be used to transfer and remap some mesh attributes. The attributes flag can be used to specify a list of attributes to be processed. If the attributes flag is unused, all attributes will be processed. For dynamic attributes, the values and/or connections will only be transferred if the attributes names on both nodes match. This command does not support geometry shape nodes such as meshes, subds and nurbs. This command does not support transfer of multi-attribute values such as weight arrays.
    """
    pass


def nClothReplaceFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetFluidExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResampleCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetInitialState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MediumPolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSCircleOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WrinkleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def detachCurve(keep=None, k=None, parameter=None, p=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The detachCurve command detaches a curve into pieces, given a list of parameter values.You can also specify which pieces to keep and which to discard using the "-k" flag. The names of the newly detached curve(s) is returned.If history is on, then the name of the resulting dependency node is also returned. 
    """
    pass


def insertKnotSurface(addKnots=None, add=None, direction=None, d=None, insertBetween=None, ib=None, numberOfKnots=None, nk=None, parameter=None, p=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The insertKnotSurface command inserts knots (aka isoparms) into a surface given a list of parameter values.The number of knots to add at each parameter value and whether the knots are added or complemented can be specified. The name of the surface is returned and if history is on, the name of the resulting dependency node is also returned. 
    """
    pass


def dR_multiCutTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deleteNclothCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBIKReachKeyingOptionSimple(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NCreateEmitterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WeightedTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ParentBaseWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonCopyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPlaceBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def CreateNURBSSquareOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutUVsWithoutHotkey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkStopAtTransform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPinUV(createHistory=None, ch=None, operation=None, op=None, uvSetName=None, uvs=None, value=None, v=None, *args, **kwargs):
    """
    
    """
    pass


def dR_softSelDistanceTypeVolume(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectEdgeMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artSelect(*args, **kwargs):
    """
    
    """
    pass


def progressWindow(endProgress=None, ep=None, isCancelled=None, ic=None, isInterruptable=None, ii=None, maxValue=None, max=None, minValue=None, min=None, progress=None, pr=None, status=None, st=None, step=None, s=None, title=None, t=None, *args, **kwargs):
    """
    The progressWindow command creates a window containing a status message, a graphical progress gauge, and optionally a "Hit ESC to Cancel" label for interruptable operations. 
    """
    pass


def SubdivSurfacePolygonProxyMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlignCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def manipRotateLimitsCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Create a context for the rotate limits manipulator.
    """
    pass


def ogsRender(activeMultisampleType=None, mst=None, activeRenderOverride=None, cro=None, activeRenderTargetFormat=None, fpt=None, availableFloatingPointTargetFormat=None, afp=None, availableMultisampleType=None, amt=None, availableRenderOverrides=None, aro=None, camera=None, cam=None, currentFrame=None, cf=None, currentView=None, cv=None, enableFloatingPointRenderTarget=None, efp=None, enableMultisample=None, ems=None, frame=None, f=None, height=None, h=None, layer=None, l=None, noRenderView=None, nrv=None, width=None, w=None, *args, **kwargs):
    """
    Renders an image or a sequence using the OGS rendering engine
    """
    pass


def ResolveInterpenetration(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkOut(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyTriangulate(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Triangulation breaks polygons down into triangles, ensuring that all faces are planar and non-holed. Triangulation of models can be beneficial in many areas. 
    """
    pass


def dR_convertSelectionToUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyUVVectorPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportUseSceneName(*args, **kwargs):
    """
    
    """
    pass


def ProfilerToolHideSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shotTrack(insertTrack=None, it=None, lock=None, l=None, mute=None, m=None, numTracks=None, nt=None, removeEmptyTracks=None, ret=None, removeTrack=None, rt=None, selfmute=None, sm=None, solo=None, so=None, swapTracks=None, st=None, title=None, t=None, track=None, tr=None, unsolo=None, uso=None, *args, **kwargs):
    """
    This command is used for inserting and removing tracks related to the shots displayed in the Sequencer. It can also be used to modify the track state, for example, to lock or mute a track.
    """
    pass


def playbackOptions(animationEndTime=None, aet=None, animationStartTime=None, ast=None, blockingAnim=None, ba=None, by=None, by=None, framesPerSecond=None, fps=None, loop=None, l=None, maxPlaybackSpeed=None, mps=None, maxTime=None, max=None, minTime=None, min=None, playbackSpeed=None, ps=None, view=None, v=None, *args, **kwargs):
    """
    This command sets/queries certain values associated with playback: looping style, start/end times, etc. Only commands modifying the -minTime/maxTime, the -animationStartTime/animationEndTime, or the -by value are undoable. 
    """
    pass


def SmoothBindSkin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetLattice(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorIndexSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraLabel=None, el=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, invisible=None, inv=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def dR_pointSnapPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceBooleanIntersectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def curveAddPtCtx(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    The curveAddPtCtx command creates a new curve add points context, which adds either control vertices (CVs) or edit points to an existing curve. 
    """
    pass


def CloseFrontWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createDisplayLayer(empty=None, e=None, makeCurrent=None, mc=None, name=None, n=None, noRecurse=None, nr=None, number=None, num=None, *args, **kwargs):
    """
    Create a new display layer.The display layer number will be assigned based on the first unassigned number not less than the base index number found in the display layer global parameters.Normally all objects and their descendants will be added to the new display layer but if the '-nr' flag is specified then only the objects themselves will be added.
    """
    pass


def nClothCreate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplinePresetExport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleChannelBox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllClusters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PresetBlendingWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateShot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExpandSelectedComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def querySubdiv(action=None, a=None, level=None, l=None, relative=None, r=None, *args, **kwargs):
    """
    Queries a subdivision surface based on a set of query parameters and updates the selection list with the results.
    """
    pass


def PolyCreaseToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Drag(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_extrudePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtrudeEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSSphere(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeBoats(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransplantHair(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dagObjectHit(*args, **kwargs):
    """
    
    """
    pass


def AddSelectionAsInBetweenTargetShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_slideSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowStrokeControlCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeMultipleEdgesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowControllers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateOceanWakeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickSetCallback(*args, **kwargs):
    """
    
    """
    pass


def curveMoveEPCtx(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    The curveMoveEPCtx command creates a new context for moving curve edit points using a manipulator.Edit points can only be moved one at a time. 
    """
    pass


def artAttrSkinPaint(*args, **kwargs):
    """
    
    """
    pass


def editorTemplate(addAdskAssetControls=None, aac=None, addComponents=None, acp=None, addControl=None, ac=None, addDynamicControl=None, adc=None, addExtraControls=None, aec=None, addSeparator=None, addSeparator=None, annotateFieldOnly=None, afo=None, annotation=None, ann=None, beginLayout=None, bl=None, beginNoOptimize=None, bn=None, beginScrollLayout=None, bsl=None, callCustom=None, ccu=None, collapse=None, cl=None, dimControl=None, dc=None, endLayout=None, el=None, endNoOptimize=None, en=None, endScrollLayout=None, esl=None, extraControlsLabel=None, ecl=None, interruptOptimize=None, io=None, label=None, l=None, listExtraAttributes=None, lea=None, preventOverride=None, po=None, queryControl=None, qc=None, queryLabel=None, ql=None, queryName=None, qn=None, removeControl=None, rc=None, suppress=None, s=None, *args, **kwargs):
    """
    The editorTemplate command allows the user to specify the conceptual layout of an attribute editor and leave the details of exactly which UI elements are used in the final result to the automatic dialog generation mechanism. 
    """
    pass


def turbulence(attenuation=None, att=None, frequency=None, f=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, noiseLevel=None, nsl=None, noiseRatio=None, nsr=None, perVertex=None, pv=None, phase=None, p=None, phaseX=None, px=None, phaseY=None, py=None, phaseZ=None, pz=None, position=None, pos=None, *args, **kwargs):
    """
    A turbulence field causes irregularities (also called 'noise' or 'jitter') in the motion of affected objects. 
    """
    pass


def CreateCreaseSetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def flexor(atBones=None, ab=None, atJoints=None, aj=None, deformerCommand=None, dc=None, list=None, l=None, name=None, n=None, noScale=None, ns=None, toSkeleton=None, ts=None, type=None, typ=None, *args, **kwargs):
    """
    This command creates a flexor. A flexor a deformer plus a set of drivingattributes. For example, a flexor might be a sculpt object that is driven by a joint's x rotation and a cube's y position. 
    """
    pass


def NodeEditorToggleZoomOut(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_contextChanged(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorShapeMenuStateAllExceptShadingGroupMembers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmCombBrushContext(*args, **kwargs):
    """
    
    """
    pass


def PolygonApplyColorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texWinToolCtx(alternateContext=None, ac=None, boxzoom=None, bz=None, dolly=None, do=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, toolName=None, tn=None, track=None, tr=None, *args, **kwargs):
    """
    This class creates a context for the View Tools "track", "dolly", and "box zoom" in the texture window. 
    """
    pass


def CreatePolygonPyramid(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmCurveToGuide(*args, **kwargs):
    """
    
    """
    pass


def ExtendFluidOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bevel(bevelShapeType=None, bst=None, cornerType=None, ct=None, depth=None, d=None, extrudeDepth=None, ed=None, tolerance=None, tol=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The bevel command creates a new bevel surface for the specified curve. The curve can be any nurbs curves. 
    """
    pass


def appendListItem(*args, **kwargs):
    """
    
    """
    pass


def MakePondMotorBoatsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetRigidBodyInterpenetration(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshBulgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishChildAnchor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothSkinWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bifMeshExport(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorAddToSoloSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothMergeCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRefreshSelectedSwatchesOnDisk(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def torus(axis=None, ax=None, degree=None, d=None, endSweep=None, esw=None, heightRatio=None, hr=None, minorSweep=None, msw=None, pivot=None, p=None, radius=None, r=None, sections=None, s=None, spans=None, nsp=None, startSweep=None, ssw=None, tolerance=None, tol=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The torus command creates a new torus and/or a dependency node that creates one, and returns their names. 
    """
    pass


def deviceEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, takePath=None, tp=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This creates an editor for creating/modifying attachments to input devices. 
    """
    pass


def TimeEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateExpressionClipOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SewUVsWithoutHotkey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectComponentToolMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BifMeshImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RebuildSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrColorSliderGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, attrNavDecision=None, attrNavDecision=None, attribute=None, at=None, backgroundColor=None, bgc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, hsvValue=None, hsv=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rgbValue=None, rgb=None, rowAttach=None, rat=None, showButton=None, sb=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def cMuscleRelaxSetup(*args, **kwargs):
    """
    
    """
    pass


def shadingGeometryRelCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, offCommand=None, ofc=None, onCommand=None, onc=None, shadingCentric=None, s=None, *args, **kwargs):
    """
    This command creates a context that can be used for associating geometry to shading groups.You can put the context into shading-centric mode by using the -shadingCentric flag and specifying true.This means that the shading group is selected first then geometry associated with the shading group are highlighted.Subsequent selections result in assignments. 
    """
    pass


def warning(noContext=None, n=None, showLineNumber=None, sl=None, *args, **kwargs):
    """
    
    """
    pass


def attachFluidCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LockTangentWeight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldListAttributes(*args, **kwargs):
    """
    
    """
    pass


def FireworksOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def componentEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, floatField=None, ff=None, floatSlider=None, fs=None, forceMainConnection=None, fmc=None, hidePathName=None, hpn=None, hideZeroColumns=None, hzc=None, highlightConnection=None, hlc=None, lockInput=None, li=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, newTab=None, nt=None, operationCount=None, oc=None, operationLabels=None, ol=None, operationType=None, ot=None, panel=None, pnl=None, parent=None, p=None, precision=None, pre=None, removeTab=None, rt=None, selected=None, sl=None, selectionConnection=None, slc=None, setOperationLabel=None, sol=None, showObjects=None, so=None, showSelected=None, ss=None, sortAlpha=None, sa=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a new component editor in the current layout. 
    """
    pass


def RevolveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rampColorPort(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, node=None, n=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, selectedColorControl=None, sc=None, selectedInterpControl=None, si=None, selectedPositionControl=None, sp=None, useTemplate=None, ut=None, verticalLayout=None, vl=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control that displays an image representing the ramp node specified, and supports editing of that node. 
    """
    pass


def TogglePolyUVsCreateShader(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPreview(*args, **kwargs):
    """
    
    """
    pass


def clipEditorCurrentTimeCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to change current time within the track area of a clip editor. 
    """
    pass


def HideHotbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteChannelsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textManip(visible=None, v=None, *args, **kwargs):
    """
    Shows/hides the text manip.
    """
    pass


def fluidMergeCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateBlendShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def isDescendentPulling(*args, **kwargs):
    """
    
    """
    pass


def GroupOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SendToUnitySetProject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeVertexTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def lsThroughFilter(item=None, it=None, nodeArray=None, na=None, reverse=None, rv=None, selection=None, sl=None, sort=None, so=None, *args, **kwargs):
    """
    List all objects in the world that pass a given filter.
    """
    pass


def dolly(absolute=None, abs=None, distance=None, d=None, dollyTowardsCenter=None, dtc=None, orthoScale=None, os=None, relative=None, rel=None, *args, **kwargs):
    """
    The dolly command moves a camera along the viewing direction in the world space. The viewing-direction and up-direction of the camera are not altered. There are two modes of operation: 
    """
    pass


def ExportDeformerWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fitBspline(tolerance=None, tol=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The fitBspline command fits the CVs from an input curve and and returns a 3D curve. 
    """
    pass


def ReverseSurfaceDirection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def suitePrefs(applyToSuite=None, ats=None, installedAsSuite=None, ias=None, isCompleteSuite=None, ics=None, *args, **kwargs):
    """
    This command sets the mouse and keyboard interaction mode for Maya and other Suites applications (if Maya is part of a Suites install).
    """
    pass


def MoveInfluence(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothHairCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def U3DBrushPressureOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShrinkLoopPolygonSelectionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssumePreferredAngle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectCurveCVsLast(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InteractivePlayback(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKBodyPartMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeStats(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, animEditor=None, ae=None, annotation=None, ann=None, backgroundColor=None, bgc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, rowAttach=None, rat=None, timeAnnotation=None, tan=None, useTemplate=None, ut=None, valueAnnotation=None, van=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def polyMergeUV(distance=None, d=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Merge UVs of an object based on their distance. UVs are merge only if they belong to the same 3D vertex. 
    """
    pass


def NURBSSmoothnessHull(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AverageVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyWedgeFace(axis=None, ax=None, center=None, cen=None, divisions=None, d=None, edge=None, ed=None, wedgeAngle=None, wa=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Extrude faces about an axis. The axis is the average of all the selected edges. If the edges are not aligned, the wedge may not look intuitive.To separately wedge faces about different wedge axes, the command should be issued as many times as the wedge axes. (as in the second example) 
    """
    pass


def drag(attenuation=None, att=None, directionX=None, dx=None, directionY=None, dy=None, directionZ=None, dz=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, useDirection=None, ud=None, *args, **kwargs):
    """
    Drag exerts a friction, or braking force proportional to the speed of a moving object. If direction is not enabled, the drag acts opposite to the current velocity of the object. If direction is enabled, it acts opposite to the component of the velocity in the specified direction. The force is independent of the position of the affected object. 
    """
    pass


def HypershadeToggleZoomIn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def currentTimeCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to change current time within the graph editor 
    """
    pass


def adskAsset(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorGraphRemoveUpstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def wrinkle(axis=None, ax=None, branchCount=None, brc=None, branchDepth=None, bd=None, center=None, ct=None, crease=None, cr=None, dropoffDistance=None, dds=None, envelope=None, en=None, randomness=None, rnd=None, style=None, st=None, thickness=None, th=None, uvSpace=None, uv=None, wrinkleCount=None, wc=None, wrinkleIntensity=None, wi=None, *args, **kwargs):
    """
    The wrinkle command is used to create a network of wrinkles on a surface. It automatically creates a network of wrinkle curves that control a wire deformer. The wrinkle curves are attached to a cluster deformer. 
    """
    pass


def MoveNearestPickedKeyToolActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InteractiveSplitTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RerootSkeleton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphDeleteOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleStatusLine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hudButton(allowOverlap=None, ao=None, block=None, b=None, blockAlignment=None, ba=None, blockSize=None, bs=None, buttonShape=None, bsh=None, buttonWidth=None, bw=None, label=None, l=None, labelFontSize=None, lfs=None, padding=None, p=None, pressCommand=None, pc=None, releaseCommand=None, rc=None, section=None, s=None, visible=None, vis=None, *args, **kwargs):
    """
    This command creates a Heads-up Display (HUD) button control which is placed in a 2D inactive overlay plane on the 3D viewport. It is to be used to provide hands-on interaction designated by a user script. The HUD button is derived from a generic HUD object and thus inherits a similar workflow. 
    """
    pass


def FBXExportBakeComplexAnimation(*args, **kwargs):
    """
    
    """
    pass


def dgcontrol(*args, **kwargs):
    """
    
    """
    pass


def xgmSetAttr(*args, **kwargs):
    """
    
    """
    pass


def orbit(horizontalAngle=None, ha=None, pivotPoint=None, pp=None, rotationAngles=None, ra=None, verticalAngle=None, va=None, *args, **kwargs):
    """
    The orbit command revolves the camera(s) horizontally and/or vertically in the perspective window. The rotation axis is with respect to the camera. 
    """
    pass


def renderSetupPostApply(*args, **kwargs):
    """
    
    """
    pass


def defineDataServer(device=None, d=None, server=None, s=None, undefine=None, u=None, *args, **kwargs):
    """
    
    """
    pass


def PolygonSoftenHarden(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowDynamicsUI(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FrameSelectedWithoutChildrenInAllViews(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSToPolygonsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderSetupHighlight(*args, **kwargs):
    """
    
    """
    pass


def InsertIsoparmsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDuplicateWithoutNetwork(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_scaleTweakTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportMergeBackNullPivots(*args, **kwargs):
    """
    
    """
    pass


def SelectEdgeRingSp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dgdebug(*args, **kwargs):
    """
    
    """
    pass


def wire(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, crossingEffect=None, ce=None, deformerTools=None, dt=None, dropoffDistance=None, dds=None, envelope=None, en=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, groupWithBase=None, gw=None, holder=None, ho=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, localInfluence=None, li=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, split=None, sp=None, wire=None, w=None, wireCount=None, wc=None, *args, **kwargs):
    """
    This command creates a wire deformer. 
    """
    pass


def FBXImportUnlockNormals(*args, **kwargs):
    """
    
    """
    pass


def geometryExportCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleMeshUVBorders(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowPlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMergeFacetCtx(activeNodes=None, anq=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, immediate=None, im=None, mergeMode=None, mm=None, name=None, n=None, previous=None, pv=None, reset=None, rs=None, toolNode=None, tnq=None, *args, **kwargs):
    """
    Create a new context to merge facets on polygonal objects
    """
    pass


def ParticleCollisionEvents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def stitchSurfaceCtx(*args, **kwargs):
    """
    
    """
    pass


def toggle(above=None, a=None, below=None, b=None, boundary=None, bn=None, boundingBox=None, box=None, controlVertex=None, cv=None, doNotWrite=None, dnw=None, editPoint=None, ep=None, extent=None, et=None, facet=None, f=None, geometry=None, g=None, gl=None, gl=None, highPrecisionNurbs=None, hpn=None, hull=None, hl=None, latticePoint=None, lp=None, latticeShape=None, ls=None, localAxis=None, la=None, newCurve=None, nc=None, newPolymesh=None, np=None, newSurface=None, ns=None, normal=None, nr=None, origin=None, o=None, point=None, pt=None, pointDisplay=None, pd=None, pointFacet=None, pf=None, rotatePivot=None, rp=None, scalePivot=None, sp=None, selectHandle=None, sh=None, state=None, st=None, surfaceFace=None, sf=None, template=None, te=None, uvCoords=None, uv=None, vertex=None, vt=None, *args, **kwargs):
    """
    The toggle command is used to toggle the display of various object features for objects which have these components. For example, CV and edit point display may be toggled for those listedNURB curves or surfaces. 
    """
    pass


def IntersectCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menuEditor(annotation=None, ann=None, backgroundColor=None, bgc=None, cellHeight=None, ch=None, cellWidth=None, cw=None, cellWidthHeight=None, cwh=None, checkBoxPresent=None, cbp=None, checkBoxState=None, cbs=None, command=None, c=None, defineTemplate=None, dt=None, delete=None, d=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, iconMenuCallback=None, imc=None, image=None, i=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, menuItemTypes=None, mit=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, optionBoxCommand=None, obc=None, optionBoxPresent=None, obp=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, radioButtonPresent=None, rbp=None, radioButtonState=None, rbs=None, separator=None, sp=None, style=None, st=None, subMenuAt=None, sma=None, subMenuEditorWindow=None, sew=None, subMenuEditorsOpen=None, seo=None, subMenuOf=None, smo=None, topLevelMenu=None, tlm=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    A menuEditor displays the contents of a popup menu and allows the menu's items to be edited. Menu items are represented by labelled icons which can be dragged around within the editor to change the menu's layout.Various objects can be dragged and dropped into the menuEditor to create new menu items: toolButtons from the shelf or toolbox, shelfButtons from the shelf, iconTextButtons with attached commands, and scripts from the command window. 
    """
    pass


def XgmSetNoiseBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def autoKeyframe(characterOption=None, co=None, noReset=None, nr=None, state=None, st=None, *args, **kwargs):
    """
    With no flags, this command will set keyframes on all attributes that have been modified since an "autoKeyframe -state on" command was issued.To stop keeping track of modified attributes, use "autoKeyframe -state off" 
    """
    pass


def ThreeLeftSplitViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_customPivotToolPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def itemFilterRender(*args, **kwargs):
    """
    
    """
    pass


def SoftModToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShapeMenuStateAllExceptShadingGroupMembers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DragOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSelectLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_quadDrawTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dockControl(allowedArea=None, aa=None, annotation=None, ann=None, area=None, a=None, backgroundColor=None, bgc=None, closeCommand=None, cc=None, content=None, con=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dockStation=None, ds=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enablePopupOption=None, epo=None, exists=None, ex=None, fixedHeight=None, fh=None, fixedWidth=None, fw=None, floatChangeCommand=None, fcc=None, floating=None, fl=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, moveable=None, mov=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, r=None, r=None, retain=None, ret=None, sizeable=None, s=None, splitLayout=None, sl=None, state=None, st=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a dockable control, also known as tool palette or utility window. Dock controls are secondary windows placed in the dock area around the central control in a main window. Dock windows can be moved inside their current area, moved into new areas and floated (e.g. undocked). Dock control consists of a title bar and the content area. The titlebar displays the dock control window title, a float button and a close button. Depending on the state of the dock control, the float and close buttons may be either disabled or not shown at all. 
    """
    pass


def Parent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintEffectsGlobalSettings(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menuBarLayout(annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, menuArray=None, ma=None, menuBarVisible=None, mbv=None, menuIndex=None, mi=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfMenus=None, nm=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a layout containing a menu bar.The menu bar will appear and behave similar to any menu bar created with the 'window -menuBar true' command. Menus may be created with a menuBarLayout as their parent.Child controls are simply positioned to fill the menuBarLayout area beneath the menu bar consequently, some other layout should be used as the immediate child. 
    """
    pass


def BevelPlus(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDisplayAsExtraLargeSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GPUBuiltInDeformerControl(*args, **kwargs):
    """
    
    """
    pass


def PolygonClearClipboardOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getFileList(filespec=None, fs=None, folder=None, fld=None, *args, **kwargs):
    """
    Returns a list of files matching an optional wildcard pattern. Note that this command works directly on raw system files and does not go through standard Maya file path resolution.
    """
    pass


def ShowAllPolyComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPrimitiveMisc(*args, **kwargs):
    """
    
    """
    pass


def AddEdgeDivisions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivToNURBS(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveSubdivProxyMirror(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySplitEdge(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Split Edges.
    """
    pass


def UVSnapTogether(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FluidEmitterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSoftEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def regionSelectKeyCtx(bottomManip=None, bot=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, leftManip=None, lft=None, name=None, n=None, rightManip=None, rgt=None, topManip=None, top=None, *args, **kwargs):
    """
    This command creates a context which may be used to scale keyframes within the graph editor using the region select tool. 
    """
    pass


def EnableSelectedIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DefaultQualityDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrEnumOptionMenu(annotation=None, ann=None, attribute=None, at=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enumeratedItem=None, ei=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates an enumerated attribute control. It is usually an option menu. 
    """
    pass


def SelectAllMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVNormalBasedProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorRenameActiveTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmNop(*args, **kwargs):
    """
    
    """
    pass


def OrientJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rollCtx(alternateContext=None, ac=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, rollScale=None, rs=None, toolName=None, tn=None, *args, **kwargs):
    """
    Create, edit, or query a roll context.
    """
    pass


def SetMeshEraseTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_overlayAppendMeshTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MatchTransform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintSetMembershipTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshFreezeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyLowerRadiusPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_bridgePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AimConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def button(actOnPress=None, aop=None, actionIsSubstitute=None, ais=None, align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, recomputeSize=None, rs=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a button control capable of displaying a textual label and executing a command when selected by the user. 
    """
    pass


def Create2DContainerEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Unfold3DuvUpdateCommand(*args, **kwargs):
    """
    
    """
    pass


def nClothReplaceCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CoarseLevelComponentDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsCopyUVSet(*args, **kwargs):
    """
    This is only a sample command for debugging purposes, which makes a copy of the implicit st parameterization on a nurbs surface to be the 1st explicit uvset.
    """
    pass


def XgmSplineCacheDeleteOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def webBrowserPrefs(*args, **kwargs):
    """
    
    """
    pass


def webBrowser(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command is obsolete and will be removed in next version of Maya. The internal web browser of Maya has been replaced by a plug-in which allows your own browser to connect with Maya. Please refer help for information on how to setup communication of Maya with external web browser application. 
    """
    pass


def createPolyPrismCtx(*args, **kwargs):
    """
    
    """
    pass


def CreateLattice(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BothProxySubdivDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BlendShapeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetOceanPondExample(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attributeMenu(beginMenu=None, beg=None, editor=None, edt=None, finishMenu=None, fsh=None, inputs=None, inp=None, plug=None, p=None, regPulldownMenuCommand=None, rpm=None, unregPulldownMenuCommand=None, upm=None, *args, **kwargs):
    """
    Action to generate popup connection menus for Hypershade. This command is used internally by the Hypershade panel.
    """
    pass


def UVAutomaticProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerUnhide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def floatScrollBar(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, horizontal=None, hr=None, isObscured=None, io=None, largeStep=None, ls=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a scroll bar control that accepts only float values and is bound by a minimum and maximum value.The scroll bar displays a marker indicating the current value of the scroll bar relative to it's minimum and maximum values.Click and drag the marker or on the scroll bar itself to change the current value. 
    """
    pass


def ViewImage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostFoamMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivSphere(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeShowAllAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllDynamicConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createEditor(queueForDelete=None, qfd=None, *args, **kwargs):
    """
    This command creates a property sheet for any dependency node. The second argument is the name of the node, and the first is the name of a layout into which the property sheet controls should be placed. 
    """
    pass


def ExportOfflineFile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def surface(degreeU=None, du=None, degreeV=None, dv=None, formU=None, fu=None, formV=None, fv=None, knotU=None, ku=None, knotV=None, kv=None, name=None, n=None, objectSpace=None, ob=None, point=None, p=None, pointWeight=None, pw=None, worldSpace=None, ws=None, *args, **kwargs):
    """
    The cmd creates a NURBS spline surface (rational or non rational). The surface is created by specifying control vertices (CV's) and knot sequences in the U and V direction.You cannot query the properties of the surface using this command.See examples below. 
    """
    pass


def NURBSSmoothnessHullOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BrushPresetBlendShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def makeSingleSurface(chordHeight=None, cht=None, chordHeightRatio=None, chr=None, constructionHistory=None, ch=None, delta=None, d=None, edgeSwap=None, es=None, format=None, f=None, fractionalTolerance=None, ft=None, matchNormalDir=None, mnd=None, minEdgeLength=None, mel=None, name=None, n=None, normalizeTrimmedUVRange=None, ntr=None, object=None, o=None, polygonCount=None, pc=None, polygonType=None, pt=None, stitchTolerance=None, st=None, uNumber=None, un=None, uType=None, ut=None, useChordHeight=None, uch=None, useChordHeightRatio=None, ucr=None, vNumber=None, vn=None, vType=None, vt=None, *args, **kwargs):
    """
    This command performs a stitch and tessellate operation.
    """
    pass


def BridgeEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LatticeDeformKeysToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArtPaintSkinWeightsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateUVShellAlongBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateMotionTrailOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllImagePlanes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertKnot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenModelEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceBooleanUnionTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_renderGlobalsTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Squash(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecreaseGammaCoarse(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateBlendShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllRigidBodies(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyUVsToUVSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nexCtx(*args, **kwargs):
    """
    
    """
    pass


def SelectAllFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rotationInterpolation(convert=None, c=None, *args, **kwargs):
    """
    The rotationInterpolation command converts the rotation curves to thedesired rotation interpolation representation. For example, anEuler-angled representation can be converted to Quaternion.
    """
    pass


def arnoldExportAss(*args, **kwargs):
    """
    
    """
    pass


def refineSubdivSelectionList(*args, **kwargs):
    """
    Refines a subdivision surface set of components based on the selection list. The selected components are subdivided. The selection list after the command is the newly created components at the finer subdivision level.
    """
    pass


def CreateImagePlaneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deviceManager(attachment=None, att=None, axisCoordChanges=None, acc=None, axisIndex=None, axi=None, axisName=None, axn=None, axisOffset=None, axo=None, axisScale=None, axs=None, deviceIndex=None, dvi=None, deviceNameFromIndex=None, dni=None, numAxis=None, nax=None, numDevices=None, ndv=None, *args, **kwargs):
    """
    This command queriers the internal device manager for information on attached devices.
    """
    pass


def DuplicateEdgesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_objectHideTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_paintPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def poseEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates an editor that derives from the base editor class that has controls for deformer and control nodes. 
    """
    pass


def EnableGlobalStitch(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyExtrudeFacet(attraction=None, att=None, divisions=None, d=None, gravity=None, g=None, gravityX=None, gx=None, gravityY=None, gy=None, gravityZ=None, gz=None, inputCurve=None, inc=None, keepFacesTogether=None, kft=None, localDirection=None, ld=None, localDirectionX=None, ldx=None, localDirectionY=None, ldy=None, localDirectionZ=None, ldz=None, localRotate=None, lr=None, localRotateX=None, lrx=None, localRotateY=None, lry=None, localRotateZ=None, lrz=None, localScale=None, ls=None, localScaleX=None, lsx=None, localScaleY=None, lsy=None, localScaleZ=None, lsz=None, localTranslate=None, lt=None, localTranslateX=None, ltx=None, localTranslateY=None, lty=None, localTranslateZ=None, ltz=None, magnX=None, mx=None, magnY=None, my=None, magnet=None, m=None, offset=None, off=None, pivot=None, pvt=None, pivotX=None, pvx=None, pivotY=None, pvy=None, pivotZ=None, pvz=None, random=None, ran=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, scale=None, s=None, scaleX=None, sx=None, scaleY=None, sy=None, scaleZ=None, sz=None, smoothingAngle=None, sma=None, translate=None, t=None, translateX=None, tx=None, translateY=None, ty=None, translateZ=None, tz=None, weight=None, w=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Extrude faces. Faces can be extruded separately or together, and manipulations can be performed either in world or object space. 
    """
    pass


def BrushPresetBlendShadingOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableSelectedIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SaveSceneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StraightenCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Create3DContainerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NextGreasePencilFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_selectModeMarquee(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def applyAttrPattern(nodeType=None, nt=None, patternName=None, pn=None, *args, **kwargs):
    """
    Take the attribute structure described by a pre-defined pattern and apply it either to a node (as dynamic attributes) or a node type (as extension attributes). The same pattern can be applied more than once to different nodes or node types as the operation duplicates the attribute structure described by the pattern.See the 'createAttrPatterns' command for a description of how to create a pattern.
    """
    pass


def MakeCollideHair(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BreakTangent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SnapKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorShowConnectedAttrs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InTangentFlat(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideIKHandles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideDeformers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_quadDrawPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetCutBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyEditUVShell(angle=None, a=None, pivotU=None, pu=None, pivotV=None, pv=None, relative=None, r=None, rotation=None, rot=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, uValue=None, u=None, uvSetName=None, uvs=None, vValue=None, v=None, *args, **kwargs):
    """
    Command edits uv shells on polygonal objects. When used with the query flag, it returns the transformation values associated with the specified components.
    """
    pass


def CreateConstructionPlaneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def menu(allowOptionBoxes=None, aob=None, defineTemplate=None, dt=None, deleteAllItems=None, dai=None, docTag=None, dtg=None, enable=None, en=None, exists=None, ex=None, familyImage=None, fi=None, helpMenu=None, hm=None, itemArray=None, ia=None, label=None, l=None, ltVersion=None, lt=None, mnemonic=None, mn=None, numberOfItems=None, ni=None, parent=None, p=None, postMenuCommand=None, pmc=None, postMenuCommandOnce=None, pmo=None, tearOff=None, to=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, *args, **kwargs):
    """
    This command creates a new menu and adds it to the default window's menubar if no parent is specified.The menu can be enabled/disabled. Note that this command may also be used on menu objects created using the command 
    """
    pass


def timeField(*args, **kwargs):
    """
    
    """
    pass


def WalkTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def StraightenUVBorderOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DuplicateSpecial(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FluidGradients(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateShotOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def interactionStyle(*args, **kwargs):
    """
    
    """
    pass


def SaveSceneAsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetShrinkWrapTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshEraseToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectTimeWarp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artFluidAttr(*args, **kwargs):
    """
    
    """
    pass


def TangentsFixed(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def redo(*args, **kwargs):
    """
    Takes the most recently undone command from the undo list and redoes it.
    """
    pass


def nurbsToPolygonsPref(chordHeight=None, cht=None, chordHeightRatio=None, chr=None, delta3D=None, d=None, edgeSwap=None, es=None, format=None, f=None, fraction=None, ft=None, matchRenderTessellation=None, mrt=None, merge=None, m=None, mergeTolerance=None, mt=None, minEdgeLen=None, mel=None, polyCount=None, pc=None, polyType=None, pt=None, uNumber=None, un=None, uType=None, ut=None, useChordHeight=None, uch=None, useChordHeightRatio=None, ucr=None, vNumber=None, vn=None, vType=None, vt=None, *args, **kwargs):
    """
    This command sets the values used by the nurbs-to-polygons (or "tesselate") preference.This preference is used by Maya menu items and is saved between Maya sessions. To query any of the flags, use the "-query" flag. For more information on the flags, see the node documentation for the "nurbsTessellate" node. 
    """
    pass


def CreateNURBSTorus(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nSoft(convert=None, c=None, duplicate=None, d=None, duplicateHistory=None, dh=None, goal=None, g=None, hideOriginal=None, h=None, *args, **kwargs):
    """
    Makes a nSoft body from the object(s) passed on the command line or in the selection list.The geometry can be a NURBS, polygonal, lattice object.The resulting nSoft body is made up of a hierarchy with a particle shape and a geometry shape, thus: 
    """
    pass


def GraphEditorUnlockChannel(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleAutoExpandLayers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidEmitter(cycleEmission=None, cye=None, cycleInterval=None, cyi=None, densityEmissionRate=None, der=None, fluidDropoff=None, fdr=None, fuelEmissionRate=None, fer=None, heatEmissionRate=None, her=None, maxDistance=None, mxd=None, minDistance=None, mnd=None, position=None, pos=None, rate=None, r=None, torusSectionRadius=None, tsr=None, type=None, typ=None, volumeOffset=None, vof=None, volumeShape=None, vsh=None, volumeSweep=None, vsw=None, *args, **kwargs):
    """
    Creates an emitter object. If object names are provided or if objects are selected, applies the emitter to the named/selected object(s)in the scene.Fluid will then be emitted from each. If no objects are named or selected, or if the -pos option is specified, creates a positional emitter. 
    """
    pass


def StitchTogether(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryAppendCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleUVEditorUVStatisticsHUDOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def writeTake(angle=None, a=None, device=None, d=None, linear=None, l=None, noTime=None, nt=None, precision=None, pre=None, take=None, t=None, virtualDevice=None, vd=None, *args, **kwargs):
    """
    This action writes a take from a device with recorded data to a take (.mov) file. The writeTake action can also write the virtual definition of a device. 
    """
    pass


def attachDeviceAttr(attribute=None, at=None, axis=None, ax=None, camera=None, cam=None, cameraRotate=None, cr=None, cameraTranslate=None, ct=None, clutch=None, c=None, device=None, d=None, selection=None, sl=None, *args, **kwargs):
    """
    This command associates a device/axis pair with a node/attribute pair. When the device axis moves, the value of the attribute is set to the value of the axis. This value can be scaled and offset using the setAttrScale command. 
    """
    pass


def ToggleCurveSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeNonDefHistory(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LoadHIKCharacterState(*args, **kwargs):
    """
    
    """
    pass


def xgmPresetSnapshotContext(*args, **kwargs):
    """
    
    """
    pass


def saveToolSettings(*args, **kwargs):
    """
    This command causes all the tools not on the shelf to save their settings as optionVars.This is called automatically by the system when Maya exits. 
    """
    pass


def pointOnSurface(normal=None, no=None, normalizedNormal=None, nn=None, normalizedTangentU=None, ntu=None, normalizedTangentV=None, ntv=None, parameterU=None, u=None, parameterV=None, v=None, position=None, p=None, tangentU=None, tu=None, tangentV=None, tv=None, turnOnPercentage=None, top=None, constructionHistory=None, ch=None, *args, **kwargs):
    """
    This command returns information for a point on a surface. If no flag is specified, this command assumes p/position by default. If more than one flag is specifed, then a string array is returned. 
    """
    pass


def DeleteSelectedContainers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getClassification(satisfies=None, sat=None, *args, **kwargs):
    """
    Returns the classification string for a given node type. 
    """
    pass


def vnnCopy(sourceNode=None, src=None, *args, **kwargs):
    """
    Copy a set of VNN nodes to clipper board. The first parameter is the full name of the DG node that contains the VNN graph. The second parameter is the full path of the parent VNN compound. The source VNN nodes must be set by the flag "-sourceNode". 
    """
    pass


def InsertKeyToolActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def duplicateCurve(constructionHistory=None, ch=None, local=None, l=None, name=None, n=None, object=None, o=None, range=None, rn=None, *args, **kwargs):
    """
    The duplicateCurve command takes a curve on a surface and and returns the 3D curve. The curve on a surface could be isoparam component, trimmed edge or curve on surface object. 
    """
    pass


def panel(control=None, ctl=None, copy=None, cp=None, createString=None, cs=None, defineTemplate=None, dt=None, docTag=None, dtg=None, editString=None, es=None, exists=None, ex=None, init=None, init=None, isUnique=None, iu=None, label=None, l=None, menuBarVisible=None, mbv=None, needsInit=None, ni=None, parent=None, p=None, popupMenuProcedure=None, pmp=None, replacePanel=None, rp=None, tearOff=None, to=None, tearOffCopy=None, toc=None, tearOffRestore=None, tor=None, unParent=None, up=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command allows editing or querying properties of any panels. Not all of the common properites of panels can be used with this command. Flags such as -tearOff and -replacePanel require that you use the explicit panel command. The command 'getPanel -typeOf panelName' will return the explicit type of a panel. 
    """
    pass


def nClothAppendOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PasteUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSurfaceOrigin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintVertexColorToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePlatonicSolidOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def diskCache(append=None, a=None, cacheType=None, ct=None, close=None, c=None, closeAll=None, ca=None, delete=None, d=None, deleteAll=None, da=None, empty=None, e=None, emptyAll=None, ea=None, enabledCachesOnly=None, eco=None, endTime=None, et=None, frameRangeType=None, frt=None, overSample=None, os=None, samplingRate=None, sr=None, startTime=None, st=None, tempDir=None, tmp=None, *args, **kwargs):
    """
    Command to create, clear, or close disk cache(s).
    """
    pass


def sbs_AffectTheseAttributes(*args, **kwargs):
    """
    
    """
    pass


def SetRigidBodyCollision(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateText(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_softSelStickyPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GoToMinFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderSetupLegacyLayer(*args, **kwargs):
    """
    
    """
    pass


def ToggleVertexNormalDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bezierCurveToNurbs(*args, **kwargs):
    """
    The bezierCurveToNurbs command attempts to convert an existing NURBS curve to a Bezier curve. 
    """
    pass


def mirrorShape(*args, **kwargs):
    """
    
    """
    pass


def assignViewportFactories(materialFactory=None, mf=None, nodeType=None, nt=None, textureFactory=None, tf=None, *args, **kwargs):
    """
    Sets viewport factories for displays as materials or textures.
    """
    pass


def CopySelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToEdgePerimeter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenConnectWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllChannels(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PixelMoveLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrNavigationControlGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, attrNavDecision=None, attrNavDecision=None, attribute=None, at=None, backgroundColor=None, bgc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, connectAttrToDropped=None, cad=None, connectNodeToDropped=None, cnd=None, connectToExisting=None, ce=None, createNew=None, cn=None, defaultTraversal=None, dtv=None, defineTemplate=None, dt=None, delete=None, delete=None, disconnect=None, d=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, extraButton=None, eb=None, extraButtonCommand=None, ebc=None, extraButtonIcon=None, ebi=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, ignore=None, i=None, ignoreNotSupported=None, ins=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, noIgnorableMenu=None, nim=None, noKeyableMenu=None, nkm=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, relatedNodes=None, ren=None, rowAttach=None, rat=None, unignore=None, u=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def ContentBrowserLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewCamera(move=None, m=None, sideView=None, s=None, topView=None, t=None, *args, **kwargs):
    """
    The viewCamera command is used to position a camera to look directly at the side or top of another camera. This is primarily useful for the user when he or she is setting depth-of-field and clipping planes, if they are being used. 
    """
    pass


def FBXPopSettings(*args, **kwargs):
    """
    
    """
    pass


def CreateSubCharacter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CylindricalProjectionOptions(*args, **kwargs):
    """
    unknown
    """
    pass


def GoToPreviousDrivenKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGraphRemoveUnselected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSCube(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCollapseTweaks(hasVertexTweaks=None, hvt=None, *args, **kwargs):
    """
    A command that updates a mesh's vertex tweaks by applying its tweak data (stored on the mesh node) onto its respective vertex data. 
    """
    pass


def SelectMeshUVShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_coordSpaceLocal(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attachSurface(blendBias=None, bb=None, blendKnotInsertion=None, bki=None, directionU=None, du=None, keepMultipleKnots=None, kmk=None, method=None, m=None, parameter=None, p=None, reverse1=None, rv1=None, reverse2=None, rv2=None, swap1=None, sw1=None, swap2=None, sw2=None, twist=None, tw=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This attach command is used to attach surfaces. Once the surfaces are attached, there will be multiple knots at the joined point(s). These can be kept or removed if the user wishes. 
    """
    pass


def polySubdivideFacet(divisions=None, dv=None, mode=None, m=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Subdivides a face into quads or triangles. 
    """
    pass


def convertIffToPsd(iffFileName=None, ifn=None, psdFileName=None, pfn=None, xResolution=None, xr=None, yResolution=None, yr=None, *args, **kwargs):
    """
    Converts iff file to PSD file of given size
    """
    pass


def control(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command allows you to edit or query the properties of any control.
    """
    pass


def ShowJoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def uiTemplate(exists=None, ex=None, *args, **kwargs):
    """
    This command creates a new command template object. Template objects can hold default flag arguments for multiple UI commands. The command arguments are specified with the individual commands using the -defineTemplate flag and the desired flags and arguments.See also 
    """
    pass


def GraphPaste(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnfoldUVOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolySelectTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFBIKEffectorsPinState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LongPolygonNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSelectBrushContext(*args, **kwargs):
    """
    
    """
    pass


def ShareColorInstances(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVCylindricProjection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSurfaceFaceCenters(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignNewMaterial(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CloudImportExport(*args, **kwargs):
    """
    
    """
    pass


def dR_showHelp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidDeleteCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BatchBake(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NormalConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def boneLattice(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, bicep=None, bi=None, deformerTools=None, dt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, joint=None, j=None, lengthIn=None, li=None, lengthOut=None, lo=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, split=None, sp=None, transform=None, t=None, tricep=None, tr=None, widthLeft=None, wl=None, widthRight=None, wr=None, *args, **kwargs):
    """
    This command creates/edits/queries a boneLattice deformer. The name of the created/edited object is returned. Usually you would make use of this functionality through the higher level flexor command. 
    """
    pass


def smoothCurve(smoothness=None, s=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The smooth command smooths the curve at the given control points.
    """
    pass


def dR_convertSelectionToEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def radioMenuItemCollection(defineTemplate=None, dt=None, exists=None, ex=None, gl=None, gl=None, parent=None, p=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a radioMenuItemCollection.Attach radio menu items to radio menu item collection objects to get radio button behaviour.Radio menu item collections will be parented to the current menu if no parent is specified with the 
    """
    pass


def CreateQuickSelectSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DecreaseManipulatorSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsToPoly(chordHeight=None, cht=None, chordHeightRatio=None, chr=None, delta=None, d=None, edgeSwap=None, es=None, format=None, f=None, fractionalTolerance=None, ft=None, matchNormalDir=None, mnd=None, minEdgeLength=None, mel=None, normalizeTrimmedUVRange=None, ntr=None, polygonCount=None, pc=None, polygonType=None, pt=None, uNumber=None, un=None, uType=None, ut=None, useChordHeight=None, uch=None, useChordHeightRatio=None, ucr=None, vNumber=None, vn=None, vType=None, vt=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, *args, **kwargs):
    """
    This command tesselates a NURBS surface and produces a polygonal surface. The name of the new polygonal surface is returned. If construction history is ON, then the name of the new dependency node is returned as well. 
    """
    pass


def subdListComponentConversion(border=None, bo=None, fromEdge=None, fe=None, fromFace=None, ff=None, fromUV=None, fuv=None, fromVertex=None, fv=None, internal=None, internal=None, toEdge=None, te=None, toFace=None, tf=None, toUV=None, tuv=None, toVertex=None, tv=None, uvShell=None, uvs=None, uvShellBorder=None, uvb=None, *args, **kwargs):
    """
    This command converts subdivision surface components from one or more types to another one or more types, and returns the list of the conversion. It doesn't change the currently selected objects. 
    """
    pass


def HideDynamicConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def namespace(absoluteName=None, an=None, addNamespace=None, add=None, collapseAncestors=None, ch=None, deleteNamespaceContent=None, dnc=None, exists=None, ex=None, force=None, f=None, isRootNamespace=None, ir=None, mergeNamespaceWithParent=None, mnp=None, mergeNamespaceWithRoot=None, mnr=None, moveNamespace=None, mv=None, parent=None, p=None, recurse=None, r=None, relativeNames=None, rel=None, removeNamespace=None, rm=None, rename=None, ren=None, setNamespace=None, set=None, validateName=None, vn=None, *args, **kwargs):
    """
    This command allows a namespace to be created, set or removed. 
    """
    pass


def ProjectCurveOnMesh(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Wave(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllSounds(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderGlobalsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCylinder(axis=None, ax=None, createUVs=None, cuv=None, height=None, h=None, radius=None, r=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, subdivisionsZ=None, sz=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The cylinder command creates a new polygonal cylinder. 
    """
    pass


def InTangentPlateau(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RelaxUVShellOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyMergeVertex(alwaysMergeTwoVertices=None, am=None, distance=None, d=None, mergeToComponents=None, mtc=None, texture=None, tx=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Merge vertices within a given threshold.
    """
    pass


def geometryReplaceCacheFrames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PluginManager(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SplitPolygonToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OneClickSetupMotionBuilderCharacterStream(*args, **kwargs):
    """
    
    """
    pass


def tension(*args, **kwargs):
    """
    
    """
    pass


def select(add=None, add=None, addFirst=None, af=None, all=None, all=None, allDagObjects=None, ado=None, allDependencyNodes=None, adn=None, clear=None, cl=None, containerCentric=None, cc=None, deselect=None, d=None, hierarchy=None, hi=None, noExpand=None, ne=None, replace=None, r=None, symmetry=None, sym=None, symmetrySide=None, sys=None, toggle=None, tgl=None, visible=None, vis=None, *args, **kwargs):
    """
    This command is used to put objects onto or off of the active list. If none of the five flags [-add, -af, -r, -d, -tgl] are specified, the default is to replace the objects on the active list with the given list of objects. 
    """
    pass


def CreateConstructionPlane(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNSoftBodyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def displayColor(active=None, a=None, create=None, c=None, dormant=None, d=None, list=None, l=None, queryIndex=None, qi=None, resetToFactory=None, rf=None, resetToSaved=None, rs=None, *args, **kwargs):
    """
    This command changes or queries the display color for anything in the application that allows the user to set its color. The color is defined by a color index into either the dormant or active color palette. These colors are part of the UI and not part of the saved data for a model.This command is not undoable. 
    """
    pass


def attributeInfo(allAttributes=None, all=None, bool=None, b=None, enumerated=None, e=None, hidden=None, h=None, inherited=None, inherited=None, internal=None, i=None, leaf=None, l=None, logicalAnd=None, logicalAnd=None, multi=None, m=None, short=None, s=None, userInterface=None, ui=None, writable=None, w=None, type=None, t=None, *args, **kwargs):
    """
    This command lists all of the attributes that are marked with certain flags.Combinations of flags may be specified and all will be considered. (The method of combination depends on the state of the "logicalAnd/and" flag.) When the "allAttributes/all" flag is specified, attributes of all types will be listed.
    """
    pass


def ToggleUVEditorIsolateSelectHUD(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def offsetCurve(connectBreaks=None, cb=None, cutLoop=None, cl=None, cutRadius=None, cr=None, distance=None, d=None, normal=None, nr=None, reparameterize=None, rp=None, stitch=None, st=None, subdivisionDensity=None, sd=None, tolerance=None, tol=None, useGivenNormal=None, ugn=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, range=None, rn=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The offset command creates new offset curves from the selected curves. The connecting type for breaks in offsets is off (no connection), circular (connect with an arc) or linear (connect linearly resulting in a sharp corner). If loop cutting is on then any loops in the offset curves are trimmed away. For the default cut radius of 0.0 a sharp corner is created at each intersection. For values greater than 0.0 a small arc of that radius is created at each intersection. The cut radius value is only valid when loop cutting is on. Offsets (for planar curves) are calculated in the plane of that curve and 3d curves are offset in 3d. The subdivisionDensity flag is the maximum number of times the offset object can be subdivided (i.e. calculate the offset until the offset comes within tolerance or the iteration reaches this maximum.) The reparameterize option allows the offset curve to have a different parameterization to the original curve. This avoids uneven parameter distributions in the offset curve that can occur with large offsets of curves, but is more expensive to compute. 
    """
    pass


def DetachSkeleton(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def prepareRender(defaultTraversalSet=None, dt=None, deregister=None, d=None, invokePostRender=None, ior=None, invokePostRenderFrame=None, iof=None, invokePostRenderLayer=None, iol=None, invokePreRender=None, irr=None, invokePreRenderFrame=None, irf=None, invokePreRenderLayer=None, irl=None, invokeSettingsUI=None, isu=None, label=None, lbl=None, listTraversalSets=None, lt=None, postRender=None, por=None, postRenderFrame=None, pof=None, postRenderLayer=None, pol=None, preRender=None, prr=None, preRenderFrame=None, prf=None, preRenderLayer=None, prl=None, restore=None, rtr=None, saveAssemblyConfig=None, sac=None, settingsUI=None, sui=None, setup=None, stp=None, traversalSet=None, ts=None, traversalSetInit=None, tsi=None, *args, **kwargs):
    """
    This command is used to register, manage and invoke render traversals. Render traversals are used to configure a scene to prepare it for rendering. 
    """
    pass


def DeleteAllParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleAutoFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clipSchedule(allAbsolute=None, aa=None, allRelative=None, ar=None, blend=None, b=None, blendNode=None, bn=None, blendUsingNode=None, bun=None, character=None, ch=None, clipIndex=None, ci=None, cycle=None, c=None, defaultAbsolute=None, da=None, enable=None, en=None, group=None, grp=None, groupIndex=None, gri=None, groupName=None, gn=None, hold=None, ph=None, insertTrack=None, it=None, instance=None, instance=None, listCurves=None, lc=None, listPairs=None, lp=None, lock=None, l=None, mute=None, m=None, name=None, n=None, postCycle=None, poc=None, preCycle=None, prc=None, remove=None, rm=None, removeBlend=None, rb=None, removeEmptyTracks=None, ret=None, removeTrack=None, rt=None, rotationsAbsolute=None, ra=None, scale=None, sc=None, shift=None, sh=None, shiftIndex=None, shi=None, solo=None, so=None, sourceClipName=None, scn=None, sourceEnd=None, se=None, sourceStart=None, ss=None, start=None, s=None, track=None, t=None, weight=None, w=None, weightStyle=None, ws=None, *args, **kwargs):
    """
    This command is used to create, edit and query clips and blends in the Trax editor. It operates on the clipScheduler node attached to the character. In query mode, if no flags are specified, returns an array of strings in this form:(clipName,clipIndex,clipStart,clipSourceStart,clipSourceEnd,clipScale,clipPreCycle,clipPostCycle,clipHold)
    """
    pass


def dR_selectModeRaycast(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def commandLogging(historySize=None, hs=None, logCommands=None, lc=None, logFile=None, lf=None, recordCommands=None, rc=None, resetLogFile=None, rl=None, *args, **kwargs):
    """
    This command controls logging of Maya commands, in memory and on disk. 
    """
    pass


def Planar(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PublishParentAnchorOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateVolumeCube(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleWeightMirror(*args, **kwargs):
    """
    
    """
    pass


def OutlinerToggleIgnoreHidden(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRenameTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsCurveRebuildPref(*args, **kwargs):
    """
    
    """
    pass


def ShowBatchRender(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RecentCommandsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorValueLinesToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeExpandAsset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddWireOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def showWindow(*args, **kwargs):
    """
    Make a window visible. If no window is specified then the current window (most recently created) is used. See also the 
    """
    pass


def HypershadeGraphMaterialsOnSelectedObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleBindSticky(*args, **kwargs):
    """
    
    """
    pass


def WhatsNewHighlightingOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LockCamera(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleLocalRotationAxes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RetimeKeysTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UniformOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hikGlobals(releaseAllPinning=None, rap=None, *args, **kwargs):
    """
    Sets global HumanIK flags for the application. 
    """
    pass


def mute(disable=None, d=None, force=None, f=None, *args, **kwargs):
    """
    The mute command is used to disable and enable playback on a channel. When a channel is muted, it retains the value that it was at prior to being muted.
    """
    pass


def TimeEditorDeleteSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSmoothnessFineOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPipe(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleUVShellBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateJiggleDeformer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetGrabBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetAsCombinationTargetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_EditSubstance(*args, **kwargs):
    """
    
    """
    pass


def RedoPreviousRender(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertEdgeLoopTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Ungroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyAppendFacetCtx(append=None, ap=None, isRotateAvailable=None, isr=None, maximumNumberOfPoints=None, mp=None, planarConstraint=None, pc=None, rotate=None, r=None, subdivision=None, s=None, *args, **kwargs):
    """
    Create a new context to append facets on polygonal objects
    """
    pass


def sbs_AffectedByAllInputs(*args, **kwargs):
    """
    
    """
    pass


def setXformManip(showUnits=None, su=None, suppress=None, s=None, useRotatePivot=None, urp=None, worldSpace=None, ws=None, *args, **kwargs):
    """
    This command changes some of the settings of the xform manip, to control its appearance. 
    """
    pass


def MakePondMotorBoats(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EditTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectEdgeRing(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeToCenter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyUVSet(allUVSets=None, auv=None, allUVSetsIndices=None, uvn=None, allUVSetsWithCount=None, awc=None, copy=None, cp=None, create=None, cr=None, currentLastUVSet=None, luv=None, currentPerInstanceUVSet=None, cpi=None, currentUVSet=None, cuv=None, delete=None, d=None, newUVSet=None, nuv=None, perInstance=None, pi=None, projections=None, pr=None, rename=None, rn=None, shareInstances=None, si=None, unshared=None, us=None, uvSet=None, uvs=None, *args, **kwargs):
    """
    Command to do the following to uv sets:- delete an existing uv set.- rename an existing uv set.- create a new empty uv set.- copy the values from one uv set to a anotherpre-existing uv set.- set the current uv set to a pre-existing uv set.- modify sharing between instances of per-instance uv sets- query the current uv set.- set the current uv set to the last uv set added to an object.- query the names of all uv sets.
    """
    pass


def HideNParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenMaterialViewerWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshSmoothToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setDefaultShadingGroup(*args, **kwargs):
    """
    The setDefaultShadingGroup command is used to change which shading group is considered the current default shading group. Subsequently created objects will be assigned to the new default group. 
    """
    pass


def spotLightPreviewPort(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, spotLight=None, sl=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    This command creates a 3dPort that displays an image representing the illumination provided by the spotLight. It is a picture of a plane being illuminated by a light. 
    """
    pass


def ToggleMeshPoints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NormalConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyUVsToUVSetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SplitVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def addDynamic(*args, **kwargs):
    """
    Makes the "object" specified as second argument the source of an existing field or emitter specified as the first argument. In practical terms, what this means is that a field will emanate its force from its owner object, and an emitter will emit from its owner object. 
    """
    pass


def ShowSculptObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableMemoryCaching(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorCreateAdditiveLayer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Sine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RedoViewChange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RebuildCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dagPose(addToPose=None, a=None, atPose=None, ap=None, bindPose=None, bp=None, g=None, g=None, members=None, m=None, name=None, n=None, remove=None, rm=None, reset=None, rs=None, restore=None, r=None, save=None, s=None, selection=None, sl=None, worldParent=None, wp=None, *args, **kwargs):
    """
    This command is used to save and restore the matrix information for a dag hierarchy. Specifically, the data stored will restore the translate, rotate, scale, scale pivot, rotate pivot, rotation order, and (for joints) joint order for all the objects on the hierarchy. Data for other attributes is not stored by this command. 
    """
    pass


def CreateTextureReferenceObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FluidGradientsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectSurfacePointsMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def python(*args, **kwargs):
    """
    
    """
    pass


def createPolyCubeCtx(*args, **kwargs):
    """
    
    """
    pass


def FBXImportShowUI(*args, **kwargs):
    """
    
    """
    pass


def ShowSubdivSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikfkDisplayMethod(display=None, d=None, *args, **kwargs):
    """
    The 
    """
    pass


def ShowMeshFoamyToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getProcArguments(*args, **kwargs):
    """
    
    """
    pass


def bufferCurve(animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, exists=None, ex=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, overwrite=None, ov=None, shape=None, s=None, swap=None, sw=None, time=None, t=None, useReferencedCurve=None, urc=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def transferAttributes(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, colorBorders=None, clb=None, deformerTools=None, dt=None, exclusive=None, ex=None, flipUVs=None, fuv=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, matchChoice=None, mch=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, sampleSpace=None, spa=None, searchMethod=None, sm=None, searchScaleX=None, ssx=None, searchScaleY=None, ssy=None, searchScaleZ=None, ssz=None, sourceColorSet=None, scs=None, sourceUvSet=None, suv=None, sourceUvSpace=None, sus=None, split=None, sp=None, targetColorSet=None, tcs=None, targetUvSet=None, tuv=None, targetUvSpace=None, tus=None, transferColors=None, col=None, transferNormals=None, nml=None, transferPositions=None, pos=None, transferUVs=None, uvs=None, *args, **kwargs):
    """
    Samples the attributes of a source surface (first argument) and transfers them onto a target surface (second argument). 
    """
    pass


def SwapBufferCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iprEngine(copy=None, cp=None, defineTemplate=None, dt=None, estimatedMemory=None, mem=None, exists=None, ex=None, iprImage=None, ipr=None, motionVectorFile=None, mvf=None, object=None, obj=None, region=None, r=None, relatedFiles=None, rel=None, releaseIprImage=None, rii=None, resolution=None, res=None, scanlineIncrement=None, sli=None, showProgressBar=None, spb=None, startTuning=None, st=None, stopTuning=None, spt=None, underPixel=None, un=None, update=None, u=None, updateDepthOfField=None, udf=None, updateLightGlow=None, ulg=None, updateMotionBlur=None, umb=None, updatePort=None, up=None, updateShaderGlow=None, usg=None, updateShading=None, us=None, updateShadowMaps=None, usm=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    Command to create or edit an iprEngine.A iprEngine is an object that watches for changes to shading networks and automatically reshades to generate an up-to-date image. 
    """
    pass


def UnghostObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pointPosition(local=None, l=None, world=None, w=None, *args, **kwargs):
    """
    This command returns the world or local space position for any type of point object. Valid selection items are: - curve and surface CVs - poly vertices - lattice points - particles - curve and surface edit points - curve and surface parameter points - poly uvs - rotate/scale/joint pivots - selection handles - locators, param locators and arc length locators 
    """
    pass


def TangetConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def KeyframeTangentMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def annotate(point=None, p=None, text=None, tx=None, *args, **kwargs):
    """
    This command is used to create an annotation to be attached to the specified objects at the specified point. 
    """
    pass


def geometryReplaceCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShapeEditorSelectNone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdToNurbs(*args, **kwargs):
    """
    
    """
    pass


def UVCameraBasedProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CommandShell(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SculptGeometryToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeTestTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LoadHIKCharacterDefinition(*args, **kwargs):
    """
    
    """
    pass


def nClothAppend(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def reference(*args, **kwargs):
    """
    
    """
    pass


def FloatSelectedObjectsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateOceanWake(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scriptNode(afterScript=None, afterScript=None, beforeScript=None, bs=None, executeAfter=None, ea=None, executeBefore=None, eb=None, ignoreReferenceEdits=None, ire=None, name=None, n=None, scriptType=None, st=None, sourceType=None, stp=None, *args, **kwargs):
    """
    scriptNodes contain scripts that are executed when a file is loaded or when the script node is deleted. If a script modifies a referenced node, the changes will be tracked as reference edits unless the scriptNode was created with the ignoreReferenceEdits flag. The scriptNode command is used to create, edit, query, and test scriptNodes. 
    """
    pass


def debugVar(*args, **kwargs):
    """
    
    """
    pass


def CreateAreaLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenCloseSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def wireContext(crossingEffect=None, ce=None, deformationOrder=None, do=None, dropoffDistance=None, dds=None, envelope=None, en=None, exclusive=None, exc=None, exclusivePartition=None, ep=None, exists=None, ex=None, groupWithBase=None, gw=None, history=None, ch=None, holder=None, ho=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, localInfluence=None, li=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a tool that can be used to create a wire deformer. 
    """
    pass


def OutlinerToggleReferenceNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerspTextureLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rowLayout(adjustableColumn=None, adj=None, adjustableColumn1=None, ad1=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, columnAlign=None, cal=None, columnAlign1=None, cl1=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach1=None, ct1=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset1=None, co1=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfColumns=None, nc=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a layout capable of positioning children into a single horizontal row. 
    """
    pass


def ProfilerToolHideSelectedRepetition(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def aaf2fcp(deleteFile=None, df=None, dstPath=None, dst=None, getFileName=None, gfn=None, progress=None, pr=None, srcFile=None, src=None, terminate=None, t=None, waitCompletion=None, wc=None, *args, **kwargs):
    """
    This command is used to convert an aff file to a Final Cut Pro (fcp) xml file The conversion process can take several seconds to complete and the command is meant to be run asynchronously
    """
    pass


def SetDrivenKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def spreadSheetEditor(allAttr=None, aa=None, attrRegExp=None, are=None, control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, execute=None, exe=None, exists=None, ex=None, filter=None, f=None, fixedAttrList=None, fal=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, keyableOnly=None, ko=None, lockMainConnection=None, lck=None, longNames=None, ln=None, mainListConnection=None, mlc=None, niceNames=None, nn=None, panel=None, pnl=None, parent=None, p=None, precision=None, pre=None, selectedAttr=None, sla=None, selectionConnection=None, slc=None, showShapes=None, ss=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a new spread sheet editor in the current layout. 
    """
    pass


def adskAssetLibrary(*args, **kwargs):
    """
    
    """
    pass


def dR_nexTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicExportAllOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowFluids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selectKey(addTo=None, add=None, animation=None, an=None, attribute=None, at=None, clear=None, cl=None, controlPoints=None, cp=None, float=None, f=None, hierarchy=None, hi=None, inTangent=None, it=None, includeUpperBound=None, iub=None, index=None, index=None, keyframe=None, k=None, outTangent=None, ot=None, remove=None, rm=None, replace=None, r=None, shape=None, s=None, time=None, t=None, toggle=None, tgl=None, unsnappedKeys=None, uk=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def displayPref(activeObjectPivots=None, aop=None, displayAffected=None, da=None, displayGradient=None, dgr=None, ghostFrames=None, gf=None, materialLoadingMode=None, mld=None, maxHardwareTextureResolution=None, mhr=None, maxTextureResolution=None, mtr=None, purgeExistingTextures=None, pet=None, regionOfEffect=None, roe=None, shadeTemplates=None, st=None, textureDrawPixel=None, tdp=None, wireframeOnShadedActive=None, wsa=None, *args, **kwargs):
    """
    This command sets/queries the state of global display parameters.
    """
    pass


def fileDialog2(buttonBoxOrientation=None, bbo=None, cancelCaption=None, cc=None, caption=None, cap=None, dialogStyle=None, ds=None, fileFilter=None, ff=None, fileMode=None, fm=None, fileTypeChanged=None, ftc=None, hideNameEdit=None, hne=None, okCaption=None, okc=None, optionsUICancel=None, oca=None, optionsUICommit=None, ocm=None, optionsUICommit2=None, oc2=None, optionsUICreate=None, ocr=None, optionsUIInit=None, oin=None, returnFilter=None, rf=None, selectFileFilter=None, sff=None, selectionChanged=None, sc=None, startingDirectory=None, dir=None, *args, **kwargs):
    """
    This command provides a dialog that allows users to select files or directories. 
    """
    pass


def SetToFaceNormalsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintRandomOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphPasteOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def license(borrow=None, b=None, info=None, i=None, isBorrowed=None, ib=None, isExported=None, ie=None, isTrial=None, it=None, licenseMethod=None, lm=None, productChoice=None, pc=None, r=None, r=None, showBorrowInfo=None, sbi=None, showProductInfoDialog=None, spi=None, usage=None, u=None, *args, **kwargs):
    """
    This command displays version information about the application if it is executed without flags.If one of the above flags is specified then the specified version information is returned. 
    """
    pass


def HypershadeDisplayAllShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddToCurrentSceneMudbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MirrorDeformerWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddAnimationOffset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyExtrudeFacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadePickWalkLeft(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TransferVertexOrder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FreezeTransformations(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def skinCluster(addInfluence=None, ai=None, addToSelection=None, ats=None, after=None, af=None, afterReference=None, ar=None, baseShape=None, bsh=None, before=None, bf=None, bindMethod=None, bm=None, deformerTools=None, dt=None, dropoffRate=None, dr=None, exclusive=None, ex=None, forceNormalizeWeights=None, fnw=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, heatmapFalloff=None, hmf=None, ignoreBindPose=None, ibp=None, ignoreHierarchy=None, ih=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, influence=None, inf=None, lockWeights=None, lw=None, maximumInfluences=None, mi=None, moveJointsMode=None, mjm=None, name=None, n=None, normalizeWeights=None, nw=None, nurbsSamples=None, ns=None, obeyMaxInfluences=None, omi=None, parallel=None, par=None, polySmoothness=None, ps=None, prune=None, pr=None, recacheBindMatrices=None, rbm=None, remove=None, rm=None, removeFromSelection=None, rfs=None, removeInfluence=None, ri=None, removeUnusedInfluence=None, rui=None, selectInfluenceVerts=None, siv=None, skinMethod=None, sm=None, smoothWeights=None, sw=None, smoothWeightsMaxIterations=None, swi=None, split=None, sp=None, toSelectedBones=None, tsb=None, toSkeletonAndTransforms=None, tst=None, unbind=None, ub=None, unbindKeepHistory=None, ubk=None, useGeometry=None, ug=None, volumeBind=None, vb=None, volumeType=None, vt=None, weight=None, wt=None, weightDistribution=None, wd=None, weightedInfluence=None, wi=None, *args, **kwargs):
    """
    The skinCluster command is used for smooth skinning in maya. It binds the selected geometry to the selected joints or skeleton by means of a skinCluster node.Each point of the bound geometry can be affected by any number of joints. The extent to which each joint affects the motion of each point is regulated by a corresponding weight factor.Weight factors can be modified using the skinPercent command.The command returns the name of the new skinCluster.
    """
    pass


def NodeEditorGraphRemoveDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SeparatePolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def walkCtx(alternateContext=None, ac=None, crouchCount=None, wcc=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, toolName=None, tn=None, walkHeight=None, wh=None, walkSensitivity=None, wsv=None, walkSpeed=None, ws=None, walkToolHud=None, wth=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a walk context. 
    """
    pass


def FBXExportGenerateLog(*args, **kwargs):
    """
    
    """
    pass


def showMetadata(auto=None, a=None, dataType=None, dt=None, interpolation=None, i=None, isActivated=None, ia=None, listAllStreams=None, las=None, listMembers=None, lm=None, listValidMethods=None, lvm=None, listVisibleStreams=None, lvs=None, member=None, mb=None, method=None, m=None, range=None, r=None, rayScale=None, rs=None, stream=None, s=None, *args, **kwargs):
    """
    
    """
    pass


def hardware(brdType=None, brd=None, cpuType=None, cpu=None, graphicsType=None, gfx=None, megaHertz=None, mhz=None, numProcessors=None, npr=None, *args, **kwargs):
    """
    Return description of the hardware available in the machine.
    """
    pass


def SmoothSkinWeights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def displayLevelOfDetail(levelOfDetail=None, lod=None, *args, **kwargs):
    """
    This command is responsible for setting the display level-of-detail for edit refreshes.If enabled, objects will draw with lower detail based on their distance from the camera. When disabled objects will display at full resolution at all times.This is not an undoable command 
    """
    pass


def IPROptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LayoutUVAlong(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeReduceTraversalDepth(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRenderTextureRange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ArchiveScene(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def movieCompressor(*args, **kwargs):
    """
    
    """
    pass


def cMuscleWeight(*args, **kwargs):
    """
    
    """
    pass


def dR_modeVert(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PruneWire(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cacheFileTrack(insertTrack=None, it=None, lock=None, l=None, mute=None, m=None, removeEmptyTracks=None, ret=None, removeTrack=None, rt=None, solo=None, so=None, track=None, t=None, *args, **kwargs):
    """
    This command is used for inserting and removing tracks related to the caches displayed in the trax editor. It can also be used to modify the track state, for example, to lock or mute a track.
    """
    pass


def xgmSmoothBrushContext(*args, **kwargs):
    """
    
    """
    pass


def dR_testCmd(*args, **kwargs):
    """
    
    """
    pass


def NEmitFromObjectOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmCutBrushContext(*args, **kwargs):
    """
    
    """
    pass


def MakeShadowLinks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FloatSelectedPondObjectsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def insertKnotCurve(addKnots=None, add=None, insertBetween=None, ib=None, numberOfKnots=None, nk=None, parameter=None, p=None, constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The insertKnotCurve command inserts knots into a curve given a list of parameter values. The number of knots to add at each parameter value and whether the knots are added or complemented can be specified. The name of the curve is returned. If construction history is on, the name of the resulting dependency node is also returned. 
    """
    pass


def PolygonSoftenEdge(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerCollapseAllSelectedItems(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideUnselectedCVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WireToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateGhostOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listAttrPatterns(patternType=None, pt=None, verbose=None, v=None, *args, **kwargs):
    """
    Attribute patterns are plain text descriptions of an entire Maya attribute forest. ("forest" because there could be an arbitrary number of root level attributes, it's not restricted to having a single common parent though in general that practice is a good idea.) This command lists the various pattern types available, usually created via plugin, as well as any specific patterns that have already been instantiated. A pattern type is a thing that knows how to take some textual description of an attribute tree, e.g. XML or plaintext, and convert it into an attribute pattern that can be applied to any node or node type in Maya.
    """
    pass


def cmdFileOutput(close=None, c=None, closeAll=None, ca=None, open=None, o=None, status=None, s=None, *args, **kwargs):
    """
    This command will open a text file to receive all of the commands and results that normally get printed to the Script Editor window or console. The file will stay open until an explicit -close with the correct file descriptor or a -closeAll, so care should be taken not to leave a file open. 
    """
    pass


def GraphEditorNeverDisplayTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UntrimSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBlendShapeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_coordSpaceCustom(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonCube(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVUnstackShells(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nexMultiCutContext(*args, **kwargs):
    """
    
    """
    pass


def connectAttr(force=None, f=None, lock=None, l=None, nextAvailable=None, na=None, referenceDest=None, rd=None, *args, **kwargs):
    """
    Connect the attributes of two dependency nodes and return the names of the two connected attributes. The connected attributes must be be of compatible types. First argument is the source attribute, second one is the destination. 
    """
    pass


def treeLister(addFavorite=None, af=None, addItem=None, add=None, addVnnItem=None, avi=None, annotation=None, ann=None, backgroundColor=None, bgc=None, clearContents=None, clr=None, collapsePath=None, cp=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, executeItem=None, ei=None, exists=None, ex=None, expandPath=None, ep=None, expandToDepth=None, etd=None, favoritesCallback=None, fcb=None, favoritesList=None, fl=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, itemScript=None, isc=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, refreshCommand=None, rc=None, removeFavorite=None, rf=None, removeItem=None, rem=None, resultsPathUnderCursor=None, ruc=None, selectPath=None, sp=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, vnnString=None, vnn=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries the tree lister control. The optional argument is the name of the control.
    """
    pass


def timer(endTimer=None, e=None, lapTime=None, lap=None, name=None, n=None, startTimer=None, s=None, *args, **kwargs):
    """
    
    """
    pass


def SplitEdgeRingToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_loadRecentFile2(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getInputDeviceRange(maxValue=None, max=None, minValue=None, min=None, *args, **kwargs):
    """
    This command lists the minimum and maximum values the device axis can return.This value is the raw device values before any mapping is applied.If you don't specify an axis the values for all axes of the device are returned. 
    """
    pass


def createNurbsCubeCtx(*args, **kwargs):
    """
    
    """
    pass


def glRender(accumBufferPasses=None, abp=None, alphaSource=None, alphaSource=None, antiAliasMethod=None, aam=None, cameraIcons=None, ci=None, clearClr=None, cc=None, collisionIcons=None, coi=None, crossingEffect=None, ce=None, currentFrame=None, cf=None, drawStyle=None, ds=None, edgeSmoothness=None, es=None, emitterIcons=None, ei=None, fieldIcons=None, fii=None, flipbookCallback=None, fc=None, frameEnd=None, fe=None, frameIncrement=None, fi=None, frameStart=None, fs=None, fullResolution=None, fr=None, grid=None, gr=None, imageDirectory=None, id=None, imageName=None, imageName=None, imageSize=None, imageSize=None, lightIcons=None, li=None, lightingMode=None, lm=None, lineSmoothing=None, ls=None, offScreen=None, os=None, renderFrame=None, rf=None, renderSequence=None, rs=None, sharpness=None, sh=None, shutterAngle=None, sa=None, textureDisplay=None, txd=None, transformIcons=None, ti=None, useAccumBuffer=None, uab=None, viewport=None, vp=None, writeDepthMap=None, wdm=None, *args, **kwargs):
    """
    This command provides access to the Hardware Render Manager (HRM). There is one-and-only-one HRM in maya. The HRM controls the rendering performed in the hardware render buffer window. This command allows shell scripts, to modify the render state, and to initiate a render request. 
    """
    pass


def bakeSimulation(animation=None, an=None, attribute=None, at=None, bakeOnOverrideLayer=None, bol=None, controlPoints=None, cp=None, destinationLayer=None, dl=None, disableImplicitControl=None, dic=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, minimizeRotation=None, mr=None, preserveOutsideKeys=None, pok=None, removeBakedAnimFromLayer=None, rba=None, removeBakedAttributeFromLayer=None, ral=None, resolveWithoutLayer=None, rwl=None, sampleBy=None, sb=None, shape=None, s=None, simulation=None, sm=None, smart=None, sr=None, sparseAnimCurveBake=None, sac=None, time=None, t=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def dR_selectInvert(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def prependListItem(*args, **kwargs):
    """
    
    """
    pass


def cameraSet(active=None, a=None, appendTo=None, atl=None, camera=None, cam=None, clearDepth=None, cd=None, deleteAll=None, da=None, deleteLayer=None, d=None, insertAt=None, ins=None, layer=None, l=None, name=None, n=None, numLayers=None, nl=None, objectSet=None, os=None, order=None, o=None, *args, **kwargs):
    """
    This command manages camera set nodes. Camera sets allow the users to break a single camera shot into layers. Instead of drawing all objects with a single camera, you can isolate the camera to only focus on certain objects and layer another camera into the viewport that draws the other objects. The situation to use camera sets primarily occurs when building stereoscopic scenes. 
    """
    pass


def EditOversamplingForCacheSettings(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def unapplyOverride(*args, **kwargs):
    """
    
    """
    pass


def EnableRigidBodies(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pickWalk(direction=None, d=None, type=None, typ=None, *args, **kwargs):
    """
    The pickWalk command allows you to quickly change the selection list relative to the nodes that are currently selected. It is called pickWalk, because it walks from one selection list to another by unselecting what's currently selected, and selecting nodes that are in the specified direction from the currently selected list. If you specify objects on the command line, the pickWalk command will walk from those objects instead of the selected list. 
    """
    pass


def HypershadeMoveTabRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BakeAllNonDefHistory(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySuperCtx(*args, **kwargs):
    """
    
    """
    pass


def SetBreakdownKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_softSelDistanceTypeObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportFinestSubdivLevel(*args, **kwargs):
    """
    
    """
    pass


def ShowDeformingGeometry(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportBakeComplexStart(*args, **kwargs):
    """
    
    """
    pass


def PrevSkinPaintMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deformer(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, deformerTools=None, dt=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, prune=None, pr=None, remove=None, rm=None, split=None, sp=None, type=None, typ=None, *args, **kwargs):
    """
    This command creates a deformer of the specified type. The deformer will deform the selected objects. 
    """
    pass


def polyExtrudeVertex(divisions=None, d=None, length=None, l=None, width=None, w=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Command that extrudes selected vertices outwards.
    """
    pass


def ToggleUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerspGraphHypergraphLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def scrollField(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, clear=None, cl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, enterCommand=None, ec=None, exists=None, ex=None, font=None, fn=None, fontPointSize=None, fns=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, insertText=None, it=None, insertionPosition=None, ip=None, isObscured=None, io=None, keyPressCommand=None, kpc=None, manage=None, m=None, noBackground=None, nbg=None, numberOfLines=None, nl=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, qtFont=None, qfn=None, selection=None, sl=None, text=None, tx=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, wordWrap=None, ww=None, *args, **kwargs):
    """
    This command creates a scrolling field that handles multiple lines of text. 
    """
    pass


def shapeEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, stateString=None, sts=None, targetControlList=None, tcl=None, targetList=None, tl=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, verticalSliders=None, vs=None, *args, **kwargs):
    """
    This command creates an editor that derives from the base editor class that has controls for deformer, control nodes. 
    """
    pass


def SplitEdgeRingTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def gameExporter(*args, **kwargs):
    """
    
    """
    pass


def ogs(deviceInformation=None, di=None, disposeReleasableTextures=None, drt=None, dumpTexture=None, dt=None, enableHardwareInstancing=None, hwi=None, fragmentEditor=None, fe=None, fragmentXML=None, xml=None, gpuMemoryUsed=None, gpu=None, pause=None, p=None, rebakeTextures=None, rbt=None, regenerateUVTilePreview=None, rup=None, reloadTextures=None, rlt=None, reset=None, r=None, shaderSource=None, ss=None, toggleTexturePaging=None, ttp=None, traceRenderPipeline=None, trp=None, *args, **kwargs):
    """
    OGS is one of the viewport renderers. As there is a lot of effort involved in migrating functionality it will evolve over several releases. As it evolves it is prudent to provide safeguards to get the database back to a known state. That is the function of this command, similar to how 'dgdirty' is used to restore state to the dependency graph.
    """
    pass


def Fireworks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKParentId(*args, **kwargs):
    """
    
    """
    pass


def ClearCurrentContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignOfflineFileFromRefEdOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def colorEditor(hsvValue=None, hsv=None, mini=None, m=None, parent=None, p=None, position=None, pos=None, result=None, r=None, rgbValue=None, rgb=None, *args, **kwargs):
    """
    The 
    """
    pass


def Snap3PointsTo3Points(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def repeatLast(*args, **kwargs):
    """
    
    """
    pass


def SelectObjectsIlluminatedByLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def containerPublish(bindNode=None, bn=None, bindTemplateStandins=None, bts=None, inConnections=None, ic=None, mergeShared=None, ms=None, outConnections=None, oc=None, publishNode=None, pn=None, unbindNode=None, ubn=None, unpublishNode=None, upn=None, *args, **kwargs):
    """
    This is an accessory command to the container command which is used for some advanced publishing operations on the container. For example, the "publishConnections" flag on the container will publish all the connections, but this command can be used to publish just the inputs, outputs, or to collapse the shared inputs into a single attribute before publishing.
    """
    pass


def NodeEditorCreateTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonClearClipboard(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmDensityBrushToolCmd(*args, **kwargs):
    """
    
    """
    pass


def geometryDeleteCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def agFormatIn(*args, **kwargs):
    """
    
    """
    pass


def ShotPlaylistEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetFullBodyIKKeysAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def geometryAppendCacheOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderLayerMembers(*args, **kwargs):
    """
    
    """
    pass


def SendToUnitySelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectNextIntermediatObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TwistOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def STRSTweakModeOff(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def rigidSolver(autoTolerances=None, at=None, bounciness=None, b=None, cacheData=None, cd=None, collide=None, c=None, collisionTolerance=None, ct=None, contactData=None, ctd=None, create=None, cr=None, current=None, cu=None, deleteCache=None, deleteCache=None, displayCenterOfMass=None, dcm=None, displayConstraint=None, dc=None, displayVelocity=None, dv=None, dynamics=None, d=None, friction=None, f=None, interpenetrate=None, i=None, interpenetrationCheck=None, ic=None, rigidBodies=None, rb=None, rigidBodyCount=None, rbc=None, showCollision=None, sc=None, showInterpenetration=None, si=None, solverMethod=None, sm=None, startTime=None, stt=None, state=None, st=None, statistics=None, sta=None, stepSize=None, s=None, velocityVectorScale=None, vs=None, *args, **kwargs):
    """
    This command sets the attributes for the rigid solver
    """
    pass


def ToggleVisibilityAndKeepSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PokePolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def closeSurface(blendBias=None, bb=None, blendKnotInsertion=None, bki=None, direction=None, d=None, parameter=None, p=None, preserveShape=None, ps=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The closeSurface command closes a surface in the U, V, or both directions, making it periodic. The close direction is controlled by the direction flag. If a surface is not specified in the command, then the first selected surface will be used. 
    """
    pass


def ImportDeformerWeightsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_softSelToolTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Create3DContainerEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def pushPinning(*args, **kwargs):
    """
    
    """
    pass


def CreatePassiveRigidBody(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangentsLinear(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GoToNextDrivenKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def manipScaleLimitsCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    Create a context for the scale limits manipulator.
    """
    pass


def polyMoveUV(pivot=None, pvt=None, pivotU=None, pvu=None, pivotV=None, pvv=None, random=None, ran=None, rotationAngle=None, ra=None, scale=None, s=None, scaleU=None, su=None, scaleV=None, sv=None, translate=None, t=None, translateU=None, tu=None, translateV=None, tv=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Moves selected UV coordinates in 2D space. As the selected UVs are adjusted, the way the image is mapped onto the object changes accordingly. This command manipulates the UV values without changing the 3D geometry of the object. 
    """
    pass


def GpuCacheExportSelectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyDisplayReset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResetTemplateBrush(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmokeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynGlobals(active=None, a=None, listAll=None, la=None, overSampling=None, os=None, *args, **kwargs):
    """
    This node edits and queries the attributes of the active dynGlobals node in the scene. There can be only one active node of this type. The active dynGlobals node is the first one that was created, either with a "createNode" command or by accessing/editing any of the attributes on the node through this command. 
    """
    pass


def threadCount(numberOfThreads=None, n=None, *args, **kwargs):
    """
    This command sets the number of threads to be used by Maya in regions of code that are multithreaded. By default the number of threads is equal to the number of logical CPUs, not the number of physical CPUs. Logical CPUs are different from physical CPUs in the following ways:
    """
    pass


def CurveSmoothnessFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBIKReachKeyingOptionFK(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowMeshSprayToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportFileVersion(*args, **kwargs):
    """
    
    """
    pass


def PreviousViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectSharedUVInstances(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def snapMode(curve=None, c=None, distanceIncrement=None, dsi=None, edgeMagnet=None, em=None, edgeMagnetTolerance=None, emt=None, grid=None, gr=None, liveFaceCenter=None, lfc=None, livePoint=None, lp=None, meshCenter=None, mc=None, pixelCenter=None, pc=None, pixelSnap=None, ps=None, point=None, p=None, tolerance=None, t=None, useTolerance=None, ut=None, uvTolerance=None, uvt=None, viewPlane=None, vp=None, *args, **kwargs):
    """
    The snapMode command is used to control snapping.It toggles the snapping modes in effect and sets information used for snapping. 
    """
    pass


def SelectEdgeLoopSp(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ObjectCentricLightLinkingEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textFieldGrp(adjustableColumn=None, adj=None, adjustableColumn2=None, ad2=None, adjustableColumn3=None, ad3=None, adjustableColumn4=None, ad4=None, adjustableColumn5=None, ad5=None, adjustableColumn6=None, ad6=None, annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, columnAlign=None, cal=None, columnAlign2=None, cl2=None, columnAlign3=None, cl3=None, columnAlign4=None, cl4=None, columnAlign5=None, cl5=None, columnAlign6=None, cl6=None, columnAttach=None, cat=None, columnAttach2=None, ct2=None, columnAttach3=None, ct3=None, columnAttach4=None, ct4=None, columnAttach5=None, ct5=None, columnAttach6=None, ct6=None, columnOffset2=None, co2=None, columnOffset3=None, co3=None, columnOffset4=None, co4=None, columnOffset5=None, co5=None, columnOffset6=None, co6=None, columnWidth=None, cw=None, columnWidth1=None, cw1=None, columnWidth2=None, cw2=None, columnWidth3=None, cw3=None, columnWidth4=None, cw4=None, columnWidth5=None, cw5=None, columnWidth6=None, cw6=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fileName=None, fi=None, forceChangeCommand=None, fcc=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, insertText=None, it=None, insertionPosition=None, ip=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, placeholderText=None, pht=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowAttach=None, rat=None, text=None, tx=None, textChangedCommand=None, tcc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    
    """
    pass


def SculptReferenceVectorMarkingMenuPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clip(absolute=None, abs=None, absoluteRotations=None, abr=None, active=None, a=None, addTrack=None, at=None, allAbsolute=None, aa=None, allClips=None, ac=None, allRelative=None, ar=None, allSourceClips=None, asc=None, animCurveRange=None, acr=None, character=None, ch=None, constraint=None, cn=None, copy=None, c=None, defaultAbsolute=None, da=None, duplicate=None, d=None, endTime=None, end=None, expression=None, ex=None, ignoreSubcharacters=None, ignoreSubcharacters=None, isolate=None, i=None, leaveOriginal=None, lo=None, mapMethod=None, mm=None, name=None, n=None, newName=None, nn=None, paste=None, p=None, pasteInstance=None, pi=None, remove=None, rm=None, removeTrack=None, rt=None, rotationOffset=None, rof=None, rotationsAbsolute=None, ra=None, scheduleClip=None, sc=None, sourceClipName=None, scn=None, split=None, sp=None, startTime=None, s=None, translationOffset=None, tof=None, useChannel=None, uc=None, *args, **kwargs):
    """
    This command is used to create, edit and query character clips.
    """
    pass


def DecreaseExposureFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def curveSketchCtx(degree=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    The curveSketchCtx command creates a new curve sketch context, also known as the "pencil context". 
    """
    pass


def MakeLightLinks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportFillTimeline(*args, **kwargs):
    """
    
    """
    pass


def EnableNParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintGeomCacheTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def userCtx(*args, **kwargs):
    """
    
    """
    pass


def saveMenu(*args, **kwargs):
    """
    This command is used for saving the contents of a menu, so that another instance of the menu may be recreated later. The command writes out a file which, when run as a script, will rebuild the menuItems contained in the original menu. Note that the fileName is relative to the user's marking menu preference directory. 
    """
    pass


def listDeviceAttachments(attribute=None, at=None, axis=None, ax=None, clutch=None, c=None, device=None, d=None, file=None, f=None, selection=None, sl=None, write=None, w=None, *args, **kwargs):
    """
    This command lists the current set of device attachments. The listing is in the form of the commands required to recreate them.This includes both attachments and device mappings. 
    """
    pass


def panZoom(absolute=None, abs=None, downDistance=None, d=None, leftDistance=None, l=None, relative=None, rel=None, rightDistance=None, r=None, upDistance=None, u=None, zoomRatio=None, z=None, *args, **kwargs):
    """
    The panZoom command pans/zooms the 2D film. 
    """
    pass


def webView(urlAddress=None, url=None, windowHeight=None, wh=None, windowWidth=None, ww=None, *args, **kwargs):
    """
    This command allows the user to bring up a web page view 
    """
    pass


def DeleteAllNCloths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GoToDefaultView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmNoiseBrushContext(*args, **kwargs):
    """
    
    """
    pass


def ScaleToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ctxData(*args, **kwargs):
    """
    
    """
    pass


def HIKUiControl(*args, **kwargs):
    """
    
    """
    pass


def jointCtx(autoJointOrient=None, ajo=None, autoPriorityH=None, apH=None, createIKHandle=None, ikh=None, degreeOfFreedomJ=None, dJ=None, exists=None, ex=None, forceSolverH=None, fsH=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, jointAutoLimits=None, jal=None, jointOrientationJ=None, joJ=None, largeBoneLength=None, lbl=None, largeBoneRadius=None, lbr=None, poWeightH=None, pwH=None, priorityH=None, pH=None, scaleCompensateJ=None, scJ=None, scaleJ=None, sJ=None, scaleOrientationJ=None, soJ=None, secondaryAxisOrient=None, sao=None, smallBoneLength=None, sbl=None, smallBoneRadius=None, sbr=None, snapHandleH=None, snH=None, solverTypeH=None, stH=None, stickyH=None, sH=None, symmetry=None, sym=None, symmetryAxis=None, sa=None, variableBoneSize=None, vbs=None, weightH=None, wH=None, *args, **kwargs):
    """
    The joint context command (jointCtx) updates the parameters of the joint tool. The options for the tool will be set by the flags the user specifies. 
    """
    pass


def HypershadeExportSelectedNetwork(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonType(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def instance(leaf=None, lf=None, name=None, n=None, smartTransform=None, st=None, *args, **kwargs):
    """
    Instancing is a way of making the same object appear twice in the scene. This is accomplished by creation of a new transform node that points to an exisiting object. Changes to the transform are independent but changes to the "instanced" object affect all instances since the node is shared. 
    """
    pass


def dR_scaleRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def editImportedStatus(*args, **kwargs):
    """
    
    """
    pass


def nurbsPlane(axis=None, ax=None, degree=None, d=None, lengthRatio=None, lr=None, patchesU=None, u=None, patchesV=None, v=None, pivot=None, p=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The nurbsPlane command creates a new NURBS Plane and return the name of the new surface. It creates an unit plane with center at origin by default. 
    """
    pass


def dR_softSelDistanceTypeSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmNullRender(*args, **kwargs):
    """
    
    """
    pass


def igBrush(*args, **kwargs):
    """
    
    """
    pass


def retimeHelper(*args, **kwargs):
    """
    
    """
    pass


def xgmRebuildCurve(*args, **kwargs):
    """
    
    """
    pass


def FluidEmitter(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OutlinerToggleSetMembers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshFlattenTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def unloadPlugin(addCallback=None, ac=None, force=None, f=None, removeCallback=None, rc=None, *args, **kwargs):
    """
    Unload plug-ins from Maya. After the successful execution of this command, plug-in services will no longer be available. 
    """
    pass


def snapKey(animation=None, an=None, attribute=None, at=None, controlPoints=None, cp=None, float=None, f=None, hierarchy=None, hi=None, includeUpperBound=None, iub=None, index=None, index=None, shape=None, s=None, time=None, t=None, timeMultiple=None, tm=None, valueMultiple=None, vm=None, *args, **kwargs):
    """
    This command operates on a keyset.A keyset is defined as a group of keys within a specified time range on one or more animation curves. 
    """
    pass


def SculptSurfacesTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def controller(allControllers=None, ac=None, children=None, cld=None, group=None, g=None, index=None, idx=None, isController=None, ic=None, parent=None, p=None, pickWalkDown=None, pwd=None, pickWalkLeft=None, pwl=None, pickWalkRight=None, pwr=None, pickWalkUp=None, pwu=None, unparent=None, unp=None, *args, **kwargs):
    """
    Commands for managing animation sources
    """
    pass


def ThreePointArcTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UniversalManipOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dagObjectCompare(attribute=None, a=None, bail=None, b=None, connection=None, c=None, namespace=None, n=None, relative=None, r=None, short=None, s=None, type=None, t=None, *args, **kwargs):
    """
    dagObjectCompare can be used to compare to compare objects based on: 
    """
    pass


def pluginInfo(activeFile=None, af=None, animCurveInterp=None, aci=None, apiVersion=None, av=None, autoload=None, a=None, cacheFormat=None, cf=None, changedCommand=None, cc=None, command=None, c=None, constraintCommand=None, cnc=None, controlCommand=None, ctc=None, data=None, d=None, dependNode=None, dn=None, dependNodeByType=None, dnt=None, dependNodeId=None, dni=None, device=None, dv=None, dragAndDropBehavior=None, ddb=None, iksolver=None, ik=None, listPlugins=None, ls=None, listPluginsPath=None, lsp=None, loadPluginPrefs=None, lpp=None, loaded=None, l=None, modelEditorCommand=None, mec=None, name=None, n=None, path=None, p=None, pluginsInUse=None, pu=None, registered=None, r=None, remove=None, rm=None, renderer=None, rdr=None, savePluginPrefs=None, spp=None, serviceDescriptions=None, sd=None, settings=None, set=None, tool=None, t=None, translator=None, tr=None, unloadOk=None, uo=None, userNamed=None, u=None, vendor=None, vd=None, version=None, v=None, writeRequires=None, wr=None, *args, **kwargs):
    """
    This command provides access to the plug-in registry of the application. It is used mainly to query the characteristics of registered plug-ins. Plugins automatically become registered the first time that they are loaded. 
    """
    pass


def xgmGrabBrushContext(*args, **kwargs):
    """
    
    """
    pass


def Radial(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def subdMirror(xMirror=None, xm=None, yMirror=None, ym=None, zMirror=None, zm=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command takes a subdivision surface, passed as the argument, and produces a subdivision surface that is a mirror. Returns the name of the subdivision surface created and optionally the DG node that does the mirroring. 
    """
    pass


def HypershadeDisplayNoShapes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def u3dOptimize(*args, **kwargs):
    """
    
    """
    pass


def dR_wireframeSmoothTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def modelEditor(activeComponentsXray=None, acx=None, activeCustomEnvironment=None, ace=None, activeCustomGeometry=None, acg=None, activeCustomLighSet=None, acl=None, activeCustomOverrideGeometry=None, aog=None, activeCustomRenderer=None, acr=None, activeOnly=None, ao=None, activeShadingGraph=None, asg=None, activeView=None, av=None, addObjects=None, aob=None, addSelected=None, addSelected=None, allObjects=None, alo=None, backfaceCulling=None, bfc=None, bufferMode=None, bm=None, bumpResolution=None, brz=None, camera=None, cam=None, cameraName=None, cn=None, cameraSetup=None, cs=None, cameras=None, ca=None, capture=None, cpt=None, captureSequenceNumber=None, csn=None, cmEnabled=None, cme=None, colorMap=None, cm=None, colorResolution=None, crz=None, control=None, ctl=None, controlVertices=None, cv=None, cullingOverride=None, cov=None, default=None, d=None, defineTemplate=None, dt=None, deformers=None, df=None, dimensions=None, dim=None, displayAppearance=None, da=None, displayLights=None, dl=None, displayTextures=None, dtx=None, docTag=None, dtg=None, dynamicConstraints=None, dc=None, dynamics=None, dy=None, editorChanged=None, ec=None, exists=None, ex=None, exposure=None, exp=None, filter=None, f=None, filteredObjectList=None, fol=None, fluids=None, fl=None, fogColor=None, fcl=None, fogDensity=None, fdn=None, fogEnd=None, fen=None, fogMode=None, fmd=None, fogSource=None, fsc=None, fogStart=None, fst=None, fogging=None, fg=None, follicles=None, fo=None, forceMainConnection=None, fmc=None, gamma=None, ga=None, grid=None, gr=None, hairSystems=None, hs=None, handles=None, ha=None, headsUpDisplay=None, hud=None, height=None, h=None, highlightConnection=None, hlc=None, hulls=None, hu=None, ignorePanZoom=None, ipz=None, ikHandles=None, ikh=None, imagePlane=None, imp=None, interactive=None, i=None, isFiltered=None, isFiltered=None, jointXray=None, jx=None, joints=None, j=None, lights=None, lt=None, lineWidth=None, lw=None, locators=None, lc=None, lockMainConnection=None, lck=None, lowQualityLighting=None, lql=None, mainListConnection=None, mlc=None, manipulators=None, m=None, maxConstantTransparency=None, mct=None, modelPanel=None, mp=None, motionTrails=None, mt=None, nCloths=None, ncl=None, nParticles=None, npa=None, nRigids=None, nr=None, noUndo=None, nud=None, nurbsCurves=None, nc=None, nurbsSurfaces=None, ns=None, objectFilter=None, obf=None, objectFilterList=None, ofl=None, objectFilterListUI=None, ofu=None, objectFilterShowInHUD=None, ofs=None, objectFilterUI=None, obu=None, occlusionCulling=None, ocl=None, panel=None, pnl=None, parent=None, p=None, pivots=None, pv=None, planes=None, pl=None, pluginObjects=None, po=None, pluginShapes=None, ps=None, polymeshes=None, pm=None, queryPluginObjects=None, qpo=None, removeSelected=None, rs=None, rendererDeviceName=None, rdn=None, rendererList=None, rls=None, rendererListUI=None, rlu=None, rendererName=None, rnm=None, rendererOverrideList=None, rol=None, rendererOverrideListUI=None, rou=None, rendererOverrideName=None, rom=None, resetCustomCamera=None, rcc=None, sceneRenderFilter=None, srf=None, selectionConnection=None, slc=None, selectionHiliteDisplay=None, sel=None, setSelected=None, ss=None, shadows=None, sdw=None, smoothWireframe=None, swf=None, sortTransparent=None, st=None, stateString=None, sts=None, strokes=None, str=None, subdivSurfaces=None, sds=None, textureAnisotropic=None, ta=None, textureDisplay=None, td=None, textureHilight=None, th=None, textureMaxSize=None, tms=None, textureMemoryUsed=None, tmu=None, textureSampling=None, ts=None, textures=None, tx=None, toggleExposure=None, tge=None, toggleGamma=None, tgg=None, transpInShadows=None, tis=None, transparencyAlgorithm=None, tal=None, twoSidedLighting=None, tsl=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateColorMode=None, ucm=None, updateMainConnection=None, upd=None, useBaseRenderer=None, ubr=None, useColorIndex=None, uci=None, useDefaultMaterial=None, udm=None, useInteractiveMode=None, ui=None, useRGBImagePlane=None, ip=None, useTemplate=None, ut=None, userNode=None, un=None, viewObjects=None, vo=None, viewSelected=None, vs=None, viewTransformName=None, vtn=None, viewType=None, vt=None, width=None, w=None, wireframeBackingStore=None, wbs=None, wireframeOnShaded=None, wos=None, xray=None, xr=None, *args, **kwargs):
    """
    Create, edit or query a model editor. 
    """
    pass


def SculptPolygonsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ModifyUpperRadiusRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def roll(absolute=None, abs=None, degree=None, d=None, relative=None, rel=None, *args, **kwargs):
    """
    The roll command rotates a camera about its viewing direction, a positive angle produces clockwise camera rotation, while a negative angle produces counter-clockwise camera rotation. 
    """
    pass


def ConvertSelectionToContainedFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SlideEdgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorFramePlaybackRange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Export(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Bend(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorKeepTransitionsTogglePress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshSmearTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectBrushNames(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def constrain(barrier=None, br=None, damping=None, d=None, directionalHinge=None, dhi=None, hinge=None, hi=None, interpenetrate=None, i=None, nail=None, na=None, name=None, n=None, orientation=None, o=None, pinConstraint=None, pin=None, position=None, p=None, restLength=None, rl=None, spring=None, s=None, stiffness=None, st=None, *args, **kwargs):
    """
    This command constrains rigid bodies to the world or other rigid bodies.
    """
    pass


def nexConnectContext(*args, **kwargs):
    """
    
    """
    pass


def cmdScrollFieldReporter(annotation=None, ann=None, backgroundColor=None, bgc=None, clear=None, clr=None, copySelection=None, cp=None, cutSelection=None, ct=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, echoAllCommands=None, eac=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, filterSourceType=None, fst=None, fullPathName=None, fpn=None, hasFocus=None, hf=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, lineNumbers=None, ln=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, pasteSelection=None, pst=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, receiveFocusCommand=None, rfc=None, saveSelection=None, sv=None, saveSelectionToShelf=None, svs=None, select=None, sl=None, selectAll=None, sla=None, stackTrace=None, st=None, suppressErrors=None, se=None, suppressInfo=None, si=None, suppressResults=None, sr=None, suppressStackTrace=None, sst=None, suppressWarnings=None, sw=None, text=None, t=None, textLength=None, tl=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    A script editor reporter control used to receive and display the history of processed commmands.
    """
    pass


def cameraView(addBookmark=None, ab=None, bookmarkType=None, typ=None, camera=None, c=None, name=None, n=None, removeBookmark=None, rb=None, setCamera=None, sc=None, setView=None, sv=None, *args, **kwargs):
    """
    This command creates a preset view for a camera which is then independent of the camera. The view stores a camera's eye point, center of interest point, up vector, tumble pivot, horizontal aperture, vertical aperature, focal length, orthographic width, and whether the camera is orthographic or perspective by default. Or you can only store 2D pan/zoom attributes by setting the bookmarkType to 1. These settings can be applied to any other camera through the set camera flag. 
    """
    pass


def TimeEditorPasteClips(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def orbitCtx(alternateContext=None, ac=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, localOrbit=None, lo=None, name=None, n=None, orbitScale=None, os=None, toolName=None, tn=None, *args, **kwargs):
    """
    Create, edit, or query an orbit context.
    """
    pass


def DeleteMemoryCaching(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def profilerTool(categoryView=None, cat=None, cpuView=None, cpu=None, destroy=None, dtr=None, exists=None, ex=None, findNext=None, fn=None, findPrevious=None, fp=None, frameAll=None, fa=None, frameSelected=None, fs=None, isolateSegment=None, isolateSegment=None, make=None, mk=None, matchWholeWord=None, mww=None, searchEvent=None, se=None, segmentCount=None, sc=None, showAllEvent=None, sa=None, showSelectedEvents=None, ss=None, showSelectedEventsRepetition=None, ssr=None, threadView=None, thd=None, unisolateSegment=None, uis=None, *args, **kwargs):
    """
    
    """
    pass


def EmitFromObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVOverlappingComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Goal(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def substituteGeometry(disableNonSkinDeformers=None, dnd=None, newGeometryToLayer=None, ngl=None, oldGeometryToLayer=None, ogl=None, reWeightDistTolerance=None, wdt=None, retainOldGeometry=None, rog=None, *args, **kwargs):
    """
    This command can be used to replace the geometry which is already connected to deformers with a new geometry. The weights on the old geometry will be retargeted to the new geometry.
    """
    pass


def WarpImage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GrowLoopPolygonSelectionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportAxisConversionMethod(*args, **kwargs):
    """
    
    """
    pass


def xgmGuideSculptToolCmd(*args, **kwargs):
    """
    
    """
    pass


def ToggleUVDistortion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVEditorFrameAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddTargetShape(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listNodeTypes(exclude=None, ex=None, *args, **kwargs):
    """
    Lists dependency node types satisfying a specified classification string. 
    """
    pass


def NodeEditorGraphRemoveSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeMultipleEdges(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def manipRotateContext(activeHandle=None, ah=None, alignAlong=None, aa=None, constrainAlongNormal=None, xn=None, currentActiveHandle=None, cah=None, editPivotMode=None, epm=None, editPivotPosition=None, epp=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, lastMode=None, lm=None, manipVisible=None, vis=None, mode=None, m=None, modifyTranslation=None, mt=None, orientAxes=None, oa=None, orientObject=None, oo=None, orientTowards=None, ot=None, pinPivot=None, pin=None, pivotOriHandle=None, poh=None, position=None, p=None, postCommand=None, psc=None, postDragCommand=None, pod=None, preCommand=None, prc=None, preDragCommand=None, prd=None, preserveChildPosition=None, pcp=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAbout=None, rab=None, reflectionAxis=None, rfa=None, reflectionTolerance=None, rft=None, rotate=None, ro=None, snapPivotOri=None, spo=None, snapPivotPos=None, spp=None, tweakMode=None, twk=None, useCenterPivot=None, ucp=None, useManipPivot=None, ump=None, useObjectPivot=None, uop=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a rotate manip context.
    """
    pass


def FineLevelComponentDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeCollide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def adskRepresentation(*args, **kwargs):
    """
    
    """
    pass


def polyColorMod(baseColorName=None, bcn=None, huev=None, h=None, satv=None, s=None, value=None, v=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Modifies the attributes of a poly color set.
    """
    pass


def subdPlanarProjection(constructionHistory=None, ch=None, createNewMap=None, cm=None, imageCenter=None, ic2=None, imageCenterX=None, icx=None, imageCenterY=None, icy=None, imageScale=None, is2=None, imageScaleU=None, isu=None, imageScaleV=None, isv=None, insertBeforeDeformers=None, ibd=None, keepImageRatio=None, kir=None, mapDirection=None, md=None, name=None, n=None, projectionCenter=None, pc=None, projectionCenterX=None, pcx=None, projectionCenterY=None, pcy=None, projectionCenterZ=None, pcz=None, projectionHeight=None, ph=None, projectionScale=None, ps=None, projectionWidth=None, pw=None, rotate=None, ro=None, rotateX=None, rx=None, rotateY=None, ry=None, rotateZ=None, rz=None, rotationAngle=None, ra=None, smartFit=None, sf=None, worldSpace=None, ws=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    TsubProjCmdBase is a base class for the command to create a mapping on the selected subdivision faces. Projects a map onto an object, using an orthogonal projection. The piece of the map defined from isu, isv, icx, icy area, is placed at pcx, pcy, pcz location. 
    """
    pass


def MarkingMenuPreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintSetMembershipToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnpublishNode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayShadingMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertSelectionToUVEdgeLoop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectLightsIlluminatingObject(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowDynamicConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def greasePencilCtx(*args, **kwargs):
    """
    This is a tool context command for the grease pencil tool.
    """
    pass


def BendOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sculptMeshCacheChangeCloneSource(blendShape=None, bs=None, target=None, t=None, *args, **kwargs):
    """
    This command changes the source blend shape and target for the clone target tool. Used internally for undo/redo, don't call it directly.
    """
    pass


def NodeEditorToggleNodeSelectedPins(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSSmoothnessRoughOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hotBox(PaneOnlyMenus=None, po=None, PaneToggleMenus=None, pt=None, animationOnlyMenus=None, ao=None, animationToggleMenus=None, at=None, clothOnlyMenus=None, clo=None, clothToggleMenus=None, clt=None, commonOnlyMenus=None, co=None, commonToggleMenus=None, ct=None, customMenuSetsToggleMenus=None, cst=None, displayCenterOnly=None, dco=None, displayHotbox=None, dh=None, displayStyle=None, ds=None, displayZonesOnly=None, dzo=None, dynamicsOnlyMenus=None, do=None, dynamicsToggleMenus=None, dt=None, liveOnlyMenus=None, lo=None, liveToggleMenus=None, lt=None, modelingOnlyMenus=None, mdo=None, modelingToggleMenus=None, mdt=None, noClickCommand=None, ncc=None, noClickDelay=None, ncd=None, noClickPosition=None, ncp=None, noKeyPress=None, nkp=None, polygonsOnlyMenus=None, plo=None, polygonsToggleMenus=None, plt=None, position=None, pos=None, release=None, rl=None, renderingOnlyMenus=None, ro=None, renderingToggleMenus=None, rt=None, riggingOnlyMenus=None, rgo=None, riggingToggleMenus=None, rgt=None, rmbPopups=None, rmb=None, showAllToggleMenus=None, a=None, surfacesOnlyMenus=None, so=None, surfacesToggleMenus=None, st=None, transparenyLevel=None, tr=None, updateMenus=None, um=None, *args, **kwargs):
    """
    This command controls parameters related to the hotBox menubar palette. When the command is invoked with no flags, the hotBox is popped up. 
    """
    pass


def FBXImportResamplingRateSource(*args, **kwargs):
    """
    
    """
    pass


def melInfo(*args, **kwargs):
    """
    This command returns the names of all global MEL procedures that are currently defined as a string array. The user can query the definition of each MEL procedure using the "whatIs" command.
    """
    pass


def Undo(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyRemoveAllCrease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyInstallAction(commandName=None, cn=None, convertSelection=None, cs=None, installConstraint=None, ic=None, installDisplay=None, id=None, keepInstances=None, ki=None, uninstallConstraint=None, uc=None, uninstallDisplay=None, ud=None, *args, **kwargs):
    """
    Installs/uninstalls several things to help the user to perform the specified action : 
    """
    pass


def StitchEdgesTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShelfPreferencesWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CutPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportConvertDeformingNullsToJoint(*args, **kwargs):
    """
    
    """
    pass


def createNode(name=None, n=None, parent=None, p=None, shared=None, s=None, skipSelect=None, ss=None, *args, **kwargs):
    """
    This command creates a new node in the dependency graph of the specified type. 
    """
    pass


def evalEcho(*args, **kwargs):
    """
    
    """
    pass


def dynExport(allObjects=None, all=None, attribute=None, atr=None, format=None, f=None, maxFrame=None, mxf=None, minFrame=None, mnf=None, overSampling=None, os=None, path=None, p=None, *args, **kwargs):
    """
    Export particle data to disk files. 
    """
    pass


def SetMeshSmoothTargetTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def move(absolute=None, a=None, componentSpace=None, cs=None, constrainAlongNormal=None, xn=None, deletePriorHistory=None, dph=None, localSpace=None, ls=None, moveX=None, x=None, moveXY=None, xy=None, moveXYZ=None, xyz=None, moveXZ=None, xz=None, moveY=None, y=None, moveYZ=None, yz=None, moveZ=None, z=None, objectSpace=None, os=None, orientJoint=None, oj=None, parameter=None, p=None, preserveChildPosition=None, pcp=None, preserveGeometryPosition=None, pgp=None, preserveUV=None, puv=None, reflection=None, rfl=None, reflectionAboutBBox=None, rab=None, reflectionAboutOrigin=None, rao=None, reflectionAboutX=None, rax=None, reflectionAboutY=None, ray=None, reflectionAboutZ=None, raz=None, reflectionTolerance=None, rft=None, relative=None, r=None, rotatePivotRelative=None, rpr=None, scalePivotRelative=None, spr=None, secondaryAxisOrient=None, sao=None, symNegative=None, smn=None, worldSpace=None, ws=None, worldSpaceDistance=None, wd=None, xformConstraint=None, xc=None, *args, **kwargs):
    """
    The move command is used to change the positions of geometric objects. 
    """
    pass


def toolDropped(*args, **kwargs):
    """
    This command builds and executes the commands necessary to recreate the specified tool button.It is invoked when a tool is dropped on the shelf. 
    """
    pass


def soundControl(annotation=None, ann=None, backgroundColor=None, bgc=None, beginScrub=None, bs=None, defineTemplate=None, dt=None, displaySound=None, ds=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, endScrub=None, es=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, maxTime=None, max=None, minTime=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, pressCommand=None, pc=None, preventOverride=None, po=None, releaseCommand=None, rc=None, repeatChunkSize=None, rcs=None, repeatOnHold=None, roh=None, resample=None, r=None, sound=None, s=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, waveform=None, wf=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a control used for changing current time and scratching/scrubbing through sound files. 
    """
    pass


def createRenderLayer(empty=None, e=None, g=None, g=None, makeCurrent=None, mc=None, name=None, n=None, noRecurse=None, nr=None, number=None, num=None, *args, **kwargs):
    """
    Create a new render layer.The render layer number will be assigned based on the first unassigned number not less than the base index number found in the render layer global parameters.Normally all objects and their descendants will be added to the new render layer but if '-noRecurse' is specified then only the objects themselves will be added. Only transforms and geometry will be added to the new render layer.
    """
    pass


def dgstats(*args, **kwargs):
    """
    
    """
    pass


def CreateSpotLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def clearShear(*args, **kwargs):
    """
    
    """
    pass


def joint(absolute=None, a=None, angleX=None, ax=None, angleY=None, ay=None, angleZ=None, az=None, assumePreferredAngles=None, apa=None, automaticLimits=None, al=None, children=None, ch=None, component=None, co=None, degreeOfFreedom=None, dof=None, exists=None, ex=None, limitSwitchX=None, lsx=None, limitSwitchY=None, lsy=None, limitSwitchZ=None, lsz=None, limitX=None, lx=None, limitY=None, ly=None, limitZ=None, lz=None, name=None, n=None, orientJoint=None, oj=None, orientation=None, o=None, position=None, p=None, radius=None, rad=None, relative=None, r=None, rotationOrder=None, roo=None, scale=None, s=None, scaleCompensate=None, sc=None, scaleOrientation=None, so=None, secondaryAxisOrient=None, sao=None, setPreferredAngles=None, spa=None, stiffnessX=None, stx=None, stiffnessY=None, sty=None, stiffnessZ=None, stz=None, symmetry=None, sym=None, symmetryAxis=None, sa=None, zeroScaleOrient=None, zso=None, *args, **kwargs):
    """
    The joint command is used to create, edit, and query, joints within Maya. (The standard edit(-e) and query(-q) flags are used for edit and query functions). If the object is not specified, the currently selected object (dag object) will be used. 
    """
    pass


def revolve(autoCorrectNormal=None, acn=None, axis=None, ax=None, axisChoice=None, aco=None, axisX=None, axx=None, axisY=None, axy=None, axisZ=None, axz=None, bridge=None, br=None, computePivotAndAxis=None, cpa=None, degree=None, d=None, endSweep=None, esw=None, pivot=None, p=None, pivotX=None, px=None, pivotY=None, py=None, pivotZ=None, pz=None, radius=None, r=None, radiusAnchor=None, ra=None, sections=None, s=None, startSweep=None, ssw=None, tolerance=None, tol=None, useTolerance=None, ut=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, polygon=None, po=None, range=None, rn=None, rebuild=None, rb=None, useLocalPivot=None, ulp=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    This command creates a revolved surface by revolving the given profile curve about an axis.The profile curve can be a curve, curve-on-surface, surface isoparm, or trim edge. 
    """
    pass


def SelectUVBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CopyKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texCutContext(adjustSize=None, asz=None, displayShellBorders=None, dsb=None, edgeSelectSensitive=None, ess=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, mode=None, m=None, moveRatio=None, mvr=None, name=None, n=None, size=None, sz=None, steadyStroke=None, ss=None, steadyStrokeDistance=None, ssd=None, touchToSew=None, tts=None, *args, **kwargs):
    """
    This command creates a context for cut uv tool.This context only works in the UV editor. 
    """
    pass


def ToggleVertMetadata(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def spotLight(barnDoors=None, bd=None, bottomBarnDoorAngle=None, bbd=None, coneAngle=None, ca=None, decayRate=None, d=None, discRadius=None, drs=None, dropOff=None, do=None, exclusive=None, exc=None, intensity=None, i=None, leftBarnDoorAngle=None, lbd=None, name=None, n=None, penumbra=None, p=None, position=None, pos=None, rgb=None, rgb=None, rightBarnDoorAngle=None, rbd=None, rotation=None, rot=None, shadowColor=None, sc=None, shadowDither=None, sd=None, shadowSamples=None, sh=None, softShadow=None, ss=None, topBarnDoorAngle=None, tbd=None, useRayTraceShadows=None, rs=None, *args, **kwargs):
    """
    TlightCmd is the base class for other light commands. TnonAmbientLightCmd is a class that looks like a command but is not.It is a base class for the extended/nonExtended lights. TnonExtendedLightCmd is a base class and not a real command. It is inherited by several lights: TpointLight, TdirectionalLight, TspotLight etc. The spotLight command is used to edit the parameters of existing spotLights, or to create new ones. The default behaviour is to create a new spotlight. 
    """
    pass


def subdTransferUVsToCache(*args, **kwargs):
    """
    The subdivision surface finer level uvs will get copied to the polygonToSubd node sent in as argument. 
    """
    pass


def untrim(constructionHistory=None, ch=None, curveOnSurface=None, cos=None, name=None, n=None, noChanges=None, nc=None, object=None, o=None, replaceOriginal=None, rpo=None, untrimAll=None, all=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Untrim the surface.
    """
    pass


def Unparent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonTorus(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnfoldPackUVs3DInCurrentTile(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleToolWithSnapMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectSharedColorInstances(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateReference(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorDiveIntoCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostAdaptiveMesh(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def igBrushContext(*args, **kwargs):
    """
    
    """
    pass


def CreatePolygonPrismOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dynTestData(*args, **kwargs):
    """
    
    """
    pass


def dR_setRelaxAffectsInterior(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddBifrostCollider(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SmoothProxyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateCurveFromPolyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PointOnPolyConstraint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertJointTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deformerWeights(attribute=None, at=None, defaultValue=None, dv=None, deformer=None, df=None, export=None, ex=None, ignoreName=None, ig=None, im=None, im=None, method=None, m=None, path=None, p=None, positionTolerance=None, pt=None, remap=None, r=None, shape=None, sh=None, skip=None, sk=None, vertexConnections=None, vc=None, weightPrecision=None, wp=None, weightTolerance=None, wt=None, worldSpace=None, ws=None, *args, **kwargs):
    """
    Command to import and export deformer weights to and from a simple XMLfile. The weight data is stored in a per-vertex fashion along with a"point cloud" corresponding to the vertices from the geometry input tothe deformer.For example a cluster deformer would have the following information:
    """
    pass


def MatchRotation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportBakeComplexEnd(*args, **kwargs):
    """
    
    """
    pass


def ParameterTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nodeIconButton(align=None, al=None, annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, defineTemplate=None, dt=None, disabledImage=None, di=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, flipX=None, fx=None, flipY=None, fy=None, font=None, fn=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, imageOverlayLabel=None, iol=None, isObscured=None, io=None, label=None, l=None, labelOffset=None, lo=None, ltVersion=None, lt=None, manage=None, m=None, marginHeight=None, mh=None, marginWidth=None, mw=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, overlayLabelBackColor=None, olb=None, overlayLabelColor=None, olc=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rotation=None, rot=None, style=None, st=None, useAlpha=None, ua=None, useTemplate=None, ut=None, version=None, ver=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This control supports up to 3 icon images and 4 different display styles.The icon image displayed is the one that best fits the current size of the control given its current style. 
    """
    pass


def PaintEffectsToCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorToggleExtendParentsPress(*args, **kwargs):
    """
    unknown
    """
    pass


def PasteSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def movIn(file=None, f=None, startTime=None, st=None, *args, **kwargs):
    """
    Imports a .mov file into animation curves connected tothe listed attributes. The attribute must be writable, since an animation curve will be created and connected to the attribute. If an animation curve already is connected to the attribute, the imported data is pasted onto that curve. 
    """
    pass


def SplitMeshWithProjectedCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddHolder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgExpressionEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CenterPivot(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCheck(edge=None, e=None, face=None, f=None, openFile=None, of=None, *args, **kwargs):
    """
    Dumps a description of internal memory representation of poly objects. 
    """
    pass


def DeleteAllClips(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRenderTextureRangeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSSmoothnessFine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def customerInvolvementProgram(*args, **kwargs):
    """
    
    """
    pass


def ReducePolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateParticleDiskCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyCreateFacet(hole=None, hl=None, point=None, p=None, subdivision=None, s=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    Create a new polygonal object with the specified face, which will be closed. List of arguments must have at least 3 points. 
    """
    pass


def rampWidgetAttrless(*args, **kwargs):
    """
    
    """
    pass


def DisableParticles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OpenVisorForMeshes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UpdateEraseSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddPointsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def graphTrackCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command can be used to create a track context for the graph editor. 
    """
    pass


def ArtPaintSkinWeightsToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorImportAnimation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeDraggerToolDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nClothRemove(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FloatSelectedObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorExplodeCompound(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def intField(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, enterCommand=None, ec=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, receiveFocusCommand=None, rfc=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a field control that accepts only integer values and is bound by a minimum and maximum value.An invisible slider is attached to the field and accessed by holding down the Ctrl modifier key while pressing one of the mouse buttons.Dragging the invisible slider to the right with the middle mouse button increases the field value by the amount specified with the 
    """
    pass


def HideLightManipulators(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_setExtendBorder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Create2DContainerEmitterOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NURBSSmoothnessMedium(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Smoke(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateGhost(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TexSculptDeactivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def LowQualityDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateIllustratorCurvesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleUseAssetsAndPublishedAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVSetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetAllInputsFromSubstanceNode(*args, **kwargs):
    """
    
    """
    pass


def unassignInputDevice(clutch=None, c=None, device=None, d=None, *args, **kwargs):
    """
    This command deletes all command strings associated with this device. 
    """
    pass


def dR_selectModeTweakMarquee(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BrushPresetBlendShading(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetDensityBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def mouldSubdiv(*args, **kwargs):
    """
    
    """
    pass


def removeListItem(*args, **kwargs):
    """
    
    """
    pass


def loadFluid(currentTime=None, ct=None, frame=None, f=None, initialConditions=None, ic=None, *args, **kwargs):
    """
    A command to set builtin fluid attributes such as Density, Velocity, etc for all cells in the grid from the initial state cache
    """
    pass


def AddBoatLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AddFaceDivisions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveBifrostField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def QualityDisplayMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachComponent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmDraRender(*args, **kwargs):
    """
    
    """
    pass


def DisableSnapshots(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_convertSelectionToFace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def trimCtx(*args, **kwargs):
    """
    
    """
    pass


def polyUVCoverage(*args, **kwargs):
    """
    
    """
    pass


def dR_selConstraintUVEdgeLoop(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FitBSplineOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ReassignBoneLatticeJoint(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EnableIKSolvers(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def symmetrizeUV(*args, **kwargs):
    """
    
    """
    pass


def AddCombinationTargetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttrSkinPaintCtx(accopacity=None, aco=None, activeListChangedProc=None, alp=None, afterStrokeCmd=None, asc=None, alphaclamp=None, alc=None, alphaclamplower=None, acl=None, alphaclampupper=None, acu=None, attrSelected=None, asl=None, beforeStrokeCmd=None, bsc=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clamp=None, cl=None, clamplower=None, cll=None, clampupper=None, clu=None, clear=None, clr=None, colorRamp=None, cr=None, colorfeedback=None, cf=None, colorrangelower=None, crl=None, colorrangeupper=None, cru=None, dataTypeIndex=None, dti=None, disablelighting=None, dl=None, dragSlider=None, dsl=None, duringStrokeCmd=None, dsk=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, filterNodes=None, fon=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, influence=None, inf=None, interactiveUpdate=None, iu=None, lowerradius=None, lr=None, mappressure=None, mp=None, maxvalue=None, mxv=None, minvalue=None, miv=None, name=None, n=None, objattrArray=None, oaa=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintNodeArray=None, pna=None, paintSelectMode=None, psm=None, paintattrselected=None, pas=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, radius=None, r=None, rampMaxColor=None, rxc=None, rampMinColor=None, rmc=None, reflection=None, rn=None, reflectionaxis=None, ra=None, selectedattroper=None, sao=None, showactive=None, sa=None, skinPaintMode=None, spm=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, toolOffProc=None, tfp=None, toolOnProc=None, top=None, useColorRamp=None, ucr=None, useMaxMinColor=None, umc=None, usepressure=None, up=None, value=None, val=None, whichTool=None, wst=None, xrayJoints=None, xry=None, *args, **kwargs):
    """
    This is a context command to set the flags on the artAttrContext, which is the base context for attribute painting operations. All commands require the name of the context as the last argument as this provides the name of the context to create, edit or query. 
    """
    pass


def RemoveBifrostFoamMask(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Boundary(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypergraphDGWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_bevelTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveConstraintTarget(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def iconTextRadioCollection(collectionItemArray=None, cia=None, defineTemplate=None, dt=None, disableCommands=None, dcm=None, exists=None, ex=None, gl=None, gl=None, numberOfCollectionItems=None, nci=None, parent=None, p=None, select=None, sl=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    This command creates a cluster for iconTextRadioButtons.Clusters will be parented to the current default layout if no parent is specified with the -p/parent flag. As children of the layout they will be deleted when the layout is deleted. Clusters may also span more than one window if the -g/global flag is used. In this case the cluster has no parent so must be explicitly deleted with the 'deleteUI' command. 
    """
    pass


def LevelOfDetailGroupOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ClearPaintEffectsView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CurveFlow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleDisplayGradient(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScriptPaintTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeEditTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def commandLine(annotation=None, ann=None, backgroundColor=None, bgc=None, command=None, c=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, enterCommand=None, ec=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, holdFocus=None, hf=None, inputAnnotation=None, ian=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfHistoryLines=None, nhl=None, numberOfPopupMenus=None, npm=None, outputAnnotation=None, oan=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, sourceType=None, st=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a single line for command input/output.
    """
    pass


def DeleteAllExpressions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyTorusCtx(*args, **kwargs):
    """
    
    """
    pass


def FBXExportCameras(*args, **kwargs):
    """
    
    """
    pass


def ToggleSceneTimecode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MergeVerticesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleFullScreenMode(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewFront(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def addIK2BsolverCallbacks(*args, **kwargs):
    """
    
    """
    pass


def AddPondBoatLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def texTweakUVContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, position=None, p=None, tolerance=None, t=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a texture editor move manip context. Note that the above flags control the global behaviour of all texture editor move manip contexts.Changing one context independently is not allowed.Changing a context's behaviour using the above flags, will change all existing texture editor move manip contexts. 
    """
    pass


def ShowCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createNurbsSquareCtx(*args, **kwargs):
    """
    
    """
    pass


def MatchUVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVIsolateLoadSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyStraightenUVBorder(blendOriginal=None, bo=None, curvature=None, c=None, gapTolerance=None, gt=None, preserveLength=None, pl=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Move border UVs along a simple curve.
    """
    pass


def TexSculptActivateBrushSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectMaskToolMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVCylindricProjectionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSConeOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttrSkinPaintCmd(*args, **kwargs):
    """
    
    """
    pass


def ConvertSelectionToFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorSetTraversalDepthUnlim(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScriptEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GameExporterWnd(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OptimizeScene(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SubdivSmoothnessMedium(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceEditingToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeConvertPSDToLayeredTexture(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OffsetCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphSnap(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def deltaMush(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, deformerTools=None, dt=None, envelope=None, en=None, exclusive=None, ex=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, name=None, n=None, parallel=None, par=None, pinBorderVertices=None, pbv=None, prune=None, pr=None, remove=None, rm=None, smoothingIterations=None, si=None, smoothingStep=None, ss=None, split=None, sp=None, *args, **kwargs):
    """
    This command is used to create, edit and query deltaMush nodes. 
    """
    pass


def SelectUnmappedFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SymmetrizeUVContext(*args, **kwargs):
    """
    
    """
    pass


def CreatePassiveRigidBodyOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_outlinerTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllRigidBodies(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectObjectsShadowedByLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_targetWeldTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteFBIKSelectedKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShadingGroupAttributeEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SoftModDeformerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def imageWindowEditor(*args, **kwargs):
    """
    
    """
    pass


def DisableConstraints(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkUpSelect(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def checkDefaultRenderGlobals(*args, **kwargs):
    """
    To query whether or not the defaultRenderGlobals node has been modified since the last file save, use `ls -modified`. To force the scene to be dirty/clean use `file -modified`
    """
    pass


def HideUnselectedObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GreasePencilTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeDraggerToolActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleSplineBind(*args, **kwargs):
    """
    
    """
    pass


def TimeEditorToggleSnapToClipRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arclen(constructionHistory=None, ch=None, *args, **kwargs):
    """
    This command returns the arclength of a curve if the history flag is not set (the default).If the history flag is set, a node is created that can produce the arclength, and is connected and its name returned.Having the construction history option on makes this command useful for expressions. 
    """
    pass


def dimWhen(clear=None, c=None, false=None, f=None, true=None, t=None, *args, **kwargs):
    """
    This method attaches the named UI object (first argument) to the named condition (second argument) so that the object will be dimmed when the condition is in a particular state. 
    """
    pass


def DeleteMotionPaths(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyUniteSkinned(centerPivot=None, cp=None, constructionHistory=None, ch=None, mergeUVSets=None, muv=None, objectPivot=None, op=None, *args, **kwargs):
    """
    Command to combine poly mesh objects (as polyUnite) while retaining the smooth skinning setup on the combined object.
    """
    pass


def polyMapDel(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Deletes texture coordinates (UVs) from selected faces.
    """
    pass


def swatchDisplayPort(annotation=None, ann=None, backgroundColor=None, bgc=None, borderColor=None, bc=None, borderWidth=None, bw=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, pressCommand=None, pc=None, preventOverride=None, po=None, renderPriority=None, rp=None, renderSize=None, rs=None, shadingNode=None, sn=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    This command creates a 3dPort that displays a swatch representing the shading node. 
    """
    pass


def particleFill(closePacking=None, cp=None, doubleWalled=None, dw=None, maxX=None, mxx=None, maxY=None, mxy=None, maxZ=None, mxz=None, minX=None, mnx=None, minY=None, mny=None, minZ=None, mnz=None, particleDensity=None, pd=None, resolution=None, rs=None, *args, **kwargs):
    """
    This command generates an nParticle system that fills the selected object with a grid of particles.
    """
    pass


def SnapKeys(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyOptUvs(applyToShell=None, applyToShell=None, areaWeight=None, aw=None, globalBlend=None, gb=None, globalMethodBlend=None, gmb=None, iterations=None, i=None, optimizeAxis=None, oa=None, pinSelected=None, ps=None, pinUvBorder=None, pub=None, scale=None, s=None, stoppingThreshold=None, ss=None, useScale=None, us=None, uvSetName=None, uvs=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Optimizes selected UVs.
    """
    pass


def arnoldTemperatureToColor(*args, **kwargs):
    """
    
    """
    pass


def ShowAllEditedComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDeleteAllShadingGroupsAndMaterials(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CommandWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Uniform(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateFlexorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnparentOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UntrimSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def snapshotBeadContext(*args, **kwargs):
    """
    
    """
    pass


def UVEditorInvertPin(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyUVRectangle(caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Given two vertices, does one of the following: 1) If the vertices define opposite corners of a rectangular area of quads, assigns a grid of UVs spanning the 0-1 area to that rectangle. 2) If the vertices define an edge in a rectangular and topologically cylindrical area of quads, assigns UVs spanning the 0-1 area to that cylindrical patch, using the defined edge as the U=0 edge.
    """
    pass


def keyframeRegionTrackCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command can be used to create a track context for the dope sheet editor. 
    """
    pass


def PaintEffectsToNurbsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateEmptyGroup(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createPolyCylinderCtx(*args, **kwargs):
    """
    
    """
    pass


def dR_curveSnapRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportMode(*args, **kwargs):
    """
    
    """
    pass


def FBXGetTakeReferenceTimeSpan(*args, **kwargs):
    """
    
    """
    pass


def nexOpt(*args, **kwargs):
    """
    
    """
    pass


def polyCacheMonitor(cacheValue=None, chv=None, nodeName=None, nm=None, *args, **kwargs):
    """
    When the cacheInput attribute has a positive value the midModifier node caches the output mesh improving performance in computations of downstream nodes. When the counter has a zero value the midModifier releases the cached data.
    """
    pass


def VolumeAxis(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RotateToolWithSnapMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BreakTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePolyDisplayLimitToSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeToggleShowNamespace(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UncreaseSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AnimationTurntableOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RemoveShrinkWrapSurfaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_viewRight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideIntermediateObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicExportAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportDeleteOriginalTakeOnSplitAnimation(*args, **kwargs):
    """
    
    """
    pass


def dR_multiCutPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorClipTrimToggle(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllInput(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderViewPrevImage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeletePolyElements(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def exclusiveLightCheckBox(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, light=None, lt=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a checkBox that controls a light's exclusive non-exclusive status.An exclusive light is one that is not hooked up to the default-light-list, thus it does not illuminate all objects be default.However an exclusive light can be linked to an object. 
    """
    pass


def PlayblastOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCVs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportEmbeddedTextures(*args, **kwargs):
    """
    
    """
    pass


def DuplicateCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeDeleteNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidAppend(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setNClothStartState(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TrimToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshKnifeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleColorFeedback(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateTextOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSubdDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorSoloSelectedTracks(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidReplaceCache(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def debugNamespace(*args, **kwargs):
    """
    
    """
    pass


def CreateActiveRigidBody(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleHulls(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachToPathOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetHIKNodeName(*args, **kwargs):
    """
    
    """
    pass


def JointTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeMotorBoats(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickWalkDownSelect(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def normalConstraint(aimVector=None, aim=None, layer=None, l=None, name=None, n=None, remove=None, rm=None, targetList=None, tl=None, upVector=None, u=None, weight=None, w=None, weightAliasList=None, wal=None, worldUpObject=None, wuo=None, worldUpType=None, wut=None, worldUpVector=None, wu=None, *args, **kwargs):
    """
    Constrain an object's orientation based on the normal of the target surface(s) at the closest point(s) to the object. 
    """
    pass


def DeleteAllStrokes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllHistory(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def baseTemplate(exists=None, ex=None, fileName=None, fn=None, force=None, f=None, load=None, l=None, matchFile=None, mf=None, silent=None, si=None, unload=None, u=None, viewList=None, vl=None, *args, **kwargs):
    """
    This is the class for the commands that edit and/or query templates.
    """
    pass


def HideCameras(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleUseAssetsAndPublishedAttributes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleSymmetryDisplay(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setKeyframe(animLayer=None, al=None, animated=None, an=None, attribute=None, at=None, breakdown=None, bd=None, clip=None, c=None, controlPoints=None, cp=None, dirtyDG=None, dd=None, float=None, f=None, hierarchy=None, hi=None, identity=None, id=None, inTangentType=None, itt=None, insert=None, i=None, insertBlend=None, ib=None, minimizeRotation=None, mr=None, noResolve=None, nr=None, outTangentType=None, ott=None, respectKeyable=None, rk=None, shape=None, s=None, time=None, t=None, useCurrentLockedWeights=None, lw=None, value=None, v=None, *args, **kwargs):
    """
    This command creates keyframes for the specified objects, or the active objects if none are specified on the command line. 
    """
    pass


def ToggleHikDetails(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreatePolygonPlaneOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InTangentSpline(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectUVBackFacingComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyRemoveCrease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hardenPointCurve(multiplicity=None, m=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The hardenPointCurve command changes the knots of a curve given a list of control point indices so that the knot corresponding to that control point gets the specified multiplicity.Multiplicity of -1 is the universal value used for multiplicity equal to the degree of the curve.
    """
    pass


def AbcImport(*args, **kwargs):
    """
    
    """
    pass


def stackTrace(*args, **kwargs):
    """
    
    """
    pass


def createPolyConeCtx(*args, **kwargs):
    """
    
    """
    pass


def LODGenerateMeshesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def selLoadSettings(activeProxy=None, ap=None, deferReference=None, dr=None, fileName=None, fn=None, numSettings=None, ns=None, proxyManager=None, pm=None, proxySetFiles=None, psf=None, proxySetTags=None, pst=None, proxyTag=None, pt=None, referenceNode=None, rfn=None, shortName=None, shn=None, unresolvedName=None, un=None, *args, **kwargs):
    """
    This command is used to edit and query information about the implicit load settings. Currently this is primarily intended for internal use within the Preload Reference Editor. selLoadSettings acts on load setting IDs. When implict load settings are built for a target scene, there will be one load setting for each reference in the target scene. Each load setting has a numerical ID which is its index in a pre-order traversal of the target reference hierarchy (with the root scenefile being assigned an ID of 0). Although the IDs are numerical they must be passed to the command as string array. Example: Given the scene: 
    """
    pass


def CompleteCurrentTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ProfilerTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nucleusDisplayOtherNodes(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def BevelPolygonOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def isDirty(connection=None, c=None, datablock=None, d=None, *args, **kwargs):
    """
    The 
    """
    pass


def meshRemap(*args, **kwargs):
    """
    
    """
    pass


def dR_activeHandleXY(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_activeHandleXZ(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCharacterControls(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def lattice(after=None, af=None, afterReference=None, ar=None, before=None, bf=None, commonParent=None, cp=None, deformerTools=None, dt=None, divisions=None, dv=None, dualBase=None, db=None, exclusive=None, ex=None, freezeMapping=None, fm=None, frontOfChain=None, foc=None, geometry=None, g=None, geometryIndices=None, gi=None, ignoreSelected=None, ignoreSelected=None, includeHiddenSelections=None, ihs=None, latticeReset=None, lr=None, ldivisions=None, ldv=None, name=None, n=None, objectCentered=None, oc=None, outsideFalloffDistance=None, ofd=None, outsideLattice=None, ol=None, parallel=None, par=None, position=None, pos=None, prune=None, pr=None, remove=None, rm=None, removeTweaks=None, rt=None, rotation=None, ro=None, scale=None, s=None, split=None, sp=None, *args, **kwargs):
    """
    This command creates a lattice deformer that will deform the selected objects. If the object centered flag is used, the initial lattice will fit around the selected objects. The lattice will be selected when the command is completed. The lattice deformer has an associated base lattice. Only objects which are contained by the base lattice will be deformed by the lattice. 
    """
    pass


def pointCurveConstraint(pointConstraintUVW=None, puv=None, pointWeight=None, pw=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, position=None, p=None, weight=None, w=None, *args, **kwargs):
    """
    The command enables direct manipulation of a NURBS curve. It does so by apply a position constraint at the specified parameter location on the NURBS curve. 
    """
    pass


def createSubdivRegion(*args, **kwargs):
    """
    Creates a subdivision surface region based on the selection list. Once a selection region is created, only the components in the selection list or converted from the selection list will be displayed and selectible through the UI.
    """
    pass


def hotkeyCheck(altModifier=None, alt=None, commandModifier=None, cmd=None, ctrlModifier=None, ctl=None, keyString=None, k=None, keyUp=None, kup=None, optionModifier=None, opt=None, *args, **kwargs):
    """
    This command checks if the given hotkey is mapped to a nameCommand object.If so, the annotation of the nameCommand object is returned. Otherwise an empty string is returned. 
    """
    pass


def moduleInfo(definition=None, d=None, listModules=None, lm=None, moduleName=None, mn=None, path=None, p=None, version=None, v=None, *args, **kwargs):
    """
    Returns information on modules found by Maya.
    """
    pass


def whatsNewHighlight(highlightColor=None, hc=None, highlightOn=None, ho=None, showStartupDialog=None, ssd=None, *args, **kwargs):
    """
    This command is used to toggle the What's New highlighting feature, and the display of the settings dialog for the feature that appears on startup. 
    """
    pass


def ShowStrokePathCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NextViewArrangement(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCommandLine(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyFlipEdge(*args, **kwargs):
    """
    Command to flip the edges shared by 2 adjacent triangles. When used with the edit flag, new edges can be added to the same node, instead of creating a separate node in the chain.
    """
    pass


def ToggleVertIDs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplacementToPolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UVStraighten(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def filePathEditor(attributeOnly=None, ao=None, attributeType=None, at=None, byType=None, bt=None, copyAndRepath=None, cr=None, deregisterType=None, dt=None, force=None, f=None, listDirectories=None, ld=None, listFiles=None, lf=None, listRegisteredTypes=None, lrt=None, preview=None, p=None, recursive=None, rc=None, refresh=None, rf=None, registerType=None, rt=None, relativeNames=None, rel=None, repath=None, r=None, replaceAll=None, ra=None, replaceField=None, rfd=None, replaceString=None, rs=None, status=None, s=None, temporary=None, tmp=None, typeLabel=None, tl=None, unresolved=None, u=None, withAttribute=None, wa=None, *args, **kwargs):
    """
    
    """
    pass


def DisableExpressions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def shadingNode(asLight=None, al=None, asPostProcess=None, app=None, asRendering=None, ar=None, asShader=None, asShader=None, asTexture=None, at=None, asUtility=None, au=None, isColorManaged=None, icm=None, name=None, n=None, parent=None, p=None, shared=None, s=None, skipSelect=None, ss=None, *args, **kwargs):
    """
    This command creates a new node in the dependency graph of the specified type. 
    """
    pass


def SendAsNewSceneMudbox(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_SetGlobalTextureWidth(*args, **kwargs):
    """
    
    """
    pass


def MakePaintable(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteCurrentUVSet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polyPlane(axis=None, ax=None, createUVs=None, cuv=None, height=None, h=None, subdivisionsX=None, sx=None, subdivisionsY=None, sy=None, texture=None, tx=None, width=None, w=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The mesh command creates a new polygonal plane. 
    """
    pass


def xgmDensityBrushContext(*args, **kwargs):
    """
    
    """
    pass


def texturePlacementContext(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, labelMapping=None, lm=None, name=None, n=None, *args, **kwargs):
    """
    Create a command for creating new texture placement contexts. By default label mapping is on when the context is created. 
    """
    pass


def floatField(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dragCommand=None, dc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, enterCommand=None, ec=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, precision=None, pre=None, preventOverride=None, po=None, receiveFocusCommand=None, rfc=None, showTrailingZeros=None, tze=None, step=None, s=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Create a field control that accepts only float values and is bound by a minimum and maximum value.An invisible slider is attached to the field and accessed by holding down the Ctrl modifier key while pressing one of the mouse buttons.Dragging the invisible slider to the right with the middle mouse button increases the field value by the amount specified with the 
    """
    pass


def dR_multiCutSlicePointCmd(*args, **kwargs):
    """
    
    """
    pass


def CustomNURBSComponentsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSortByType(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GridUV(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetGlobalTextureWidth(*args, **kwargs):
    """
    
    """
    pass


def SimplifyStrokePathCurves(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectCurveCVsAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectPolygonSelectionBoundary(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FrontPerspViewLayout(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySewEdge(texture=None, tx=None, tolerance=None, t=None, worldSpace=None, ws=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Merge border edges within a given threshold.
    """
    pass


def EnableNRigids(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def renderLayerPostProcess(keepImages=None, ki=None, sceneName=None, sn=None, *args, **kwargs):
    """
    Post process the results when rendering is done with. Presently this generates a layered PSD file using individual iff files.
    """
    pass


def polyPrimitive(axis=None, ax=None, polyType=None, pt=None, radius=None, r=None, sideLength=None, l=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    Create a polygon primative 
    """
    pass


def HypershadeDisplayAsList(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def textCurves(font=None, f=None, name=None, n=None, object=None, o=None, text=None, t=None, *args, **kwargs):
    """
    The textCurves command creates NURBS curves from a text string using the specified font. 
    """
    pass


def textureLassoContext(*args, **kwargs):
    """
    
    """
    pass


def vortex(attenuation=None, att=None, axisX=None, ax=None, axisY=None, ay=None, axisZ=None, az=None, magnitude=None, m=None, maxDistance=None, mxd=None, name=None, n=None, perVertex=None, pv=None, position=None, pos=None, *args, **kwargs):
    """
    A vortex field pulls objects in a circular direction, like a whirlpool or tornado.Objects affected by the vortex field tend to rotate around the axis specified by -ax, -ay, and -az. 
    """
    pass


def TransformPolygonComponentOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeGraphRemoveDownstream(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikSolver(epsilon=None, ep=None, maxIterations=None, mxi=None, name=None, n=None, solverType=None, st=None, *args, **kwargs):
    """
    The ikSolver command is used to set the attributes for an IK Solver or create a new one. The standard edit (-e) and query (-q) flags are used for edit and query functions. 
    """
    pass


def CreateDirectionalLight(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def fluidCacheInfo(attribute=None, at=None, cacheTime=None, t=None, endFrame=None, ef=None, hasCache=None, hc=None, hasData=None, hd=None, initialConditions=None, ic=None, playback=None, pb=None, resolution=None, re=None, startFrame=None, sf=None, *args, **kwargs):
    """
    A command to get information about the fluids cache. Get the startFrame and resolution for InitialConditions. Get the endFrame as well for a playback cache. Note that for the playback cache, it will look at the current time (or last frame if the current time is past end of cache)
    """
    pass


def soft(convert=None, c=None, duplicate=None, d=None, duplicateHistory=None, dh=None, goal=None, g=None, hideOriginal=None, h=None, name=None, n=None, *args, **kwargs):
    """
    Makes a soft body from the object(s) passed on the command line or in the selection list.The geometry can be a NURBS, polygonal, lattice object.The resulting soft body is made up of a hierarchy with a particle shape and a geometry shape, thus: 
    """
    pass


def reloadImage(*args, **kwargs):
    """
    This command reloads an xpm image from disk. This can be used when the file has changed on disk and needs to be reloaded. 
    """
    pass


def Quit(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMaxInfluences(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AssignTemplate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateSubdivCube(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def transferShadingSets(sampleSpace=None, spa=None, searchMethod=None, sm=None, *args, **kwargs):
    """
    Command to transfer shading set assignments between meshes. The last mesh in the list receives the shading assignments from the other meshes.
    """
    pass


def tumble(azimuthAngle=None, aa=None, elevationAngle=None, ea=None, localTumble=None, lt=None, pivotPoint=None, pp=None, rotationAngles=None, ra=None, *args, **kwargs):
    """
    The tumble command revolves the camera(s) by varying the azimuth and elevation angles in the perspective window. When both the azimuth and the elevation angles are supplied on the command line, the camera is firstly tumbled for the azimuth angle, then tumbled for the elevation angle. 
    """
    pass


def dispatchGenericCommand(*args, **kwargs):
    """
    unknown
    """
    pass


def workspaceControlState(defaultTopLeftCorner=None, dc=None, defaultWidthHeight=None, dwh=None, exists=None, ex=None, height=None, h=None, leftEdge=None, le=None, maximized=None, max=None, remove=None, r=None, topEdge=None, te=None, topLeftCorner=None, tlc=None, width=None, w=None, widthHeight=None, wh=None, *args, **kwargs):
    """
    Create or modify preferred window attributes for workspace controls. The size and position of a workspace control is retained during application sessions (although position only applies to workspace controls that are alone in a floating workspace docking panel). A default workspace control state is created when a workspace control is closed. Workspace control states must be named and, consequently, only affect the workspace control with a matching name. 
    """
    pass


def bezierAnchorPreset(preset=None, p=None, *args, **kwargs):
    """
    This command provides a queryable interface for Bezier curve shapes. 
    """
    pass


def NodeEditorToggleLockUnlock(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_softSelStickyRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShrinkPolygonSelectionRegion(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arnoldPlugins(*args, **kwargs):
    """
    
    """
    pass


def AlembicOpen(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bezierInfo(anchorFromCV=None, afc=None, cvFromAnchor=None, cfa=None, isAnchorSelected=None, ias=None, isTangentSelected=None, its=None, onlyAnchorsSelected=None, oas=None, onlyTangentsSelected=None, ots=None, *args, **kwargs):
    """
    This command provides a queryable interface for Bezier curve shapes. 
    """
    pass


def dR_customPivotTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AppendToPolygonTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableRigidBodies(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateNURBSCone(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sceneEditor(control=None, ctl=None, defineTemplate=None, dt=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, mainListConnection=None, mlc=None, onlyParents=None, op=None, panel=None, pnl=None, parent=None, p=None, refreshReferences=None, rr=None, selectCommand=None, sc=None, selectItem=None, si=None, selectReference=None, sr=None, selectionConnection=None, slc=None, shortName=None, shn=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, unresolvedName=None, un=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, withoutCopyNumber=None, wcn=None, *args, **kwargs):
    """
    This creates an editor for managing the files in a scene.
    """
    pass


def RenderTextureRange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def insertListItemBefore(*args, **kwargs):
    """
    
    """
    pass


def NodeEditorGraphRearrange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MoveIKtoFK(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GamePipeline(*args, **kwargs):
    """
    
    """
    pass


def CreatePolygonCylinder(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshPinchTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorAddIterationStatePorts(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def attrCompatibility(addAttr=None, a=None, clear=None, clr=None, dumpTable=None, dmp=None, enable=None, e=None, nodeRename=None, nr=None, pluginNode=None, pn=None, removeAttr=None, rm=None, renameAttr=None, r=None, type=None, typ=None, version=None, v=None, *args, **kwargs):
    """
    This command is used by Maya to handle compatibility issues between file format versions by providing a mechanism to describe differences between two versions.Plug-in writers can make use of this command to handle attribute compatibility changes to files.
    """
    pass


def timeEditor(allClips=None, alc=None, clipId=None, id=None, commonParentTrack=None, cpt=None, composition=None, cp=None, drivingClipsForAttr=None, dca=None, drivingClipsForObj=None, dco=None, includeParent=None, ip=None, mute=None, m=None, selectedClips=None, sc=None, topLevelClips=None, tlc=None, *args, **kwargs):
    """
    General Time Editor commands
    """
    pass


def ParticleInstancerOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PerformanceSettingsWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def smoothTangentSurface(direction=None, d=None, parameter=None, p=None, smoothness=None, s=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The smoothTangentSurface command smooths the surface along an isoparm at each parameter value. The name of the surface is returned and if history is on, the name of the resulting dependency node is also returned. This command only applies to parameter values with a multiple knot value. (If the given parameter value has no multiple knot associated with it, then the dependency node is created but the surface doesn't change.) 
    """
    pass


def SetFullBodyIKKeysSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonCollapseFaces(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheCreateOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheExport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetEditor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRestoreLastClosedTab(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HIKSetFullBodyKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyBrushMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def baseView(itemInfo=None, ii=None, itemList=None, il=None, viewDescription=None, vd=None, viewLabel=None, vb=None, viewList=None, vl=None, viewName=None, vn=None, *args, **kwargs):
    """
    A view defines the layout information for the attributes of a particular node type or container.Views can be selected from a set of built-in views or may be defined on an associated container template. This command queries the view-related information for a container node or for a given template.The information returned from this command will be based on the view-related settings in force on the container node at the time of the query (i.e. the container's view mode, template name, view name attributes), when applicable.
    """
    pass


def ProjectTangentOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RoundToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorSetSmallNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolygonPaste(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def nurbsToSubdivPref(bridge=None, br=None, capType=None, ct=None, collapsePoles=None, cp=None, matchPeriodic=None, mp=None, maxPolyCount=None, mpc=None, offset=None, o=None, reverseNormal=None, rn=None, solidType=None, st=None, trans00=None, t00=None, trans01=None, t01=None, trans02=None, t02=None, trans10=None, t10=None, trans11=None, t11=None, trans12=None, t12=None, trans20=None, t20=None, trans21=None, t21=None, trans22=None, t22=None, trans30=None, t30=None, trans31=None, t31=None, trans32=None, t32=None, *args, **kwargs):
    """
    This command sets the values used by the nurbs-to-subdivision surface preference.This preference is used by the nurbs creation commands and is saved between Maya sessions. 
    """
    pass


def audioTrack(insertTrack=None, it=None, lock=None, l=None, mute=None, m=None, numTracks=None, nt=None, removeEmptyTracks=None, ret=None, removeTrack=None, rt=None, solo=None, so=None, swapTracks=None, st=None, title=None, t=None, track=None, tr=None, *args, **kwargs):
    """
    This command is used for inserting and removing tracks related to the audio clips displayed in the sequencer. It can also be used to modify the track state, for example, to lock or mute a track.
    """
    pass


def imfPlugins(extension=None, ext=None, keyword=None, key=None, multiFrameSupport=None, mfs=None, pluginName=None, pn=None, readSupport=None, rs=None, writeSupport=None, ws=None, *args, **kwargs):
    """
    This command queries all the available imf plugins for its name, keyword or image file extension. Only one of the attributes (name, keyword or extension) can be queried at a time. If no flags are specified, this command returns a list of all available plugin names.
    """
    pass


def UnitizeUVsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def polySmooth(continuity=None, c=None, divisions=None, dv=None, keepBorder=None, kb=None, keepHardEdge=None, khe=None, keepSelectionBorder=None, ksb=None, keepTessellation=None, kt=None, osdCreaseMethod=None, ocr=None, osdFvarBoundary=None, ofb=None, osdFvarPropagateCorners=None, ofc=None, osdSmoothTriangles=None, ost=None, osdVertBoundary=None, ovb=None, propagateEdgeHardness=None, peh=None, subdivisionType=None, sdt=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Smooth a polygonal object. This command works on polygonal objects or faces. 
    """
    pass


def progressBar(annotation=None, ann=None, backgroundColor=None, bgc=None, beginProgress=None, bp=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, endProgress=None, ep=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isCancelled=None, ic=None, isInterruptable=None, ii=None, isMainProgressBar=None, imp=None, isObscured=None, io=None, manage=None, m=None, maxValue=None, max=None, minValue=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, progress=None, pr=None, status=None, st=None, step=None, s=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    Creates a progress bar control that graphically fills in as its progress value increases.
    """
    pass


def FrameSelectedWithoutChildren(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getModifiers(*args, **kwargs):
    """
    This command returns the current state of the modifier keys. The state of each modifier can be obtained by testing for the modifier's corresponding bit value in the return value. Shift is bit 1, Ctrl is bit 3, Alt is bit 4, and bit 5 is the 'Windows' key on Windows keyboards and the Command key on Mac keyboards.See the provided example for more details on testing for each modifier's bit value. 
    """
    pass


def texRotateContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, position=None, p=None, snap=None, s=None, snapRelative=None, sr=None, snapValue=None, sv=None, *args, **kwargs):
    """
    This command can be used to create, edit, or query a rotate context for the UV Editor. Note that the above flag controls the global behaviour of all texture editor rotate contexts.Changing one context independently is not allowed.Changing a context's behaviour using the above flag, will change all existing texture editor rotate contexts. 
    """
    pass


def GpuCacheImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ConvertToBreakdown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WhatsNewStartupDialogOn(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSetFreezeBrushToolOption(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def viewLookAt(position=None, pos=None, *args, **kwargs):
    """
    The viewLookAt command positions the specified camera so it is looking at the centroid of all selected objects. If no objects are specified the camera will look at the ground plane. 
    """
    pass


def scriptTable(afterCellChangedCmd=None, acc=None, annotation=None, ann=None, backgroundColor=None, bgc=None, cellBackgroundColorCommand=None, cbc=None, cellChangedCmd=None, ccc=None, cellForegroundColorCommand=None, cfc=None, cellIndex=None, ci=None, cellValue=None, cv=None, clearRow=None, cr=None, clearTable=None, ct=None, columnFilter=None, cf=None, columnWidth=None, cw=None, columns=None, c=None, defineTemplate=None, dt=None, deleteRow=None, dr=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, editable=None, ed=None, enable=None, en=None, enableBackground=None, ebg=None, excludingHeaders=None, eh=None, exists=None, ex=None, fullPathName=None, fpn=None, getCellCmd=None, gcc=None, height=None, h=None, highlightColor=None, hlc=None, insertRow=None, ir=None, isObscured=None, io=None, label=None, l=None, manage=None, m=None, multiEditEnabled=None, mee=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, rowHeight=None, rh=None, rows=None, r=None, rowsRemovedCmd=None, rrc=None, rowsToBeRemovedCmd=None, rtc=None, selectedCells=None, sc=None, selectedColumns=None, scs=None, selectedRow=None, sr=None, selectedRows=None, srs=None, selectionBehavior=None, sb=None, selectionChangedCmd=None, scc=None, selectionMode=None, sm=None, sortEnabled=None, se=None, underPointerColumn=None, upc=None, underPointerRow=None, upr=None, useDoubleClickEdit=None, udc=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries the script table control.
    """
    pass


def dR_decreaseManipSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetToFaceNormals(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ChamferVertex(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def about(apiVersion=None, api=None, application=None, a=None, batch=None, b=None, buildDirectory=None, bd=None, buildVariant=None, bv=None, codeset=None, cs=None, compositingManager=None, cm=None, connected=None, cnt=None, ctime=None, cti=None, currentDate=None, cd=None, currentTime=None, ct=None, cutIdentifier=None, c=None, date=None, d=None, environmentFile=None, env=None, evalVersion=None, ev=None, file=None, f=None, fontInfo=None, foi=None, helpDataDirectory=None, hdd=None, installedVersion=None, iv=None, irix=None, ir=None, is64=None, x64=None, languageResources=None, lr=None, linux=None, li=None, linux64=None, l64=None, liveUpdate=None, lu=None, localizedResourceLocation=None, lrl=None, ltVersion=None, lt=None, macOS=None, mac=None, macOSppc=None, ppc=None, macOSx86=None, x86=None, ntOS=None, nt=None, operatingSystem=None, os=None, operatingSystemVersion=None, osv=None, preferences=None, pd=None, product=None, p=None, qtVersion=None, qt=None, tablet=None, tab=None, tabletMode=None, tm=None, uiLanguage=None, uil=None, uiLanguageForStartup=None, uis=None, uiLanguageIsLocalized=None, uii=None, uiLocaleLanguage=None, ull=None, version=None, v=None, win64=None, w64=None, windowManager=None, wm=None, windows=None, win=None, *args, **kwargs):
    """
    This command displays version information about the application if it is executed without flags.If one of the above flags is specified then the specified version information is returned. 
    """
    pass


def curveEPCtx(degree=None, d=None, exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, uniform=None, un=None, *args, **kwargs):
    """
    The curveEPCtx command creates a new context for creating curves by placing edit points. 
    """
    pass


def selectType(allComponents=None, alc=None, allObjects=None, alo=None, animBreakdown=None, abd=None, animCurve=None, ac=None, animInTangent=None, ait=None, animKeyframe=None, ak=None, animOutTangent=None, aot=None, byName=None, bn=None, camera=None, ca=None, cluster=None, cl=None, collisionModel=None, clm=None, controlVertex=None, cv=None, curve=None, c=None, curveKnot=None, ck=None, curveOnSurface=None, cos=None, curveParameterPoint=None, cpp=None, dimension=None, dim=None, dynamicConstraint=None, dc=None, edge=None, eg=None, editPoint=None, ep=None, emitter=None, em=None, facet=None, fc=None, field=None, fi=None, fluid=None, fl=None, follicle=None, fo=None, hairSystem=None, hs=None, handle=None, ha=None, hull=None, hl=None, ikEndEffector=None, iee=None, ikHandle=None, ikh=None, imagePlane=None, ip=None, implicitGeometry=None, ig=None, isoparm=None, iso=None, joint=None, j=None, jointPivot=None, jp=None, lattice=None, la=None, latticePoint=None, lp=None, light=None, lt=None, localRotationAxis=None, ra=None, locator=None, lc=None, locatorUV=None, luv=None, locatorXYZ=None, xyz=None, meshUVShell=None, msh=None, motionTrailPoint=None, mtp=None, motionTrailTangent=None, mtt=None, nCloth=None, ncl=None, nParticle=None, npr=None, nParticleShape=None, nps=None, nRigid=None, nr=None, nonlinear=None, nl=None, nurbsCurve=None, nc=None, nurbsSurface=None, ns=None, objectComponent=None, ocm=None, orientationLocator=None, ol=None, particle=None, pr=None, particleShape=None, ps=None, plane=None, pl=None, polymesh=None, p=None, polymeshEdge=None, pe=None, polymeshFace=None, pf=None, polymeshFreeEdge=None, pfe=None, polymeshUV=None, puv=None, polymeshVertex=None, pv=None, polymeshVtxFace=None, pvf=None, queryByName=None, qbn=None, rigidBody=None, rb=None, rigidConstraint=None, rc=None, rotatePivot=None, rp=None, scalePivot=None, sp=None, sculpt=None, sc=None, selectHandle=None, sh=None, spring=None, spr=None, springComponent=None, spc=None, stroke=None, str=None, subdiv=None, sd=None, subdivMeshEdge=None, sme=None, subdivMeshFace=None, smf=None, subdivMeshPoint=None, smp=None, subdivMeshUV=None, smu=None, surfaceEdge=None, se=None, surfaceFace=None, sf=None, surfaceKnot=None, sk=None, surfaceParameterPoint=None, spp=None, surfaceRange=None, sr=None, surfaceUV=None, suv=None, texture=None, tx=None, vertex=None, v=None, *args, **kwargs):
    """
    The 
    """
    pass


def ShowResultsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorFrameCenterView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshCloneTargetTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleCustomNURBSComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RenderDiagnostics(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_defLightTGL(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSetLargeNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ResolveInterpenetrationOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def WedgePolygon(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AttachCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXGetTakeLocalTimeSpan(*args, **kwargs):
    """
    
    """
    pass


def colorIndex(hueSaturationValue=None, hsv=None, resetToFactory=None, rf=None, resetToSaved=None, rs=None, *args, **kwargs):
    """
    The index specifies a color index in the color palette. The r, g, and b values (between 0-1) specify the RGB values (or the HSV values if the -hsv flag is used) for the color. 
    """
    pass


def NURBSSmoothnessMediumOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ExtendSurfacesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HideSculptObjects(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TangetConstraintOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_SetGlobalTextureHeight(*args, **kwargs):
    """
    
    """
    pass


def ToggleUVTextureImage(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshImprintTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def createNurbsConeCtx(*args, **kwargs):
    """
    
    """
    pass


def iconTextScrollList(allowMultiSelection=None, ams=None, annotation=None, ann=None, append=None, a=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, deselectAll=None, da=None, docTag=None, dtg=None, doubleClickCommand=None, dcc=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, dropRectCallback=None, drc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, itemAt=None, ia=None, itemTextColor=None, itc=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, numberOfRows=None, nr=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, removeAll=None, ra=None, selectCommand=None, sc=None, selectIndexedItem=None, sii=None, selectItem=None, si=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, visualRectAt=None, vra=None, width=None, w=None, *args, **kwargs):
    """
    This command creates/edits/queries a text scrolling list. The list can be in single select mode where only one item at at time is selected, or in multi-select mode where many items may be selected. 
    """
    pass


def renderer(addGlobalsNode=None, agn=None, addGlobalsTab=None, agt=None, batchRenderOptionsProcedure=None, bro=None, batchRenderOptionsStringProcedure=None, bso=None, batchRenderProcedure=None, br=None, cancelBatchRenderProcedure=None, cbr=None, changeIprRegionProcedure=None, cir=None, commandRenderProcedure=None, cr=None, exists=None, ex=None, globalsNodes=None, gn=None, globalsTabCreateProcNames=None, gtc=None, globalsTabLabels=None, gtl=None, globalsTabUpdateProcNames=None, gtu=None, iprOptionsMenuLabel=None, ipm=None, iprOptionsProcedure=None, io=None, iprOptionsSubMenuProcedure=None, ips=None, iprRenderProcedure=None, ipr=None, iprRenderSubMenuProcedure=None, irs=None, isRunningIprProcedure=None, isr=None, logoCallbackProcedure=None, lgc=None, logoImageName=None, log=None, materialViewRendererList=None, mvl=None, materialViewRendererPause=None, mvp=None, materialViewRendererSuspend=None, mvs=None, namesOfAvailableRenderers=None, ava=None, pauseIprRenderProcedure=None, psi=None, polyPrelightProcedure=None, pp=None, refreshIprRenderProcedure=None, rfi=None, renderDiagnosticsProcedure=None, rd=None, renderGlobalsProcedure=None, rg=None, renderMenuProcedure=None, rm=None, renderOptionsProcedure=None, ro=None, renderProcedure=None, r=None, renderRegionProcedure=None, rr=None, renderSequenceProcedure=None, rs=None, rendererUIName=None, ui=None, renderingEditorsSubMenuProcedure=None, res=None, showBatchRenderLogProcedure=None, brl=None, showBatchRenderProcedure=None, sbr=None, showRenderLogProcedure=None, srl=None, startIprRenderProcedure=None, sti=None, stopIprRenderProcedure=None, spi=None, textureBakingProcedure=None, tb=None, unregisterRenderer=None, unr=None, *args, **kwargs):
    """
    Command to register renders.This command allows you to specify the UI name and procedure names for renderers. The command also allow you to query the UI name and the procedure names for the registered renders.
    """
    pass


def CreateSetOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisableAll(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleIKAllowRotation(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeMotionField(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectAllOutput(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorPickWalkDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmGeoRender(*args, **kwargs):
    """
    
    """
    pass


def HypershadeDuplicateWithConnections(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PolyMergeVerticesOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def EPCurveTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintFluidsTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetWorkingFrame(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artFluidAttrCtx(accopacity=None, aco=None, autoSave=None, autoSave=None, brushalignment=None, bra=None, brushfeedback=None, brf=None, clear=None, clr=None, currentPaintableFluid=None, cpf=None, delaySelectionChanged=None, dsc=None, displayAsRender=None, dar=None, displayVelocity=None, dv=None, doAutoSave=None, das=None, dragSlider=None, dsl=None, exists=None, ex=None, expandfilename=None, eef=None, exportfilemode=None, efm=None, exportfilesave=None, esf=None, exportfilesizex=None, fsx=None, exportfilesizey=None, fsy=None, exportfiletype=None, eft=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, importfileload=None, ifl=None, importfilemode=None, ifm=None, importreassign=None, irm=None, lowerradius=None, lr=None, mappressure=None, mp=None, name=None, n=None, opacity=None, op=None, outline=None, o=None, outwhilepaint=None, owp=None, paintmode=None, pm=None, profileShapeFile=None, psf=None, projective=None, prm=None, property=None, p=None, radius=None, r=None, reflection=None, rn=None, reflectionaxis=None, ra=None, rgbValue=None, rgb=None, showactive=None, sa=None, stampProfile=None, stP=None, surfaceConformedBrushVertices=None, scv=None, tablet=None, tab=None, tangentOutline=None, to=None, useStrokeDirection=None, usd=None, usepressure=None, up=None, velocity=None, v=None, *args, **kwargs):
    """
    This command is used to paint properties (such as density) of selected fluid volumes. 
    """
    pass


def AddOceanSurfaceLocator(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmSyncPatchVisibility(*args, **kwargs):
    """
    
    """
    pass


def CreaseProxyEdgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def hotkeyMapSet(*args, **kwargs):
    """
    
    """
    pass


def nClothDeleteCacheFramesOpt(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DetachEdgeComponent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CoarsenSelectedComponents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TogglePanZoomRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GetSettingsFromSelectedStroke(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def setNodeTypeFlag(display=None, dsp=None, threadSafe=None, ts=None, *args, **kwargs):
    """
    This command sets static data on the specified node type. This will affect the class of node type as a whole.The argument passed may be the name of the node type or the node type tag.Node type tags may be found using the objectType command. 
    """
    pass


def CreateAmbientLightOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TranslateToolWithSnapMarkingMenu(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SelectBorderEdgeTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeSetSmallNodeSwatchSize(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SurfaceBooleanIntersectToolOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXImportMergeAnimationLayers(*args, **kwargs):
    """
    
    """
    pass


def SelectAllHairSystem(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def cMuscleCache(*args, **kwargs):
    """
    
    """
    pass


def TesselateSubdivSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def arrayMapper(destAttr=None, da=None, inputU=None, iu=None, inputV=None, iv=None, mapTo=None, mt=None, target=None, t=None, type=None, ty=None, *args, **kwargs):
    """
    Create an arrayMapper node and connect it to a target object. If the -type flag is used, then this command also creates an external node used for computing the output values. If the input attribute does not already exist, it will be created. The output attribute must exists. Ifa flag is omitted, the selection list will be used to supply the needed objects. If none are found, that action is omitted. 
    """
    pass


def printStudio(*args, **kwargs):
    """
    
    """
    pass


def imagePlane(camera=None, c=None, counter=None, cn=None, detach=None, d=None, dropFrame=None, df=None, fileName=None, fn=None, frameDuration=None, fd=None, height=None, h=None, imageSize=None, iz=None, lookThrough=None, lt=None, maintainRatio=None, mr=None, name=None, n=None, negTimesOK=None, nt=None, numFrames=None, nf=None, quickTime=None, qt=None, showInAllViews=None, sia=None, timeCode=None, tc=None, timeCodeTrack=None, tt=None, timeScale=None, ts=None, twentyFourHourMax=None, tf=None, width=None, w=None, *args, **kwargs):
    """
    The imagePlane command allows querying of various properties ofan image plane and any movie in use by the image plane. It also supportscreating and edit.The object passed to the command may either be an imagePlane node,or a camera, in which case the command uses the image plane attachedto the camera (if any). If no object is passed in, the currentselection is used.Currently, most movie related queries work only on 64 bit Windows systems.
    """
    pass


def DeleteAllWires(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ScaleCurvature(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def MakeUVInstanceCurrent(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleOriginAxis(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FBXExportHardEdges(*args, **kwargs):
    """
    
    """
    pass


def alignCurve(curvatureContinuity=None, cc=None, curvatureScale1=None, cs1=None, curvatureScale2=None, cs2=None, joinParameter=None, jnp=None, positionalContinuity=None, pc=None, positionalContinuityType=None, pct=None, reverse1=None, rv1=None, reverse2=None, rv2=None, tangentContinuity=None, tc=None, tangentContinuityType=None, tct=None, tangentScale1=None, ts1=None, tangentScale2=None, ts2=None, constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, replaceOriginal=None, rpo=None, caching=None, cch=None, nodeState=None, nds=None, *args, **kwargs):
    """
    The curve align command is used to align curves in maya. The main alignment options are positional, tangent and curvature continuity. Curvature continuity implies tangent continuity. 
    """
    pass


def editRenderLayerGlobals(baseId=None, bi=None, currentRenderLayer=None, crl=None, enableAutoAdjustments=None, eaa=None, mergeType=None, mt=None, useCurrent=None, uc=None, *args, **kwargs):
    """
    Edit the parameter values common to all render layers.Some of these paremeters, eg. baseId and mergeType, are stored as preferences and some, eg. currentRenderLayer, are stored in the file.
    """
    pass


def xgmClumpMap(*args, **kwargs):
    """
    
    """
    pass


def GraphEditorFrameSelected(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PaintVertexColorTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def AlembicImport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PickColorActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Twist(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def artAttr(*args, **kwargs):
    """
    
    """
    pass


def CreatePartitionOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeOpenGraphEditorWindow(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def OffsetCurveOnSurface(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetPassiveKey(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def NodeEditorToggleSyncedSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ShowFollicles(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllLights(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetFullBodyIKKeysOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def FilletBlendTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorRippleEditToggleRelease(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineCacheDelete(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateUVsBasedOnCameraOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeCollapseAsset(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def XgmSplineGeometryConvert(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_extrudeBevelPress(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def Snap3PointsTo3PointsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def InsertKeyToolDeactivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def TimeEditorExportSelection(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def manipOptions(forceRefresh=None, fr=None, handleSize=None, hs=None, hideManipOnCtrl=None, hmc=None, hideManipOnShift=None, hms=None, hideManipOnShiftCtrl=None, hsc=None, linePick=None, lp=None, lineSize=None, ls=None, pivotRotateHandleOffset=None, pro=None, planeHandleOffset=None, pho=None, pointSize=None, ps=None, preselectHighlight=None, psh=None, refreshMode=None, rm=None, relative=None, r=None, rememberActiveHandle=None, rah=None, rememberActiveHandleAfterToolSwitch=None, rhs=None, scale=None, s=None, showPivotRotateHandle=None, spr=None, showPlaneHandles=None, sph=None, *args, **kwargs):
    """
    Changes the global manipulator parameters
    """
    pass


def polyPrism(axis=None, ax=None, createUVs=None, cuv=None, length=None, l=None, numberOfSides=None, ns=None, sideLength=None, w=None, subdivisionsCaps=None, sc=None, subdivisionsHeight=None, sh=None, texture=None, tx=None, constructionHistory=None, ch=None, name=None, n=None, *args, **kwargs):
    """
    The prism command creates a new polygonal prism. 
    """
    pass


def AddKeyToolActivate(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def RaiseApplicationWindows(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DisplayViewport(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def floatSlider2(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand1=None, cc1=None, changeCommand2=None, cc2=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, maximum=None, max=None, minimum=None, min=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, polarity=None, pol=None, popupMenuArray=None, pma=None, positionControl1=None, pc1=None, positionControl2=None, pc2=None, preventOverride=None, po=None, useTemplate=None, ut=None, value1=None, v1=None, value2=None, v2=None, values=None, vs=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a float slider containing two handles. The two handles are arranged such that they cannot pass one another, thus handle 1 will always have a value less than or or equal to handle 2 when you adjust the values. Each handle may have a MEL command associated with it which is issued when the handle moves and thus can be used to update the values of plugs such as via a setAttr command. Each handle can also be associated with a float textfield to display the current value of the handle. 
    """
    pass


def GpuCacheExportAllOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SetMeshSprayTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def paneLayout(activeFrameThickness=None, aft=None, activePane=None, ap=None, activePaneIndex=None, api=None, annotation=None, ann=None, backgroundColor=None, bgc=None, childArray=None, ca=None, configuration=None, cn=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfChildren=None, nch=None, numberOfPopupMenus=None, npm=None, numberOfVisiblePanes=None, nvp=None, pane1=None, p1=None, pane2=None, p2=None, pane3=None, p3=None, pane4=None, p4=None, paneSize=None, ps=None, paneUnderPointer=None, pup=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, separatorMovedCommand=None, smc=None, separatorThickness=None, st=None, setPane=None, sp=None, staticHeightPane=None, shp=None, staticWidthPane=None, swp=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a pane layout.A pane layout may have any number of children but at any one time only certain children may be visible, as determined by the current layout configuration.For example a horizontally split pane shows only two children, one on top of the other and a visible separator between the two.The separator may be moved to vary the size of each pane.Various other pane configurations are available and all display a moveable separator that define the size of each pane in the layout. 
    """
    pass


def SmoothCurve(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def getLastError(*args, **kwargs):
    """
    
    """
    pass


def polyTransfer(alternateObject=None, ao=None, uvSets=None, uv=None, vertexColor=None, vc=None, vertices=None, v=None, caching=None, cch=None, constructionHistory=None, ch=None, name=None, n=None, nodeState=None, nds=None, *args, **kwargs):
    """
    Transfer information from one polygonal object to another one. Both objects must have identical topology, that is same vertex, edge, and face numbering. The flags specify which of the vertices, UV sets or vertex colors will be copied. 
    """
    pass


def percent(addPercent=None, ap=None, dropoffAxis=None, dax=None, dropoffCurve=None, dc=None, dropoffDistance=None, dds=None, dropoffPosition=None, dp=None, dropoffType=None, dt=None, multiplyPercent=None, mp=None, value=None, v=None, *args, **kwargs):
    """
    This command sets percent values on members of a weighted node such as a cluster or a jointCluster. With no flags specified the command sets the percent value for selected components of the specified node to the specified percent value. A dropoff from the specified percent value to 0 can be specified from a point, plane or curve using a dropoff distance around that shape. The percent value can also be added or multiplied with existing percent values of the node components. 
    """
    pass


def MoveTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def xgmPartBrushContext(*args, **kwargs):
    """
    
    """
    pass


def selectMode(component=None, co=None, hierarchical=None, h=None, leaf=None, l=None, object=None, o=None, preset=None, p=None, root=None, r=None, template=None, t=None, *args, **kwargs):
    """
    The 
    """
    pass


def contextInfo(c=None, c=None, escapeContext=None, esc=None, exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, title=None, t=None, *args, **kwargs):
    """
    This command allows you to get information on named contexts.
    """
    pass


def CutCurveOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def HypershadeRefreshSelectedSwatches(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateVolumeSphere(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def DeleteAllFurs(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ToggleEvaluationManagerVisibility(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bifMeshImport(*args, **kwargs):
    """
    
    """
    pass


def ConnectComponentsOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CircularFillet(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def optionVar(arraySize=None, arraySize=None, clearArray=None, ca=None, exists=None, ex=None, floatValue=None, fv=None, floatValueAppend=None, fva=None, intValue=None, iv=None, intValueAppend=None, iva=None, list=None, l=None, remove=None, rm=None, removeFromArray=None, rfa=None, stringValue=None, sv=None, stringValueAppend=None, sva=None, version=None, v=None, *args, **kwargs):
    """
    This command allows you to set and query variables which are persistent between different invocations of Maya.These variables are stored as part of the preferences. 
    """
    pass


def ambientLight(ambientShade=None, ambientShade=None, discRadius=None, drs=None, intensity=None, i=None, name=None, n=None, rgb=None, rgb=None, shadowColor=None, sc=None, shadowDither=None, sd=None, shadowSamples=None, sh=None, softShadow=None, ss=None, useRayTraceShadows=None, rs=None, *args, **kwargs):
    """
    The ambientLight command is used to edit the parameters of existing ambientLights, or to create new ones. The default behaviour is to create a new ambientlight. 
    """
    pass


def OutlinerDoHide(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def bakeDeformer(*args, **kwargs):
    """
    
    """
    pass


def texSelectContext(exists=None, ex=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, *args, **kwargs):
    """
    Command used to register the texSelectCtx tool.
    """
    pass


def subdDuplicateAndConnect(*args, **kwargs):
    """
    This command duplicates the input subdivision surface object, connects up the outSubdiv attribute of the original subd shape to the create attribute of the newly created duplicate shape and copies over the shader assignments from the original shape to the new duplicated shape. 
    """
    pass


def PolyExtrude(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def listHistory(allConnections=None, ac=None, allFuture=None, af=None, allGraphs=None, ag=None, breadthFirst=None, bf=None, future=None, f=None, futureLocalAttr=None, fl=None, futureWorldAttr=None, fw=None, groupLevels=None, gl=None, historyAttr=None, ha=None, interestLevel=None, il=None, leaf=None, lf=None, levels=None, lv=None, pruneDagObjects=None, pdo=None, *args, **kwargs):
    """
    This command traverses backwards or forwards in the graph from the specified node and returns all of the nodes whose construction history it passes through. The construction history consists of connections to specific attributes of a node defined as the creators and results of the node's main data, eg. the curve for a Nurbs Curve node. 
    """
    pass


def CreateCameraAimOptions(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PostInfinityConstant(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def GraphEditorFramePlaybackRange(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def ikSpringSolverRestPose(*args, **kwargs):
    """
    
    """
    pass


def XgmSetWidthBrushTool(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def SewUVs3D(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def workspaceLayoutManager(collapseMainWindowControls=None, cmw=None, current=None, cu=None, delete=None, d=None, i=None, i=None, listLayouts=None, ll=None, listUserLayouts=None, lul=None, modified=None, m=None, parentWorkspaceControl=None, pwc=None, reset=None, rs=None, restoreMainWindowControls=None, rmw=None, save=None, s=None, saveAs=None, sa=None, setCurrent=None, sc=None, setCurrentCallback=None, scc=None, type=None, t=None, *args, **kwargs):
    """
    The Workspace Layout Manager loads and saves the layout of the various toolbars and windows in the user interface. This command allows listing and managing their properties. 
    """
    pass


def PolygonApplyColor(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dopeSheetEditor(autoFit=None, af=None, control=None, ctl=None, defineTemplate=None, dt=None, displayActiveKeyTangents=None, dat=None, displayActiveKeys=None, dak=None, displayInfinities=None, di=None, displayKeys=None, dk=None, displayTangents=None, dtn=None, displayValues=None, dv=None, docTag=None, dtg=None, exists=None, ex=None, filter=None, f=None, forceMainConnection=None, fmc=None, hierarchyBelow=None, hb=None, highlightConnection=None, hlc=None, lockMainConnection=None, lck=None, lookAt=None, la=None, mainListConnection=None, mlc=None, outliner=None, o=None, panel=None, pnl=None, parent=None, p=None, selectionConnection=None, slc=None, selectionWindow=None, sel=None, showScene=None, sc=None, showSummary=None, ss=None, showTicks=None, stk=None, snapTime=None, st=None, snapValue=None, sv=None, stateString=None, sts=None, unParent=None, up=None, unlockMainConnection=None, ulk=None, updateMainConnection=None, upd=None, useTemplate=None, ut=None, *args, **kwargs):
    """
    Edit a characteristic of a dope sheet editor
    """
    pass


def AutobindContainer(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def keyframeRegionSelectKeyCtx(exists=None, ex=None, history=None, ch=None, image1=None, i1=None, image2=None, i2=None, image3=None, i3=None, name=None, n=None, *args, **kwargs):
    """
    This command creates a context which may be used to select keyframes within the keyframe region of the dope sheet editor 
    """
    pass


def nurbsToSubdiv(constructionHistory=None, ch=None, name=None, n=None, object=None, o=None, *args, **kwargs):
    """
    This command converts a NURBS surface and produces a subd surface. The name of the new subdivision surface is returned. If construction history is ON, then the name of the new dependency node is returned as well. 
    """
    pass


def UIModeMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def CreateConstraintClip(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def dR_createCameraFromView(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def sbs_GetEnumName(*args, **kwargs):
    """
    
    """
    pass


def image(annotation=None, ann=None, backgroundColor=None, bgc=None, defineTemplate=None, dt=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a static image for non-xpm files. Any image file format supported by the file texture node is supported by this command. 
    """
    pass


def symbolCheckBox(annotation=None, ann=None, backgroundColor=None, bgc=None, changeCommand=None, cc=None, defineTemplate=None, dt=None, disableOffImage=None, dfi=None, disableOnImage=None, dni=None, docTag=None, dtg=None, dragCallback=None, dgc=None, dropCallback=None, dpc=None, enable=None, en=None, enableBackground=None, ebg=None, exists=None, ex=None, fullPathName=None, fpn=None, height=None, h=None, highlightColor=None, hlc=None, image=None, i=None, innerMargin=None, im=None, isObscured=None, io=None, manage=None, m=None, noBackground=None, nbg=None, numberOfPopupMenus=None, npm=None, offCommand=None, ofc=None, offImage=None, ofi=None, onCommand=None, onc=None, onImage=None, oni=None, parent=None, p=None, popupMenuArray=None, pma=None, preventOverride=None, po=None, useTemplate=None, ut=None, value=None, v=None, visible=None, vis=None, visibleChangeCommand=None, vcc=None, width=None, w=None, *args, **kwargs):
    """
    This command creates a symbol check box.A symbol check box is a simple control containing a pixmap and a state of either on or off. Commands can be attached to any or all of the following events:when the symbol check box is turned on, turned off, or simply when it's state is changed. 
    """
    pass


def AddInbetween(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def PixelMoveDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def UnifyTangents(*args, **kwargs):
    """
    runTimeCommand
    """
    pass


def KeyframeTangentMarkingMenuPopDown(*args, **kwargs):
    """
    runTimeCommand
    """
    pass
